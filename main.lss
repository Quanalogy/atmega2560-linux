
main.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00002630  000026a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002630  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000011  00000000  00000000  000026a4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000026b8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000026f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000008d2  00000000  00000000  00002718  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000113  00000000  00000000  00002fea  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000319  00000000  00000000  000030fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  00003418  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000162  00000000  00000000  0000345c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000062  00000000  00000000  000035be  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a8  00000000  00000000  00003620  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 83 00 	jmp	0x106	; 0x106 <__ctors_end>
       4:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
       8:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
       c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      10:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      14:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      18:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      1c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      20:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      24:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      28:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      2c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      30:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      34:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      38:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      3c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      40:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      44:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      48:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      4c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      50:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      54:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      58:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      5c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      60:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      64:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      68:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      6c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      70:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      74:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      78:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      7c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      80:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      84:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      88:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      8c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      90:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      94:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      98:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      9c:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      a0:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      a4:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      a8:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      ac:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      b0:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      b4:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      b8:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      bc:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      c0:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      c4:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      c8:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      cc:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      d0:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      d4:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      d8:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      dc:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>
      e0:	0c 94 8f 00 	jmp	0x11e	; 0x11e <__bad_interrupt>

000000e4 <__trampolines_end>:
      e4:	45 46       	sbci	r20, 0x65	; 101
      e6:	47 65       	ori	r20, 0x57	; 87
      e8:	66 67       	ori	r22, 0x76	; 118
	...

000000eb <__c.2159>:
      eb:	20 2b 2d 2e 30 31 32 33 34 35 36 37 38 39 68 00      +-.0123456789h.

000000fb <__c.2294>:
      fb:	63 64 69 6e 6f 70 73 75 78 58 00                    cdinopsuxX.

00000106 <__ctors_end>:
     106:	11 24       	eor	r1, r1
     108:	1f be       	out	0x3f, r1	; 63
     10a:	cf ef       	ldi	r28, 0xFF	; 255
     10c:	d1 e2       	ldi	r29, 0x21	; 33
     10e:	de bf       	out	0x3e, r29	; 62
     110:	cd bf       	out	0x3d, r28	; 61
     112:	00 e0       	ldi	r16, 0x00	; 0
     114:	0c bf       	out	0x3c, r16	; 60
     116:	0e 94 91 00 	call	0x122	; 0x122 <main>
     11a:	0c 94 16 13 	jmp	0x262c	; 0x262c <_exit>

0000011e <__bad_interrupt>:
     11e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000122 <main>:
//#define F_CPU 16000000
#include <util/delay.h>
#include <avr/io.h>

int main(void)
{
     122:	0f 93       	push	r16
     124:	1f 93       	push	r17
     126:	cf 93       	push	r28
     128:	df 93       	push	r29
     12a:	cd b7       	in	r28, 0x3d	; 61
     12c:	de b7       	in	r29, 0x3e	; 62
     12e:	c8 50       	subi	r28, 0x08	; 8
     130:	d1 40       	sbci	r29, 0x01	; 1
     132:	0f b6       	in	r0, 0x3f	; 63
     134:	f8 94       	cli
     136:	de bf       	out	0x3e, r29	; 62
     138:	0f be       	out	0x3f, r0	; 63
     13a:	cd bf       	out	0x3d, r28	; 61
	DDRA = 0;
     13c:	81 e2       	ldi	r24, 0x21	; 33
     13e:	90 e0       	ldi	r25, 0x00	; 0
     140:	fc 01       	movw	r30, r24
     142:	10 82       	st	Z, r1
	DDRB = 0xFF;
     144:	84 e2       	ldi	r24, 0x24	; 36
     146:	90 e0       	ldi	r25, 0x00	; 0
     148:	2f ef       	ldi	r18, 0xFF	; 255
     14a:	fc 01       	movw	r30, r24
     14c:	20 83       	st	Z, r18
	while (1)
	{
		if ((PINA & 0b10000000) == 0)
     14e:	80 e2       	ldi	r24, 0x20	; 32
     150:	90 e0       	ldi	r25, 0x00	; 0
     152:	fc 01       	movw	r30, r24
     154:	80 81       	ld	r24, Z
     156:	88 23       	and	r24, r24
     158:	0c f4       	brge	.+2      	; 0x15c <main+0x3a>
     15a:	f6 c0       	rjmp	.+492    	; 0x348 <main+0x226>
     15c:	80 e0       	ldi	r24, 0x00	; 0
     15e:	90 e0       	ldi	r25, 0x00	; 0
     160:	af e6       	ldi	r26, 0x6F	; 111
     162:	b4 e4       	ldi	r27, 0x44	; 68
     164:	89 83       	std	Y+1, r24	; 0x01
     166:	9a 83       	std	Y+2, r25	; 0x02
     168:	ab 83       	std	Y+3, r26	; 0x03
     16a:	bc 83       	std	Y+4, r27	; 0x04
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ; 
	__tmp = ((F_CPU) / 3e6) * __us;
     16c:	2b ea       	ldi	r18, 0xAB	; 171
     16e:	3a ea       	ldi	r19, 0xAA	; 170
     170:	4a ea       	ldi	r20, 0xAA	; 170
     172:	50 e4       	ldi	r21, 0x40	; 64
     174:	69 81       	ldd	r22, Y+1	; 0x01
     176:	7a 81       	ldd	r23, Y+2	; 0x02
     178:	8b 81       	ldd	r24, Y+3	; 0x03
     17a:	9c 81       	ldd	r25, Y+4	; 0x04
     17c:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
     180:	dc 01       	movw	r26, r24
     182:	cb 01       	movw	r24, r22
     184:	8d 83       	std	Y+5, r24	; 0x05
     186:	9e 83       	std	Y+6, r25	; 0x06
     188:	af 83       	std	Y+7, r26	; 0x07
     18a:	b8 87       	std	Y+8, r27	; 0x08
	__tmp2 = ((F_CPU) / 4e6) * __us;
     18c:	20 e0       	ldi	r18, 0x00	; 0
     18e:	30 e0       	ldi	r19, 0x00	; 0
     190:	40 e8       	ldi	r20, 0x80	; 128
     192:	50 e4       	ldi	r21, 0x40	; 64
     194:	69 81       	ldd	r22, Y+1	; 0x01
     196:	7a 81       	ldd	r23, Y+2	; 0x02
     198:	8b 81       	ldd	r24, Y+3	; 0x03
     19a:	9c 81       	ldd	r25, Y+4	; 0x04
     19c:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
     1a0:	dc 01       	movw	r26, r24
     1a2:	cb 01       	movw	r24, r22
     1a4:	89 87       	std	Y+9, r24	; 0x09
     1a6:	9a 87       	std	Y+10, r25	; 0x0a
     1a8:	ab 87       	std	Y+11, r26	; 0x0b
     1aa:	bc 87       	std	Y+12, r27	; 0x0c
	if (__tmp < 1.0)
     1ac:	20 e0       	ldi	r18, 0x00	; 0
     1ae:	30 e0       	ldi	r19, 0x00	; 0
     1b0:	40 e8       	ldi	r20, 0x80	; 128
     1b2:	5f e3       	ldi	r21, 0x3F	; 63
     1b4:	6d 81       	ldd	r22, Y+5	; 0x05
     1b6:	7e 81       	ldd	r23, Y+6	; 0x06
     1b8:	8f 81       	ldd	r24, Y+7	; 0x07
     1ba:	98 85       	ldd	r25, Y+8	; 0x08
     1bc:	0e 94 85 10 	call	0x210a	; 0x210a <__cmpsf2>
     1c0:	88 23       	and	r24, r24
     1c2:	1c f4       	brge	.+6      	; 0x1ca <main+0xa8>
		__ticks = 1;
     1c4:	81 e0       	ldi	r24, 0x01	; 1
     1c6:	8d 87       	std	Y+13, r24	; 0x0d
     1c8:	b7 c0       	rjmp	.+366    	; 0x338 <main+0x216>
	else if (__tmp2 > 65535)
     1ca:	20 e0       	ldi	r18, 0x00	; 0
     1cc:	3f ef       	ldi	r19, 0xFF	; 255
     1ce:	4f e7       	ldi	r20, 0x7F	; 127
     1d0:	57 e4       	ldi	r21, 0x47	; 71
     1d2:	69 85       	ldd	r22, Y+9	; 0x09
     1d4:	7a 85       	ldd	r23, Y+10	; 0x0a
     1d6:	8b 85       	ldd	r24, Y+11	; 0x0b
     1d8:	9c 85       	ldd	r25, Y+12	; 0x0c
     1da:	0e 94 a0 11 	call	0x2340	; 0x2340 <__gesf2>
     1de:	18 16       	cp	r1, r24
     1e0:	0c f0       	brlt	.+2      	; 0x1e4 <main+0xc2>
     1e2:	7f c0       	rjmp	.+254    	; 0x2e2 <main+0x1c0>
	{
		_delay_ms(__us / 1000.0);
     1e4:	20 e0       	ldi	r18, 0x00	; 0
     1e6:	30 e0       	ldi	r19, 0x00	; 0
     1e8:	4a e7       	ldi	r20, 0x7A	; 122
     1ea:	54 e4       	ldi	r21, 0x44	; 68
     1ec:	69 81       	ldd	r22, Y+1	; 0x01
     1ee:	7a 81       	ldd	r23, Y+2	; 0x02
     1f0:	8b 81       	ldd	r24, Y+3	; 0x03
     1f2:	9c 81       	ldd	r25, Y+4	; 0x04
     1f4:	0e 94 8a 10 	call	0x2114	; 0x2114 <__divsf3>
     1f8:	dc 01       	movw	r26, r24
     1fa:	cb 01       	movw	r24, r22
     1fc:	8e 87       	std	Y+14, r24	; 0x0e
     1fe:	9f 87       	std	Y+15, r25	; 0x0f
     200:	a8 8b       	std	Y+16, r26	; 0x10
     202:	b9 8b       	std	Y+17, r27	; 0x11

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     204:	20 e0       	ldi	r18, 0x00	; 0
     206:	30 e0       	ldi	r19, 0x00	; 0
     208:	4a e7       	ldi	r20, 0x7A	; 122
     20a:	55 e4       	ldi	r21, 0x45	; 69
     20c:	6e 85       	ldd	r22, Y+14	; 0x0e
     20e:	7f 85       	ldd	r23, Y+15	; 0x0f
     210:	88 89       	ldd	r24, Y+16	; 0x10
     212:	99 89       	ldd	r25, Y+17	; 0x11
     214:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
     218:	dc 01       	movw	r26, r24
     21a:	cb 01       	movw	r24, r22
     21c:	8a 8b       	std	Y+18, r24	; 0x12
     21e:	9b 8b       	std	Y+19, r25	; 0x13
     220:	ac 8b       	std	Y+20, r26	; 0x14
     222:	bd 8b       	std	Y+21, r27	; 0x15
	if (__tmp < 1.0)
     224:	20 e0       	ldi	r18, 0x00	; 0
     226:	30 e0       	ldi	r19, 0x00	; 0
     228:	40 e8       	ldi	r20, 0x80	; 128
     22a:	5f e3       	ldi	r21, 0x3F	; 63
     22c:	6a 89       	ldd	r22, Y+18	; 0x12
     22e:	7b 89       	ldd	r23, Y+19	; 0x13
     230:	8c 89       	ldd	r24, Y+20	; 0x14
     232:	9d 89       	ldd	r25, Y+21	; 0x15
     234:	0e 94 85 10 	call	0x210a	; 0x210a <__cmpsf2>
     238:	88 23       	and	r24, r24
     23a:	2c f4       	brge	.+10     	; 0x246 <main+0x124>
		__ticks = 1;
     23c:	81 e0       	ldi	r24, 0x01	; 1
     23e:	90 e0       	ldi	r25, 0x00	; 0
     240:	9f 8b       	std	Y+23, r25	; 0x17
     242:	8e 8b       	std	Y+22, r24	; 0x16
     244:	41 c0       	rjmp	.+130    	; 0x2c8 <main+0x1a6>
	else if (__tmp > 65535)
     246:	20 e0       	ldi	r18, 0x00	; 0
     248:	3f ef       	ldi	r19, 0xFF	; 255
     24a:	4f e7       	ldi	r20, 0x7F	; 127
     24c:	57 e4       	ldi	r21, 0x47	; 71
     24e:	6a 89       	ldd	r22, Y+18	; 0x12
     250:	7b 89       	ldd	r23, Y+19	; 0x13
     252:	8c 89       	ldd	r24, Y+20	; 0x14
     254:	9d 89       	ldd	r25, Y+21	; 0x15
     256:	0e 94 a0 11 	call	0x2340	; 0x2340 <__gesf2>
     25a:	18 16       	cp	r1, r24
     25c:	5c f5       	brge	.+86     	; 0x2b4 <main+0x192>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     25e:	20 e0       	ldi	r18, 0x00	; 0
     260:	30 e0       	ldi	r19, 0x00	; 0
     262:	40 e2       	ldi	r20, 0x20	; 32
     264:	51 e4       	ldi	r21, 0x41	; 65
     266:	6e 85       	ldd	r22, Y+14	; 0x0e
     268:	7f 85       	ldd	r23, Y+15	; 0x0f
     26a:	88 89       	ldd	r24, Y+16	; 0x10
     26c:	99 89       	ldd	r25, Y+17	; 0x11
     26e:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
     272:	dc 01       	movw	r26, r24
     274:	cb 01       	movw	r24, r22
     276:	bc 01       	movw	r22, r24
     278:	cd 01       	movw	r24, r26
     27a:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
     27e:	dc 01       	movw	r26, r24
     280:	cb 01       	movw	r24, r22
     282:	9f 8b       	std	Y+23, r25	; 0x17
     284:	8e 8b       	std	Y+22, r24	; 0x16
     286:	0f c0       	rjmp	.+30     	; 0x2a6 <main+0x184>
     288:	80 e9       	ldi	r24, 0x90	; 144
     28a:	91 e0       	ldi	r25, 0x01	; 1
     28c:	99 8f       	std	Y+25, r25	; 0x19
     28e:	88 8f       	std	Y+24, r24	; 0x18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     290:	88 8d       	ldd	r24, Y+24	; 0x18
     292:	99 8d       	ldd	r25, Y+25	; 0x19
     294:	01 97       	sbiw	r24, 0x01	; 1
     296:	f1 f7       	brne	.-4      	; 0x294 <main+0x172>
     298:	99 8f       	std	Y+25, r25	; 0x19
     29a:	88 8f       	std	Y+24, r24	; 0x18
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     29c:	8e 89       	ldd	r24, Y+22	; 0x16
     29e:	9f 89       	ldd	r25, Y+23	; 0x17
     2a0:	01 97       	sbiw	r24, 0x01	; 1
     2a2:	9f 8b       	std	Y+23, r25	; 0x17
     2a4:	8e 8b       	std	Y+22, r24	; 0x16
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     2a6:	8e 89       	ldd	r24, Y+22	; 0x16
     2a8:	9f 89       	ldd	r25, Y+23	; 0x17
     2aa:	89 2b       	or	r24, r25
     2ac:	69 f7       	brne	.-38     	; 0x288 <main+0x166>
     2ae:	89 a1       	ldd	r24, Y+33	; 0x21
     2b0:	8d 87       	std	Y+13, r24	; 0x0d
     2b2:	42 c0       	rjmp	.+132    	; 0x338 <main+0x216>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     2b4:	6a 89       	ldd	r22, Y+18	; 0x12
     2b6:	7b 89       	ldd	r23, Y+19	; 0x13
     2b8:	8c 89       	ldd	r24, Y+20	; 0x14
     2ba:	9d 89       	ldd	r25, Y+21	; 0x15
     2bc:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
     2c0:	dc 01       	movw	r26, r24
     2c2:	cb 01       	movw	r24, r22
     2c4:	9f 8b       	std	Y+23, r25	; 0x17
     2c6:	8e 8b       	std	Y+22, r24	; 0x16
     2c8:	8e 89       	ldd	r24, Y+22	; 0x16
     2ca:	9f 89       	ldd	r25, Y+23	; 0x17
     2cc:	9b 8f       	std	Y+27, r25	; 0x1b
     2ce:	8a 8f       	std	Y+26, r24	; 0x1a
     2d0:	8a 8d       	ldd	r24, Y+26	; 0x1a
     2d2:	9b 8d       	ldd	r25, Y+27	; 0x1b
     2d4:	01 97       	sbiw	r24, 0x01	; 1
     2d6:	f1 f7       	brne	.-4      	; 0x2d4 <main+0x1b2>
     2d8:	9b 8f       	std	Y+27, r25	; 0x1b
     2da:	8a 8f       	std	Y+26, r24	; 0x1a
     2dc:	89 a1       	ldd	r24, Y+33	; 0x21
     2de:	8d 87       	std	Y+13, r24	; 0x0d
     2e0:	2b c0       	rjmp	.+86     	; 0x338 <main+0x216>
		__ticks = 1;
	else if (__tmp2 > 65535)
	{
		_delay_ms(__us / 1000.0);
	}
	else if (__tmp > 255)
     2e2:	20 e0       	ldi	r18, 0x00	; 0
     2e4:	30 e0       	ldi	r19, 0x00	; 0
     2e6:	4f e7       	ldi	r20, 0x7F	; 127
     2e8:	53 e4       	ldi	r21, 0x43	; 67
     2ea:	6d 81       	ldd	r22, Y+5	; 0x05
     2ec:	7e 81       	ldd	r23, Y+6	; 0x06
     2ee:	8f 81       	ldd	r24, Y+7	; 0x07
     2f0:	98 85       	ldd	r25, Y+8	; 0x08
     2f2:	0e 94 a0 11 	call	0x2340	; 0x2340 <__gesf2>
     2f6:	18 16       	cp	r1, r24
     2f8:	b4 f4       	brge	.+44     	; 0x326 <main+0x204>
	{
		uint16_t __ticks=(uint16_t)__tmp2;
     2fa:	69 85       	ldd	r22, Y+9	; 0x09
     2fc:	7a 85       	ldd	r23, Y+10	; 0x0a
     2fe:	8b 85       	ldd	r24, Y+11	; 0x0b
     300:	9c 85       	ldd	r25, Y+12	; 0x0c
     302:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
     306:	dc 01       	movw	r26, r24
     308:	cb 01       	movw	r24, r22
     30a:	9d 8f       	std	Y+29, r25	; 0x1d
     30c:	8c 8f       	std	Y+28, r24	; 0x1c
     30e:	8c 8d       	ldd	r24, Y+28	; 0x1c
     310:	9d 8d       	ldd	r25, Y+29	; 0x1d
     312:	9f 8f       	std	Y+31, r25	; 0x1f
     314:	8e 8f       	std	Y+30, r24	; 0x1e
     316:	8e 8d       	ldd	r24, Y+30	; 0x1e
     318:	9f 8d       	ldd	r25, Y+31	; 0x1f
     31a:	01 97       	sbiw	r24, 0x01	; 1
     31c:	f1 f7       	brne	.-4      	; 0x31a <main+0x1f8>
     31e:	9f 8f       	std	Y+31, r25	; 0x1f
     320:	8e 8f       	std	Y+30, r24	; 0x1e
     322:	0c 94 21 0d 	jmp	0x1a42	; 0x1a42 <main+0x1920>
		_delay_loop_2(__ticks);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     326:	6d 81       	ldd	r22, Y+5	; 0x05
     328:	7e 81       	ldd	r23, Y+6	; 0x06
     32a:	8f 81       	ldd	r24, Y+7	; 0x07
     32c:	98 85       	ldd	r25, Y+8	; 0x08
     32e:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
     332:	dc 01       	movw	r26, r24
     334:	cb 01       	movw	r24, r22
     336:	8d 87       	std	Y+13, r24	; 0x0d
     338:	8d 85       	ldd	r24, Y+13	; 0x0d
     33a:	88 a3       	std	Y+32, r24	; 0x20
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     33c:	88 a1       	ldd	r24, Y+32	; 0x20
     33e:	8a 95       	dec	r24
     340:	f1 f7       	brne	.-4      	; 0x33e <main+0x21c>
     342:	88 a3       	std	Y+32, r24	; 0x20
     344:	0c 94 21 0d 	jmp	0x1a42	; 0x1a42 <main+0x1920>
		_delay_us(956);
		else if ((PINA & 0b01000000) == 0)
     348:	80 e2       	ldi	r24, 0x20	; 32
     34a:	90 e0       	ldi	r25, 0x00	; 0
     34c:	fc 01       	movw	r30, r24
     34e:	80 81       	ld	r24, Z
     350:	88 2f       	mov	r24, r24
     352:	90 e0       	ldi	r25, 0x00	; 0
     354:	80 74       	andi	r24, 0x40	; 64
     356:	99 27       	eor	r25, r25
     358:	89 2b       	or	r24, r25
     35a:	09 f0       	breq	.+2      	; 0x35e <main+0x23c>
     35c:	15 c1       	rjmp	.+554    	; 0x588 <main+0x466>
     35e:	80 e0       	ldi	r24, 0x00	; 0
     360:	90 ec       	ldi	r25, 0xC0	; 192
     362:	a4 e5       	ldi	r26, 0x54	; 84
     364:	b4 e4       	ldi	r27, 0x44	; 68
     366:	8a a3       	std	Y+34, r24	; 0x22
     368:	9b a3       	std	Y+35, r25	; 0x23
     36a:	ac a3       	std	Y+36, r26	; 0x24
     36c:	bd a3       	std	Y+37, r27	; 0x25
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ; 
	__tmp = ((F_CPU) / 3e6) * __us;
     36e:	2b ea       	ldi	r18, 0xAB	; 171
     370:	3a ea       	ldi	r19, 0xAA	; 170
     372:	4a ea       	ldi	r20, 0xAA	; 170
     374:	50 e4       	ldi	r21, 0x40	; 64
     376:	6a a1       	ldd	r22, Y+34	; 0x22
     378:	7b a1       	ldd	r23, Y+35	; 0x23
     37a:	8c a1       	ldd	r24, Y+36	; 0x24
     37c:	9d a1       	ldd	r25, Y+37	; 0x25
     37e:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
     382:	dc 01       	movw	r26, r24
     384:	cb 01       	movw	r24, r22
     386:	8e a3       	std	Y+38, r24	; 0x26
     388:	9f a3       	std	Y+39, r25	; 0x27
     38a:	a8 a7       	std	Y+40, r26	; 0x28
     38c:	b9 a7       	std	Y+41, r27	; 0x29
	__tmp2 = ((F_CPU) / 4e6) * __us;
     38e:	20 e0       	ldi	r18, 0x00	; 0
     390:	30 e0       	ldi	r19, 0x00	; 0
     392:	40 e8       	ldi	r20, 0x80	; 128
     394:	50 e4       	ldi	r21, 0x40	; 64
     396:	6a a1       	ldd	r22, Y+34	; 0x22
     398:	7b a1       	ldd	r23, Y+35	; 0x23
     39a:	8c a1       	ldd	r24, Y+36	; 0x24
     39c:	9d a1       	ldd	r25, Y+37	; 0x25
     39e:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
     3a2:	dc 01       	movw	r26, r24
     3a4:	cb 01       	movw	r24, r22
     3a6:	8a a7       	std	Y+42, r24	; 0x2a
     3a8:	9b a7       	std	Y+43, r25	; 0x2b
     3aa:	ac a7       	std	Y+44, r26	; 0x2c
     3ac:	bd a7       	std	Y+45, r27	; 0x2d
	if (__tmp < 1.0)
     3ae:	20 e0       	ldi	r18, 0x00	; 0
     3b0:	30 e0       	ldi	r19, 0x00	; 0
     3b2:	40 e8       	ldi	r20, 0x80	; 128
     3b4:	5f e3       	ldi	r21, 0x3F	; 63
     3b6:	6e a1       	ldd	r22, Y+38	; 0x26
     3b8:	7f a1       	ldd	r23, Y+39	; 0x27
     3ba:	88 a5       	ldd	r24, Y+40	; 0x28
     3bc:	99 a5       	ldd	r25, Y+41	; 0x29
     3be:	0e 94 85 10 	call	0x210a	; 0x210a <__cmpsf2>
     3c2:	88 23       	and	r24, r24
     3c4:	1c f4       	brge	.+6      	; 0x3cc <main+0x2aa>
		__ticks = 1;
     3c6:	81 e0       	ldi	r24, 0x01	; 1
     3c8:	8e a7       	std	Y+46, r24	; 0x2e
     3ca:	c9 c0       	rjmp	.+402    	; 0x55e <main+0x43c>
	else if (__tmp2 > 65535)
     3cc:	20 e0       	ldi	r18, 0x00	; 0
     3ce:	3f ef       	ldi	r19, 0xFF	; 255
     3d0:	4f e7       	ldi	r20, 0x7F	; 127
     3d2:	57 e4       	ldi	r21, 0x47	; 71
     3d4:	6a a5       	ldd	r22, Y+42	; 0x2a
     3d6:	7b a5       	ldd	r23, Y+43	; 0x2b
     3d8:	8c a5       	ldd	r24, Y+44	; 0x2c
     3da:	9d a5       	ldd	r25, Y+45	; 0x2d
     3dc:	0e 94 a0 11 	call	0x2340	; 0x2340 <__gesf2>
     3e0:	18 16       	cp	r1, r24
     3e2:	0c f0       	brlt	.+2      	; 0x3e6 <main+0x2c4>
     3e4:	87 c0       	rjmp	.+270    	; 0x4f4 <main+0x3d2>
	{
		_delay_ms(__us / 1000.0);
     3e6:	20 e0       	ldi	r18, 0x00	; 0
     3e8:	30 e0       	ldi	r19, 0x00	; 0
     3ea:	4a e7       	ldi	r20, 0x7A	; 122
     3ec:	54 e4       	ldi	r21, 0x44	; 68
     3ee:	6a a1       	ldd	r22, Y+34	; 0x22
     3f0:	7b a1       	ldd	r23, Y+35	; 0x23
     3f2:	8c a1       	ldd	r24, Y+36	; 0x24
     3f4:	9d a1       	ldd	r25, Y+37	; 0x25
     3f6:	0e 94 8a 10 	call	0x2114	; 0x2114 <__divsf3>
     3fa:	dc 01       	movw	r26, r24
     3fc:	cb 01       	movw	r24, r22
     3fe:	8f a7       	std	Y+47, r24	; 0x2f
     400:	98 ab       	std	Y+48, r25	; 0x30
     402:	a9 ab       	std	Y+49, r26	; 0x31
     404:	ba ab       	std	Y+50, r27	; 0x32

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     406:	20 e0       	ldi	r18, 0x00	; 0
     408:	30 e0       	ldi	r19, 0x00	; 0
     40a:	4a e7       	ldi	r20, 0x7A	; 122
     40c:	55 e4       	ldi	r21, 0x45	; 69
     40e:	6f a5       	ldd	r22, Y+47	; 0x2f
     410:	78 a9       	ldd	r23, Y+48	; 0x30
     412:	89 a9       	ldd	r24, Y+49	; 0x31
     414:	9a a9       	ldd	r25, Y+50	; 0x32
     416:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
     41a:	dc 01       	movw	r26, r24
     41c:	cb 01       	movw	r24, r22
     41e:	8b ab       	std	Y+51, r24	; 0x33
     420:	9c ab       	std	Y+52, r25	; 0x34
     422:	ad ab       	std	Y+53, r26	; 0x35
     424:	be ab       	std	Y+54, r27	; 0x36
	if (__tmp < 1.0)
     426:	20 e0       	ldi	r18, 0x00	; 0
     428:	30 e0       	ldi	r19, 0x00	; 0
     42a:	40 e8       	ldi	r20, 0x80	; 128
     42c:	5f e3       	ldi	r21, 0x3F	; 63
     42e:	6b a9       	ldd	r22, Y+51	; 0x33
     430:	7c a9       	ldd	r23, Y+52	; 0x34
     432:	8d a9       	ldd	r24, Y+53	; 0x35
     434:	9e a9       	ldd	r25, Y+54	; 0x36
     436:	0e 94 85 10 	call	0x210a	; 0x210a <__cmpsf2>
     43a:	88 23       	and	r24, r24
     43c:	2c f4       	brge	.+10     	; 0x448 <main+0x326>
		__ticks = 1;
     43e:	81 e0       	ldi	r24, 0x01	; 1
     440:	90 e0       	ldi	r25, 0x00	; 0
     442:	98 af       	std	Y+56, r25	; 0x38
     444:	8f ab       	std	Y+55, r24	; 0x37
     446:	45 c0       	rjmp	.+138    	; 0x4d2 <main+0x3b0>
	else if (__tmp > 65535)
     448:	20 e0       	ldi	r18, 0x00	; 0
     44a:	3f ef       	ldi	r19, 0xFF	; 255
     44c:	4f e7       	ldi	r20, 0x7F	; 127
     44e:	57 e4       	ldi	r21, 0x47	; 71
     450:	6b a9       	ldd	r22, Y+51	; 0x33
     452:	7c a9       	ldd	r23, Y+52	; 0x34
     454:	8d a9       	ldd	r24, Y+53	; 0x35
     456:	9e a9       	ldd	r25, Y+54	; 0x36
     458:	0e 94 a0 11 	call	0x2340	; 0x2340 <__gesf2>
     45c:	18 16       	cp	r1, r24
     45e:	7c f5       	brge	.+94     	; 0x4be <main+0x39c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     460:	20 e0       	ldi	r18, 0x00	; 0
     462:	30 e0       	ldi	r19, 0x00	; 0
     464:	40 e2       	ldi	r20, 0x20	; 32
     466:	51 e4       	ldi	r21, 0x41	; 65
     468:	6f a5       	ldd	r22, Y+47	; 0x2f
     46a:	78 a9       	ldd	r23, Y+48	; 0x30
     46c:	89 a9       	ldd	r24, Y+49	; 0x31
     46e:	9a a9       	ldd	r25, Y+50	; 0x32
     470:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
     474:	dc 01       	movw	r26, r24
     476:	cb 01       	movw	r24, r22
     478:	bc 01       	movw	r22, r24
     47a:	cd 01       	movw	r24, r26
     47c:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
     480:	dc 01       	movw	r26, r24
     482:	cb 01       	movw	r24, r22
     484:	98 af       	std	Y+56, r25	; 0x38
     486:	8f ab       	std	Y+55, r24	; 0x37
     488:	0f c0       	rjmp	.+30     	; 0x4a8 <main+0x386>
     48a:	80 e9       	ldi	r24, 0x90	; 144
     48c:	91 e0       	ldi	r25, 0x01	; 1
     48e:	9a af       	std	Y+58, r25	; 0x3a
     490:	89 af       	std	Y+57, r24	; 0x39
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     492:	89 ad       	ldd	r24, Y+57	; 0x39
     494:	9a ad       	ldd	r25, Y+58	; 0x3a
     496:	01 97       	sbiw	r24, 0x01	; 1
     498:	f1 f7       	brne	.-4      	; 0x496 <main+0x374>
     49a:	9a af       	std	Y+58, r25	; 0x3a
     49c:	89 af       	std	Y+57, r24	; 0x39
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     49e:	8f a9       	ldd	r24, Y+55	; 0x37
     4a0:	98 ad       	ldd	r25, Y+56	; 0x38
     4a2:	01 97       	sbiw	r24, 0x01	; 1
     4a4:	98 af       	std	Y+56, r25	; 0x38
     4a6:	8f ab       	std	Y+55, r24	; 0x37
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     4a8:	8f a9       	ldd	r24, Y+55	; 0x37
     4aa:	98 ad       	ldd	r25, Y+56	; 0x38
     4ac:	89 2b       	or	r24, r25
     4ae:	69 f7       	brne	.-38     	; 0x48a <main+0x368>
     4b0:	ce 01       	movw	r24, r28
     4b2:	8e 5b       	subi	r24, 0xBE	; 190
     4b4:	9f 4f       	sbci	r25, 0xFF	; 255
     4b6:	fc 01       	movw	r30, r24
     4b8:	80 81       	ld	r24, Z
     4ba:	8e a7       	std	Y+46, r24	; 0x2e
     4bc:	50 c0       	rjmp	.+160    	; 0x55e <main+0x43c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     4be:	6b a9       	ldd	r22, Y+51	; 0x33
     4c0:	7c a9       	ldd	r23, Y+52	; 0x34
     4c2:	8d a9       	ldd	r24, Y+53	; 0x35
     4c4:	9e a9       	ldd	r25, Y+54	; 0x36
     4c6:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
     4ca:	dc 01       	movw	r26, r24
     4cc:	cb 01       	movw	r24, r22
     4ce:	98 af       	std	Y+56, r25	; 0x38
     4d0:	8f ab       	std	Y+55, r24	; 0x37
     4d2:	8f a9       	ldd	r24, Y+55	; 0x37
     4d4:	98 ad       	ldd	r25, Y+56	; 0x38
     4d6:	9c af       	std	Y+60, r25	; 0x3c
     4d8:	8b af       	std	Y+59, r24	; 0x3b
     4da:	8b ad       	ldd	r24, Y+59	; 0x3b
     4dc:	9c ad       	ldd	r25, Y+60	; 0x3c
     4de:	01 97       	sbiw	r24, 0x01	; 1
     4e0:	f1 f7       	brne	.-4      	; 0x4de <main+0x3bc>
     4e2:	9c af       	std	Y+60, r25	; 0x3c
     4e4:	8b af       	std	Y+59, r24	; 0x3b
     4e6:	ce 01       	movw	r24, r28
     4e8:	8e 5b       	subi	r24, 0xBE	; 190
     4ea:	9f 4f       	sbci	r25, 0xFF	; 255
     4ec:	fc 01       	movw	r30, r24
     4ee:	80 81       	ld	r24, Z
     4f0:	8e a7       	std	Y+46, r24	; 0x2e
     4f2:	35 c0       	rjmp	.+106    	; 0x55e <main+0x43c>
		__ticks = 1;
	else if (__tmp2 > 65535)
	{
		_delay_ms(__us / 1000.0);
	}
	else if (__tmp > 255)
     4f4:	20 e0       	ldi	r18, 0x00	; 0
     4f6:	30 e0       	ldi	r19, 0x00	; 0
     4f8:	4f e7       	ldi	r20, 0x7F	; 127
     4fa:	53 e4       	ldi	r21, 0x43	; 67
     4fc:	6e a1       	ldd	r22, Y+38	; 0x26
     4fe:	7f a1       	ldd	r23, Y+39	; 0x27
     500:	88 a5       	ldd	r24, Y+40	; 0x28
     502:	99 a5       	ldd	r25, Y+41	; 0x29
     504:	0e 94 a0 11 	call	0x2340	; 0x2340 <__gesf2>
     508:	18 16       	cp	r1, r24
     50a:	04 f5       	brge	.+64     	; 0x54c <main+0x42a>
	{
		uint16_t __ticks=(uint16_t)__tmp2;
     50c:	6a a5       	ldd	r22, Y+42	; 0x2a
     50e:	7b a5       	ldd	r23, Y+43	; 0x2b
     510:	8c a5       	ldd	r24, Y+44	; 0x2c
     512:	9d a5       	ldd	r25, Y+45	; 0x2d
     514:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
     518:	dc 01       	movw	r26, r24
     51a:	cb 01       	movw	r24, r22
     51c:	9e af       	std	Y+62, r25	; 0x3e
     51e:	8d af       	std	Y+61, r24	; 0x3d
     520:	2d ad       	ldd	r18, Y+61	; 0x3d
     522:	3e ad       	ldd	r19, Y+62	; 0x3e
     524:	ce 01       	movw	r24, r28
     526:	cf 96       	adiw	r24, 0x3f	; 63
     528:	fc 01       	movw	r30, r24
     52a:	31 83       	std	Z+1, r19	; 0x01
     52c:	20 83       	st	Z, r18
     52e:	ce 01       	movw	r24, r28
     530:	cf 96       	adiw	r24, 0x3f	; 63
     532:	fc 01       	movw	r30, r24
     534:	80 81       	ld	r24, Z
     536:	91 81       	ldd	r25, Z+1	; 0x01
     538:	01 97       	sbiw	r24, 0x01	; 1
     53a:	f1 f7       	brne	.-4      	; 0x538 <main+0x416>
     53c:	9e 01       	movw	r18, r28
     53e:	21 5c       	subi	r18, 0xC1	; 193
     540:	3f 4f       	sbci	r19, 0xFF	; 255
     542:	f9 01       	movw	r30, r18
     544:	91 83       	std	Z+1, r25	; 0x01
     546:	80 83       	st	Z, r24
     548:	0c 94 21 0d 	jmp	0x1a42	; 0x1a42 <main+0x1920>
		_delay_loop_2(__ticks);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     54c:	6e a1       	ldd	r22, Y+38	; 0x26
     54e:	7f a1       	ldd	r23, Y+39	; 0x27
     550:	88 a5       	ldd	r24, Y+40	; 0x28
     552:	99 a5       	ldd	r25, Y+41	; 0x29
     554:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
     558:	dc 01       	movw	r26, r24
     55a:	cb 01       	movw	r24, r22
     55c:	8e a7       	std	Y+46, r24	; 0x2e
     55e:	ce 01       	movw	r24, r28
     560:	8f 5b       	subi	r24, 0xBF	; 191
     562:	9f 4f       	sbci	r25, 0xFF	; 255
     564:	2e a5       	ldd	r18, Y+46	; 0x2e
     566:	fc 01       	movw	r30, r24
     568:	20 83       	st	Z, r18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     56a:	ce 01       	movw	r24, r28
     56c:	8f 5b       	subi	r24, 0xBF	; 191
     56e:	9f 4f       	sbci	r25, 0xFF	; 255
     570:	fc 01       	movw	r30, r24
     572:	80 81       	ld	r24, Z
     574:	28 2f       	mov	r18, r24
     576:	2a 95       	dec	r18
     578:	f1 f7       	brne	.-4      	; 0x576 <main+0x454>
     57a:	ce 01       	movw	r24, r28
     57c:	8f 5b       	subi	r24, 0xBF	; 191
     57e:	9f 4f       	sbci	r25, 0xFF	; 255
     580:	fc 01       	movw	r30, r24
     582:	20 83       	st	Z, r18
     584:	0c 94 21 0d 	jmp	0x1a42	; 0x1a42 <main+0x1920>
		_delay_us(851);
		else if ((PINA & 0b00100000) == 0)
     588:	80 e2       	ldi	r24, 0x20	; 32
     58a:	90 e0       	ldi	r25, 0x00	; 0
     58c:	fc 01       	movw	r30, r24
     58e:	80 81       	ld	r24, Z
     590:	88 2f       	mov	r24, r24
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	80 72       	andi	r24, 0x20	; 32
     596:	99 27       	eor	r25, r25
     598:	89 2b       	or	r24, r25
     59a:	09 f0       	breq	.+2      	; 0x59e <main+0x47c>
     59c:	b1 c1       	rjmp	.+866    	; 0x900 <main+0x7de>
     59e:	9e 01       	movw	r18, r28
     5a0:	2d 5b       	subi	r18, 0xBD	; 189
     5a2:	3f 4f       	sbci	r19, 0xFF	; 255
     5a4:	80 e0       	ldi	r24, 0x00	; 0
     5a6:	90 e8       	ldi	r25, 0x80	; 128
     5a8:	ad e3       	ldi	r26, 0x3D	; 61
     5aa:	b4 e4       	ldi	r27, 0x44	; 68
     5ac:	f9 01       	movw	r30, r18
     5ae:	80 83       	st	Z, r24
     5b0:	91 83       	std	Z+1, r25	; 0x01
     5b2:	a2 83       	std	Z+2, r26	; 0x02
     5b4:	b3 83       	std	Z+3, r27	; 0x03
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ; 
	__tmp = ((F_CPU) / 3e6) * __us;
     5b6:	8e 01       	movw	r16, r28
     5b8:	09 5b       	subi	r16, 0xB9	; 185
     5ba:	1f 4f       	sbci	r17, 0xFF	; 255
     5bc:	ce 01       	movw	r24, r28
     5be:	8d 5b       	subi	r24, 0xBD	; 189
     5c0:	9f 4f       	sbci	r25, 0xFF	; 255
     5c2:	2b ea       	ldi	r18, 0xAB	; 171
     5c4:	3a ea       	ldi	r19, 0xAA	; 170
     5c6:	4a ea       	ldi	r20, 0xAA	; 170
     5c8:	50 e4       	ldi	r21, 0x40	; 64
     5ca:	fc 01       	movw	r30, r24
     5cc:	60 81       	ld	r22, Z
     5ce:	71 81       	ldd	r23, Z+1	; 0x01
     5d0:	82 81       	ldd	r24, Z+2	; 0x02
     5d2:	93 81       	ldd	r25, Z+3	; 0x03
     5d4:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
     5d8:	dc 01       	movw	r26, r24
     5da:	cb 01       	movw	r24, r22
     5dc:	f8 01       	movw	r30, r16
     5de:	80 83       	st	Z, r24
     5e0:	91 83       	std	Z+1, r25	; 0x01
     5e2:	a2 83       	std	Z+2, r26	; 0x02
     5e4:	b3 83       	std	Z+3, r27	; 0x03
	__tmp2 = ((F_CPU) / 4e6) * __us;
     5e6:	8e 01       	movw	r16, r28
     5e8:	05 5b       	subi	r16, 0xB5	; 181
     5ea:	1f 4f       	sbci	r17, 0xFF	; 255
     5ec:	ce 01       	movw	r24, r28
     5ee:	8d 5b       	subi	r24, 0xBD	; 189
     5f0:	9f 4f       	sbci	r25, 0xFF	; 255
     5f2:	20 e0       	ldi	r18, 0x00	; 0
     5f4:	30 e0       	ldi	r19, 0x00	; 0
     5f6:	40 e8       	ldi	r20, 0x80	; 128
     5f8:	50 e4       	ldi	r21, 0x40	; 64
     5fa:	fc 01       	movw	r30, r24
     5fc:	60 81       	ld	r22, Z
     5fe:	71 81       	ldd	r23, Z+1	; 0x01
     600:	82 81       	ldd	r24, Z+2	; 0x02
     602:	93 81       	ldd	r25, Z+3	; 0x03
     604:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
     608:	dc 01       	movw	r26, r24
     60a:	cb 01       	movw	r24, r22
     60c:	f8 01       	movw	r30, r16
     60e:	80 83       	st	Z, r24
     610:	91 83       	std	Z+1, r25	; 0x01
     612:	a2 83       	std	Z+2, r26	; 0x02
     614:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     616:	ce 01       	movw	r24, r28
     618:	89 5b       	subi	r24, 0xB9	; 185
     61a:	9f 4f       	sbci	r25, 0xFF	; 255
     61c:	20 e0       	ldi	r18, 0x00	; 0
     61e:	30 e0       	ldi	r19, 0x00	; 0
     620:	40 e8       	ldi	r20, 0x80	; 128
     622:	5f e3       	ldi	r21, 0x3F	; 63
     624:	fc 01       	movw	r30, r24
     626:	60 81       	ld	r22, Z
     628:	71 81       	ldd	r23, Z+1	; 0x01
     62a:	82 81       	ldd	r24, Z+2	; 0x02
     62c:	93 81       	ldd	r25, Z+3	; 0x03
     62e:	0e 94 85 10 	call	0x210a	; 0x210a <__cmpsf2>
     632:	88 23       	and	r24, r24
     634:	3c f4       	brge	.+14     	; 0x644 <main+0x522>
		__ticks = 1;
     636:	ce 01       	movw	r24, r28
     638:	81 5b       	subi	r24, 0xB1	; 177
     63a:	9f 4f       	sbci	r25, 0xFF	; 255
     63c:	21 e0       	ldi	r18, 0x01	; 1
     63e:	fc 01       	movw	r30, r24
     640:	20 83       	st	Z, r18
     642:	45 c1       	rjmp	.+650    	; 0x8ce <main+0x7ac>
	else if (__tmp2 > 65535)
     644:	ce 01       	movw	r24, r28
     646:	85 5b       	subi	r24, 0xB5	; 181
     648:	9f 4f       	sbci	r25, 0xFF	; 255
     64a:	20 e0       	ldi	r18, 0x00	; 0
     64c:	3f ef       	ldi	r19, 0xFF	; 255
     64e:	4f e7       	ldi	r20, 0x7F	; 127
     650:	57 e4       	ldi	r21, 0x47	; 71
     652:	fc 01       	movw	r30, r24
     654:	60 81       	ld	r22, Z
     656:	71 81       	ldd	r23, Z+1	; 0x01
     658:	82 81       	ldd	r24, Z+2	; 0x02
     65a:	93 81       	ldd	r25, Z+3	; 0x03
     65c:	0e 94 a0 11 	call	0x2340	; 0x2340 <__gesf2>
     660:	18 16       	cp	r1, r24
     662:	0c f0       	brlt	.+2      	; 0x666 <main+0x544>
     664:	e5 c0       	rjmp	.+458    	; 0x830 <main+0x70e>
	{
		_delay_ms(__us / 1000.0);
     666:	ce 01       	movw	r24, r28
     668:	8d 5b       	subi	r24, 0xBD	; 189
     66a:	9f 4f       	sbci	r25, 0xFF	; 255
     66c:	20 e0       	ldi	r18, 0x00	; 0
     66e:	30 e0       	ldi	r19, 0x00	; 0
     670:	4a e7       	ldi	r20, 0x7A	; 122
     672:	54 e4       	ldi	r21, 0x44	; 68
     674:	fc 01       	movw	r30, r24
     676:	60 81       	ld	r22, Z
     678:	71 81       	ldd	r23, Z+1	; 0x01
     67a:	82 81       	ldd	r24, Z+2	; 0x02
     67c:	93 81       	ldd	r25, Z+3	; 0x03
     67e:	0e 94 8a 10 	call	0x2114	; 0x2114 <__divsf3>
     682:	dc 01       	movw	r26, r24
     684:	cb 01       	movw	r24, r22
     686:	9e 01       	movw	r18, r28
     688:	20 5b       	subi	r18, 0xB0	; 176
     68a:	3f 4f       	sbci	r19, 0xFF	; 255
     68c:	f9 01       	movw	r30, r18
     68e:	80 83       	st	Z, r24
     690:	91 83       	std	Z+1, r25	; 0x01
     692:	a2 83       	std	Z+2, r26	; 0x02
     694:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     696:	8e 01       	movw	r16, r28
     698:	0c 5a       	subi	r16, 0xAC	; 172
     69a:	1f 4f       	sbci	r17, 0xFF	; 255
     69c:	ce 01       	movw	r24, r28
     69e:	80 5b       	subi	r24, 0xB0	; 176
     6a0:	9f 4f       	sbci	r25, 0xFF	; 255
     6a2:	20 e0       	ldi	r18, 0x00	; 0
     6a4:	30 e0       	ldi	r19, 0x00	; 0
     6a6:	4a e7       	ldi	r20, 0x7A	; 122
     6a8:	55 e4       	ldi	r21, 0x45	; 69
     6aa:	fc 01       	movw	r30, r24
     6ac:	60 81       	ld	r22, Z
     6ae:	71 81       	ldd	r23, Z+1	; 0x01
     6b0:	82 81       	ldd	r24, Z+2	; 0x02
     6b2:	93 81       	ldd	r25, Z+3	; 0x03
     6b4:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
     6b8:	dc 01       	movw	r26, r24
     6ba:	cb 01       	movw	r24, r22
     6bc:	f8 01       	movw	r30, r16
     6be:	80 83       	st	Z, r24
     6c0:	91 83       	std	Z+1, r25	; 0x01
     6c2:	a2 83       	std	Z+2, r26	; 0x02
     6c4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     6c6:	ce 01       	movw	r24, r28
     6c8:	8c 5a       	subi	r24, 0xAC	; 172
     6ca:	9f 4f       	sbci	r25, 0xFF	; 255
     6cc:	20 e0       	ldi	r18, 0x00	; 0
     6ce:	30 e0       	ldi	r19, 0x00	; 0
     6d0:	40 e8       	ldi	r20, 0x80	; 128
     6d2:	5f e3       	ldi	r21, 0x3F	; 63
     6d4:	fc 01       	movw	r30, r24
     6d6:	60 81       	ld	r22, Z
     6d8:	71 81       	ldd	r23, Z+1	; 0x01
     6da:	82 81       	ldd	r24, Z+2	; 0x02
     6dc:	93 81       	ldd	r25, Z+3	; 0x03
     6de:	0e 94 85 10 	call	0x210a	; 0x210a <__cmpsf2>
     6e2:	88 23       	and	r24, r24
     6e4:	4c f4       	brge	.+18     	; 0x6f8 <main+0x5d6>
		__ticks = 1;
     6e6:	ce 01       	movw	r24, r28
     6e8:	88 5a       	subi	r24, 0xA8	; 168
     6ea:	9f 4f       	sbci	r25, 0xFF	; 255
     6ec:	21 e0       	ldi	r18, 0x01	; 1
     6ee:	30 e0       	ldi	r19, 0x00	; 0
     6f0:	fc 01       	movw	r30, r24
     6f2:	31 83       	std	Z+1, r19	; 0x01
     6f4:	20 83       	st	Z, r18
     6f6:	77 c0       	rjmp	.+238    	; 0x7e6 <main+0x6c4>
	else if (__tmp > 65535)
     6f8:	ce 01       	movw	r24, r28
     6fa:	8c 5a       	subi	r24, 0xAC	; 172
     6fc:	9f 4f       	sbci	r25, 0xFF	; 255
     6fe:	20 e0       	ldi	r18, 0x00	; 0
     700:	3f ef       	ldi	r19, 0xFF	; 255
     702:	4f e7       	ldi	r20, 0x7F	; 127
     704:	57 e4       	ldi	r21, 0x47	; 71
     706:	fc 01       	movw	r30, r24
     708:	60 81       	ld	r22, Z
     70a:	71 81       	ldd	r23, Z+1	; 0x01
     70c:	82 81       	ldd	r24, Z+2	; 0x02
     70e:	93 81       	ldd	r25, Z+3	; 0x03
     710:	0e 94 a0 11 	call	0x2340	; 0x2340 <__gesf2>
     714:	18 16       	cp	r1, r24
     716:	0c f0       	brlt	.+2      	; 0x71a <main+0x5f8>
     718:	54 c0       	rjmp	.+168    	; 0x7c2 <main+0x6a0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     71a:	ce 01       	movw	r24, r28
     71c:	80 5b       	subi	r24, 0xB0	; 176
     71e:	9f 4f       	sbci	r25, 0xFF	; 255
     720:	20 e0       	ldi	r18, 0x00	; 0
     722:	30 e0       	ldi	r19, 0x00	; 0
     724:	40 e2       	ldi	r20, 0x20	; 32
     726:	51 e4       	ldi	r21, 0x41	; 65
     728:	fc 01       	movw	r30, r24
     72a:	60 81       	ld	r22, Z
     72c:	71 81       	ldd	r23, Z+1	; 0x01
     72e:	82 81       	ldd	r24, Z+2	; 0x02
     730:	93 81       	ldd	r25, Z+3	; 0x03
     732:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
     736:	dc 01       	movw	r26, r24
     738:	cb 01       	movw	r24, r22
     73a:	8e 01       	movw	r16, r28
     73c:	08 5a       	subi	r16, 0xA8	; 168
     73e:	1f 4f       	sbci	r17, 0xFF	; 255
     740:	bc 01       	movw	r22, r24
     742:	cd 01       	movw	r24, r26
     744:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
     748:	dc 01       	movw	r26, r24
     74a:	cb 01       	movw	r24, r22
     74c:	f8 01       	movw	r30, r16
     74e:	91 83       	std	Z+1, r25	; 0x01
     750:	80 83       	st	Z, r24
     752:	24 c0       	rjmp	.+72     	; 0x79c <main+0x67a>
     754:	ce 01       	movw	r24, r28
     756:	86 5a       	subi	r24, 0xA6	; 166
     758:	9f 4f       	sbci	r25, 0xFF	; 255
     75a:	20 e9       	ldi	r18, 0x90	; 144
     75c:	31 e0       	ldi	r19, 0x01	; 1
     75e:	fc 01       	movw	r30, r24
     760:	31 83       	std	Z+1, r19	; 0x01
     762:	20 83       	st	Z, r18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     764:	ce 01       	movw	r24, r28
     766:	86 5a       	subi	r24, 0xA6	; 166
     768:	9f 4f       	sbci	r25, 0xFF	; 255
     76a:	fc 01       	movw	r30, r24
     76c:	80 81       	ld	r24, Z
     76e:	91 81       	ldd	r25, Z+1	; 0x01
     770:	01 97       	sbiw	r24, 0x01	; 1
     772:	f1 f7       	brne	.-4      	; 0x770 <main+0x64e>
     774:	9e 01       	movw	r18, r28
     776:	26 5a       	subi	r18, 0xA6	; 166
     778:	3f 4f       	sbci	r19, 0xFF	; 255
     77a:	f9 01       	movw	r30, r18
     77c:	91 83       	std	Z+1, r25	; 0x01
     77e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     780:	ce 01       	movw	r24, r28
     782:	88 5a       	subi	r24, 0xA8	; 168
     784:	9f 4f       	sbci	r25, 0xFF	; 255
     786:	9e 01       	movw	r18, r28
     788:	28 5a       	subi	r18, 0xA8	; 168
     78a:	3f 4f       	sbci	r19, 0xFF	; 255
     78c:	f9 01       	movw	r30, r18
     78e:	20 81       	ld	r18, Z
     790:	31 81       	ldd	r19, Z+1	; 0x01
     792:	21 50       	subi	r18, 0x01	; 1
     794:	31 09       	sbc	r19, r1
     796:	fc 01       	movw	r30, r24
     798:	31 83       	std	Z+1, r19	; 0x01
     79a:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     79c:	ce 01       	movw	r24, r28
     79e:	88 5a       	subi	r24, 0xA8	; 168
     7a0:	9f 4f       	sbci	r25, 0xFF	; 255
     7a2:	fc 01       	movw	r30, r24
     7a4:	80 81       	ld	r24, Z
     7a6:	91 81       	ldd	r25, Z+1	; 0x01
     7a8:	89 2b       	or	r24, r25
     7aa:	a1 f6       	brne	.-88     	; 0x754 <main+0x632>
     7ac:	ce 01       	movw	r24, r28
     7ae:	81 5b       	subi	r24, 0xB1	; 177
     7b0:	9f 4f       	sbci	r25, 0xFF	; 255
     7b2:	9e 01       	movw	r18, r28
     7b4:	2d 59       	subi	r18, 0x9D	; 157
     7b6:	3f 4f       	sbci	r19, 0xFF	; 255
     7b8:	f9 01       	movw	r30, r18
     7ba:	20 81       	ld	r18, Z
     7bc:	fc 01       	movw	r30, r24
     7be:	20 83       	st	Z, r18
     7c0:	86 c0       	rjmp	.+268    	; 0x8ce <main+0x7ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     7c2:	8e 01       	movw	r16, r28
     7c4:	08 5a       	subi	r16, 0xA8	; 168
     7c6:	1f 4f       	sbci	r17, 0xFF	; 255
     7c8:	ce 01       	movw	r24, r28
     7ca:	8c 5a       	subi	r24, 0xAC	; 172
     7cc:	9f 4f       	sbci	r25, 0xFF	; 255
     7ce:	fc 01       	movw	r30, r24
     7d0:	60 81       	ld	r22, Z
     7d2:	71 81       	ldd	r23, Z+1	; 0x01
     7d4:	82 81       	ldd	r24, Z+2	; 0x02
     7d6:	93 81       	ldd	r25, Z+3	; 0x03
     7d8:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
     7dc:	dc 01       	movw	r26, r24
     7de:	cb 01       	movw	r24, r22
     7e0:	f8 01       	movw	r30, r16
     7e2:	91 83       	std	Z+1, r25	; 0x01
     7e4:	80 83       	st	Z, r24
     7e6:	ce 01       	movw	r24, r28
     7e8:	84 5a       	subi	r24, 0xA4	; 164
     7ea:	9f 4f       	sbci	r25, 0xFF	; 255
     7ec:	9e 01       	movw	r18, r28
     7ee:	28 5a       	subi	r18, 0xA8	; 168
     7f0:	3f 4f       	sbci	r19, 0xFF	; 255
     7f2:	f9 01       	movw	r30, r18
     7f4:	20 81       	ld	r18, Z
     7f6:	31 81       	ldd	r19, Z+1	; 0x01
     7f8:	fc 01       	movw	r30, r24
     7fa:	31 83       	std	Z+1, r19	; 0x01
     7fc:	20 83       	st	Z, r18
     7fe:	ce 01       	movw	r24, r28
     800:	84 5a       	subi	r24, 0xA4	; 164
     802:	9f 4f       	sbci	r25, 0xFF	; 255
     804:	fc 01       	movw	r30, r24
     806:	80 81       	ld	r24, Z
     808:	91 81       	ldd	r25, Z+1	; 0x01
     80a:	01 97       	sbiw	r24, 0x01	; 1
     80c:	f1 f7       	brne	.-4      	; 0x80a <main+0x6e8>
     80e:	9e 01       	movw	r18, r28
     810:	24 5a       	subi	r18, 0xA4	; 164
     812:	3f 4f       	sbci	r19, 0xFF	; 255
     814:	f9 01       	movw	r30, r18
     816:	91 83       	std	Z+1, r25	; 0x01
     818:	80 83       	st	Z, r24
     81a:	ce 01       	movw	r24, r28
     81c:	81 5b       	subi	r24, 0xB1	; 177
     81e:	9f 4f       	sbci	r25, 0xFF	; 255
     820:	9e 01       	movw	r18, r28
     822:	2d 59       	subi	r18, 0x9D	; 157
     824:	3f 4f       	sbci	r19, 0xFF	; 255
     826:	f9 01       	movw	r30, r18
     828:	20 81       	ld	r18, Z
     82a:	fc 01       	movw	r30, r24
     82c:	20 83       	st	Z, r18
     82e:	4f c0       	rjmp	.+158    	; 0x8ce <main+0x7ac>
		__ticks = 1;
	else if (__tmp2 > 65535)
	{
		_delay_ms(__us / 1000.0);
	}
	else if (__tmp > 255)
     830:	ce 01       	movw	r24, r28
     832:	89 5b       	subi	r24, 0xB9	; 185
     834:	9f 4f       	sbci	r25, 0xFF	; 255
     836:	20 e0       	ldi	r18, 0x00	; 0
     838:	30 e0       	ldi	r19, 0x00	; 0
     83a:	4f e7       	ldi	r20, 0x7F	; 127
     83c:	53 e4       	ldi	r21, 0x43	; 67
     83e:	fc 01       	movw	r30, r24
     840:	60 81       	ld	r22, Z
     842:	71 81       	ldd	r23, Z+1	; 0x01
     844:	82 81       	ldd	r24, Z+2	; 0x02
     846:	93 81       	ldd	r25, Z+3	; 0x03
     848:	0e 94 a0 11 	call	0x2340	; 0x2340 <__gesf2>
     84c:	18 16       	cp	r1, r24
     84e:	74 f5       	brge	.+92     	; 0x8ac <main+0x78a>
	{
		uint16_t __ticks=(uint16_t)__tmp2;
     850:	8e 01       	movw	r16, r28
     852:	02 5a       	subi	r16, 0xA2	; 162
     854:	1f 4f       	sbci	r17, 0xFF	; 255
     856:	ce 01       	movw	r24, r28
     858:	85 5b       	subi	r24, 0xB5	; 181
     85a:	9f 4f       	sbci	r25, 0xFF	; 255
     85c:	fc 01       	movw	r30, r24
     85e:	60 81       	ld	r22, Z
     860:	71 81       	ldd	r23, Z+1	; 0x01
     862:	82 81       	ldd	r24, Z+2	; 0x02
     864:	93 81       	ldd	r25, Z+3	; 0x03
     866:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
     86a:	dc 01       	movw	r26, r24
     86c:	cb 01       	movw	r24, r22
     86e:	f8 01       	movw	r30, r16
     870:	91 83       	std	Z+1, r25	; 0x01
     872:	80 83       	st	Z, r24
     874:	ce 01       	movw	r24, r28
     876:	80 5a       	subi	r24, 0xA0	; 160
     878:	9f 4f       	sbci	r25, 0xFF	; 255
     87a:	9e 01       	movw	r18, r28
     87c:	22 5a       	subi	r18, 0xA2	; 162
     87e:	3f 4f       	sbci	r19, 0xFF	; 255
     880:	f9 01       	movw	r30, r18
     882:	20 81       	ld	r18, Z
     884:	31 81       	ldd	r19, Z+1	; 0x01
     886:	fc 01       	movw	r30, r24
     888:	31 83       	std	Z+1, r19	; 0x01
     88a:	20 83       	st	Z, r18
     88c:	ce 01       	movw	r24, r28
     88e:	80 5a       	subi	r24, 0xA0	; 160
     890:	9f 4f       	sbci	r25, 0xFF	; 255
     892:	fc 01       	movw	r30, r24
     894:	80 81       	ld	r24, Z
     896:	91 81       	ldd	r25, Z+1	; 0x01
     898:	01 97       	sbiw	r24, 0x01	; 1
     89a:	f1 f7       	brne	.-4      	; 0x898 <main+0x776>
     89c:	9e 01       	movw	r18, r28
     89e:	20 5a       	subi	r18, 0xA0	; 160
     8a0:	3f 4f       	sbci	r19, 0xFF	; 255
     8a2:	f9 01       	movw	r30, r18
     8a4:	91 83       	std	Z+1, r25	; 0x01
     8a6:	80 83       	st	Z, r24
     8a8:	0c 94 21 0d 	jmp	0x1a42	; 0x1a42 <main+0x1920>
		_delay_loop_2(__ticks);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     8ac:	8e 01       	movw	r16, r28
     8ae:	01 5b       	subi	r16, 0xB1	; 177
     8b0:	1f 4f       	sbci	r17, 0xFF	; 255
     8b2:	ce 01       	movw	r24, r28
     8b4:	89 5b       	subi	r24, 0xB9	; 185
     8b6:	9f 4f       	sbci	r25, 0xFF	; 255
     8b8:	fc 01       	movw	r30, r24
     8ba:	60 81       	ld	r22, Z
     8bc:	71 81       	ldd	r23, Z+1	; 0x01
     8be:	82 81       	ldd	r24, Z+2	; 0x02
     8c0:	93 81       	ldd	r25, Z+3	; 0x03
     8c2:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
     8c6:	dc 01       	movw	r26, r24
     8c8:	cb 01       	movw	r24, r22
     8ca:	f8 01       	movw	r30, r16
     8cc:	80 83       	st	Z, r24
     8ce:	ce 01       	movw	r24, r28
     8d0:	8e 59       	subi	r24, 0x9E	; 158
     8d2:	9f 4f       	sbci	r25, 0xFF	; 255
     8d4:	9e 01       	movw	r18, r28
     8d6:	21 5b       	subi	r18, 0xB1	; 177
     8d8:	3f 4f       	sbci	r19, 0xFF	; 255
     8da:	f9 01       	movw	r30, r18
     8dc:	20 81       	ld	r18, Z
     8de:	fc 01       	movw	r30, r24
     8e0:	20 83       	st	Z, r18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     8e2:	ce 01       	movw	r24, r28
     8e4:	8e 59       	subi	r24, 0x9E	; 158
     8e6:	9f 4f       	sbci	r25, 0xFF	; 255
     8e8:	fc 01       	movw	r30, r24
     8ea:	80 81       	ld	r24, Z
     8ec:	28 2f       	mov	r18, r24
     8ee:	2a 95       	dec	r18
     8f0:	f1 f7       	brne	.-4      	; 0x8ee <main+0x7cc>
     8f2:	ce 01       	movw	r24, r28
     8f4:	8e 59       	subi	r24, 0x9E	; 158
     8f6:	9f 4f       	sbci	r25, 0xFF	; 255
     8f8:	fc 01       	movw	r30, r24
     8fa:	20 83       	st	Z, r18
     8fc:	0c 94 21 0d 	jmp	0x1a42	; 0x1a42 <main+0x1920>
		_delay_us(758);
		else if ((PINA & 0b00010000) == 0)
     900:	80 e2       	ldi	r24, 0x20	; 32
     902:	90 e0       	ldi	r25, 0x00	; 0
     904:	fc 01       	movw	r30, r24
     906:	80 81       	ld	r24, Z
     908:	88 2f       	mov	r24, r24
     90a:	90 e0       	ldi	r25, 0x00	; 0
     90c:	80 71       	andi	r24, 0x10	; 16
     90e:	99 27       	eor	r25, r25
     910:	89 2b       	or	r24, r25
     912:	09 f0       	breq	.+2      	; 0x916 <main+0x7f4>
     914:	af c1       	rjmp	.+862    	; 0xc74 <main+0xb52>
     916:	9e 01       	movw	r18, r28
     918:	2c 59       	subi	r18, 0x9C	; 156
     91a:	3f 4f       	sbci	r19, 0xFF	; 255
     91c:	80 e0       	ldi	r24, 0x00	; 0
     91e:	90 e0       	ldi	r25, 0x00	; 0
     920:	a3 e3       	ldi	r26, 0x33	; 51
     922:	b4 e4       	ldi	r27, 0x44	; 68
     924:	f9 01       	movw	r30, r18
     926:	80 83       	st	Z, r24
     928:	91 83       	std	Z+1, r25	; 0x01
     92a:	a2 83       	std	Z+2, r26	; 0x02
     92c:	b3 83       	std	Z+3, r27	; 0x03
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ; 
	__tmp = ((F_CPU) / 3e6) * __us;
     92e:	8e 01       	movw	r16, r28
     930:	08 59       	subi	r16, 0x98	; 152
     932:	1f 4f       	sbci	r17, 0xFF	; 255
     934:	ce 01       	movw	r24, r28
     936:	8c 59       	subi	r24, 0x9C	; 156
     938:	9f 4f       	sbci	r25, 0xFF	; 255
     93a:	2b ea       	ldi	r18, 0xAB	; 171
     93c:	3a ea       	ldi	r19, 0xAA	; 170
     93e:	4a ea       	ldi	r20, 0xAA	; 170
     940:	50 e4       	ldi	r21, 0x40	; 64
     942:	fc 01       	movw	r30, r24
     944:	60 81       	ld	r22, Z
     946:	71 81       	ldd	r23, Z+1	; 0x01
     948:	82 81       	ldd	r24, Z+2	; 0x02
     94a:	93 81       	ldd	r25, Z+3	; 0x03
     94c:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
     950:	dc 01       	movw	r26, r24
     952:	cb 01       	movw	r24, r22
     954:	f8 01       	movw	r30, r16
     956:	80 83       	st	Z, r24
     958:	91 83       	std	Z+1, r25	; 0x01
     95a:	a2 83       	std	Z+2, r26	; 0x02
     95c:	b3 83       	std	Z+3, r27	; 0x03
	__tmp2 = ((F_CPU) / 4e6) * __us;
     95e:	8e 01       	movw	r16, r28
     960:	04 59       	subi	r16, 0x94	; 148
     962:	1f 4f       	sbci	r17, 0xFF	; 255
     964:	ce 01       	movw	r24, r28
     966:	8c 59       	subi	r24, 0x9C	; 156
     968:	9f 4f       	sbci	r25, 0xFF	; 255
     96a:	20 e0       	ldi	r18, 0x00	; 0
     96c:	30 e0       	ldi	r19, 0x00	; 0
     96e:	40 e8       	ldi	r20, 0x80	; 128
     970:	50 e4       	ldi	r21, 0x40	; 64
     972:	fc 01       	movw	r30, r24
     974:	60 81       	ld	r22, Z
     976:	71 81       	ldd	r23, Z+1	; 0x01
     978:	82 81       	ldd	r24, Z+2	; 0x02
     97a:	93 81       	ldd	r25, Z+3	; 0x03
     97c:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
     980:	dc 01       	movw	r26, r24
     982:	cb 01       	movw	r24, r22
     984:	f8 01       	movw	r30, r16
     986:	80 83       	st	Z, r24
     988:	91 83       	std	Z+1, r25	; 0x01
     98a:	a2 83       	std	Z+2, r26	; 0x02
     98c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     98e:	ce 01       	movw	r24, r28
     990:	88 59       	subi	r24, 0x98	; 152
     992:	9f 4f       	sbci	r25, 0xFF	; 255
     994:	20 e0       	ldi	r18, 0x00	; 0
     996:	30 e0       	ldi	r19, 0x00	; 0
     998:	40 e8       	ldi	r20, 0x80	; 128
     99a:	5f e3       	ldi	r21, 0x3F	; 63
     99c:	fc 01       	movw	r30, r24
     99e:	60 81       	ld	r22, Z
     9a0:	71 81       	ldd	r23, Z+1	; 0x01
     9a2:	82 81       	ldd	r24, Z+2	; 0x02
     9a4:	93 81       	ldd	r25, Z+3	; 0x03
     9a6:	0e 94 85 10 	call	0x210a	; 0x210a <__cmpsf2>
     9aa:	88 23       	and	r24, r24
     9ac:	3c f4       	brge	.+14     	; 0x9bc <main+0x89a>
		__ticks = 1;
     9ae:	ce 01       	movw	r24, r28
     9b0:	80 59       	subi	r24, 0x90	; 144
     9b2:	9f 4f       	sbci	r25, 0xFF	; 255
     9b4:	21 e0       	ldi	r18, 0x01	; 1
     9b6:	fc 01       	movw	r30, r24
     9b8:	20 83       	st	Z, r18
     9ba:	44 c1       	rjmp	.+648    	; 0xc44 <main+0xb22>
	else if (__tmp2 > 65535)
     9bc:	ce 01       	movw	r24, r28
     9be:	84 59       	subi	r24, 0x94	; 148
     9c0:	9f 4f       	sbci	r25, 0xFF	; 255
     9c2:	20 e0       	ldi	r18, 0x00	; 0
     9c4:	3f ef       	ldi	r19, 0xFF	; 255
     9c6:	4f e7       	ldi	r20, 0x7F	; 127
     9c8:	57 e4       	ldi	r21, 0x47	; 71
     9ca:	fc 01       	movw	r30, r24
     9cc:	60 81       	ld	r22, Z
     9ce:	71 81       	ldd	r23, Z+1	; 0x01
     9d0:	82 81       	ldd	r24, Z+2	; 0x02
     9d2:	93 81       	ldd	r25, Z+3	; 0x03
     9d4:	0e 94 a0 11 	call	0x2340	; 0x2340 <__gesf2>
     9d8:	18 16       	cp	r1, r24
     9da:	0c f0       	brlt	.+2      	; 0x9de <main+0x8bc>
     9dc:	e5 c0       	rjmp	.+458    	; 0xba8 <main+0xa86>
	{
		_delay_ms(__us / 1000.0);
     9de:	ce 01       	movw	r24, r28
     9e0:	8c 59       	subi	r24, 0x9C	; 156
     9e2:	9f 4f       	sbci	r25, 0xFF	; 255
     9e4:	20 e0       	ldi	r18, 0x00	; 0
     9e6:	30 e0       	ldi	r19, 0x00	; 0
     9e8:	4a e7       	ldi	r20, 0x7A	; 122
     9ea:	54 e4       	ldi	r21, 0x44	; 68
     9ec:	fc 01       	movw	r30, r24
     9ee:	60 81       	ld	r22, Z
     9f0:	71 81       	ldd	r23, Z+1	; 0x01
     9f2:	82 81       	ldd	r24, Z+2	; 0x02
     9f4:	93 81       	ldd	r25, Z+3	; 0x03
     9f6:	0e 94 8a 10 	call	0x2114	; 0x2114 <__divsf3>
     9fa:	dc 01       	movw	r26, r24
     9fc:	cb 01       	movw	r24, r22
     9fe:	9e 01       	movw	r18, r28
     a00:	2f 58       	subi	r18, 0x8F	; 143
     a02:	3f 4f       	sbci	r19, 0xFF	; 255
     a04:	f9 01       	movw	r30, r18
     a06:	80 83       	st	Z, r24
     a08:	91 83       	std	Z+1, r25	; 0x01
     a0a:	a2 83       	std	Z+2, r26	; 0x02
     a0c:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     a0e:	8e 01       	movw	r16, r28
     a10:	0b 58       	subi	r16, 0x8B	; 139
     a12:	1f 4f       	sbci	r17, 0xFF	; 255
     a14:	ce 01       	movw	r24, r28
     a16:	8f 58       	subi	r24, 0x8F	; 143
     a18:	9f 4f       	sbci	r25, 0xFF	; 255
     a1a:	20 e0       	ldi	r18, 0x00	; 0
     a1c:	30 e0       	ldi	r19, 0x00	; 0
     a1e:	4a e7       	ldi	r20, 0x7A	; 122
     a20:	55 e4       	ldi	r21, 0x45	; 69
     a22:	fc 01       	movw	r30, r24
     a24:	60 81       	ld	r22, Z
     a26:	71 81       	ldd	r23, Z+1	; 0x01
     a28:	82 81       	ldd	r24, Z+2	; 0x02
     a2a:	93 81       	ldd	r25, Z+3	; 0x03
     a2c:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
     a30:	dc 01       	movw	r26, r24
     a32:	cb 01       	movw	r24, r22
     a34:	f8 01       	movw	r30, r16
     a36:	80 83       	st	Z, r24
     a38:	91 83       	std	Z+1, r25	; 0x01
     a3a:	a2 83       	std	Z+2, r26	; 0x02
     a3c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     a3e:	ce 01       	movw	r24, r28
     a40:	8b 58       	subi	r24, 0x8B	; 139
     a42:	9f 4f       	sbci	r25, 0xFF	; 255
     a44:	20 e0       	ldi	r18, 0x00	; 0
     a46:	30 e0       	ldi	r19, 0x00	; 0
     a48:	40 e8       	ldi	r20, 0x80	; 128
     a4a:	5f e3       	ldi	r21, 0x3F	; 63
     a4c:	fc 01       	movw	r30, r24
     a4e:	60 81       	ld	r22, Z
     a50:	71 81       	ldd	r23, Z+1	; 0x01
     a52:	82 81       	ldd	r24, Z+2	; 0x02
     a54:	93 81       	ldd	r25, Z+3	; 0x03
     a56:	0e 94 85 10 	call	0x210a	; 0x210a <__cmpsf2>
     a5a:	88 23       	and	r24, r24
     a5c:	4c f4       	brge	.+18     	; 0xa70 <main+0x94e>
		__ticks = 1;
     a5e:	ce 01       	movw	r24, r28
     a60:	87 58       	subi	r24, 0x87	; 135
     a62:	9f 4f       	sbci	r25, 0xFF	; 255
     a64:	21 e0       	ldi	r18, 0x01	; 1
     a66:	30 e0       	ldi	r19, 0x00	; 0
     a68:	fc 01       	movw	r30, r24
     a6a:	31 83       	std	Z+1, r19	; 0x01
     a6c:	20 83       	st	Z, r18
     a6e:	77 c0       	rjmp	.+238    	; 0xb5e <main+0xa3c>
	else if (__tmp > 65535)
     a70:	ce 01       	movw	r24, r28
     a72:	8b 58       	subi	r24, 0x8B	; 139
     a74:	9f 4f       	sbci	r25, 0xFF	; 255
     a76:	20 e0       	ldi	r18, 0x00	; 0
     a78:	3f ef       	ldi	r19, 0xFF	; 255
     a7a:	4f e7       	ldi	r20, 0x7F	; 127
     a7c:	57 e4       	ldi	r21, 0x47	; 71
     a7e:	fc 01       	movw	r30, r24
     a80:	60 81       	ld	r22, Z
     a82:	71 81       	ldd	r23, Z+1	; 0x01
     a84:	82 81       	ldd	r24, Z+2	; 0x02
     a86:	93 81       	ldd	r25, Z+3	; 0x03
     a88:	0e 94 a0 11 	call	0x2340	; 0x2340 <__gesf2>
     a8c:	18 16       	cp	r1, r24
     a8e:	0c f0       	brlt	.+2      	; 0xa92 <main+0x970>
     a90:	54 c0       	rjmp	.+168    	; 0xb3a <main+0xa18>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     a92:	ce 01       	movw	r24, r28
     a94:	8f 58       	subi	r24, 0x8F	; 143
     a96:	9f 4f       	sbci	r25, 0xFF	; 255
     a98:	20 e0       	ldi	r18, 0x00	; 0
     a9a:	30 e0       	ldi	r19, 0x00	; 0
     a9c:	40 e2       	ldi	r20, 0x20	; 32
     a9e:	51 e4       	ldi	r21, 0x41	; 65
     aa0:	fc 01       	movw	r30, r24
     aa2:	60 81       	ld	r22, Z
     aa4:	71 81       	ldd	r23, Z+1	; 0x01
     aa6:	82 81       	ldd	r24, Z+2	; 0x02
     aa8:	93 81       	ldd	r25, Z+3	; 0x03
     aaa:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
     aae:	dc 01       	movw	r26, r24
     ab0:	cb 01       	movw	r24, r22
     ab2:	8e 01       	movw	r16, r28
     ab4:	07 58       	subi	r16, 0x87	; 135
     ab6:	1f 4f       	sbci	r17, 0xFF	; 255
     ab8:	bc 01       	movw	r22, r24
     aba:	cd 01       	movw	r24, r26
     abc:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
     ac0:	dc 01       	movw	r26, r24
     ac2:	cb 01       	movw	r24, r22
     ac4:	f8 01       	movw	r30, r16
     ac6:	91 83       	std	Z+1, r25	; 0x01
     ac8:	80 83       	st	Z, r24
     aca:	24 c0       	rjmp	.+72     	; 0xb14 <main+0x9f2>
     acc:	ce 01       	movw	r24, r28
     ace:	85 58       	subi	r24, 0x85	; 133
     ad0:	9f 4f       	sbci	r25, 0xFF	; 255
     ad2:	20 e9       	ldi	r18, 0x90	; 144
     ad4:	31 e0       	ldi	r19, 0x01	; 1
     ad6:	fc 01       	movw	r30, r24
     ad8:	31 83       	std	Z+1, r19	; 0x01
     ada:	20 83       	st	Z, r18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     adc:	ce 01       	movw	r24, r28
     ade:	85 58       	subi	r24, 0x85	; 133
     ae0:	9f 4f       	sbci	r25, 0xFF	; 255
     ae2:	fc 01       	movw	r30, r24
     ae4:	80 81       	ld	r24, Z
     ae6:	91 81       	ldd	r25, Z+1	; 0x01
     ae8:	01 97       	sbiw	r24, 0x01	; 1
     aea:	f1 f7       	brne	.-4      	; 0xae8 <main+0x9c6>
     aec:	9e 01       	movw	r18, r28
     aee:	25 58       	subi	r18, 0x85	; 133
     af0:	3f 4f       	sbci	r19, 0xFF	; 255
     af2:	f9 01       	movw	r30, r18
     af4:	91 83       	std	Z+1, r25	; 0x01
     af6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     af8:	ce 01       	movw	r24, r28
     afa:	87 58       	subi	r24, 0x87	; 135
     afc:	9f 4f       	sbci	r25, 0xFF	; 255
     afe:	9e 01       	movw	r18, r28
     b00:	27 58       	subi	r18, 0x87	; 135
     b02:	3f 4f       	sbci	r19, 0xFF	; 255
     b04:	f9 01       	movw	r30, r18
     b06:	20 81       	ld	r18, Z
     b08:	31 81       	ldd	r19, Z+1	; 0x01
     b0a:	21 50       	subi	r18, 0x01	; 1
     b0c:	31 09       	sbc	r19, r1
     b0e:	fc 01       	movw	r30, r24
     b10:	31 83       	std	Z+1, r19	; 0x01
     b12:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     b14:	ce 01       	movw	r24, r28
     b16:	87 58       	subi	r24, 0x87	; 135
     b18:	9f 4f       	sbci	r25, 0xFF	; 255
     b1a:	fc 01       	movw	r30, r24
     b1c:	80 81       	ld	r24, Z
     b1e:	91 81       	ldd	r25, Z+1	; 0x01
     b20:	89 2b       	or	r24, r25
     b22:	a1 f6       	brne	.-88     	; 0xacc <main+0x9aa>
     b24:	ce 01       	movw	r24, r28
     b26:	80 59       	subi	r24, 0x90	; 144
     b28:	9f 4f       	sbci	r25, 0xFF	; 255
     b2a:	9e 01       	movw	r18, r28
     b2c:	2c 57       	subi	r18, 0x7C	; 124
     b2e:	3f 4f       	sbci	r19, 0xFF	; 255
     b30:	f9 01       	movw	r30, r18
     b32:	20 81       	ld	r18, Z
     b34:	fc 01       	movw	r30, r24
     b36:	20 83       	st	Z, r18
     b38:	85 c0       	rjmp	.+266    	; 0xc44 <main+0xb22>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     b3a:	8e 01       	movw	r16, r28
     b3c:	07 58       	subi	r16, 0x87	; 135
     b3e:	1f 4f       	sbci	r17, 0xFF	; 255
     b40:	ce 01       	movw	r24, r28
     b42:	8b 58       	subi	r24, 0x8B	; 139
     b44:	9f 4f       	sbci	r25, 0xFF	; 255
     b46:	fc 01       	movw	r30, r24
     b48:	60 81       	ld	r22, Z
     b4a:	71 81       	ldd	r23, Z+1	; 0x01
     b4c:	82 81       	ldd	r24, Z+2	; 0x02
     b4e:	93 81       	ldd	r25, Z+3	; 0x03
     b50:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
     b54:	dc 01       	movw	r26, r24
     b56:	cb 01       	movw	r24, r22
     b58:	f8 01       	movw	r30, r16
     b5a:	91 83       	std	Z+1, r25	; 0x01
     b5c:	80 83       	st	Z, r24
     b5e:	ce 01       	movw	r24, r28
     b60:	83 58       	subi	r24, 0x83	; 131
     b62:	9f 4f       	sbci	r25, 0xFF	; 255
     b64:	9e 01       	movw	r18, r28
     b66:	27 58       	subi	r18, 0x87	; 135
     b68:	3f 4f       	sbci	r19, 0xFF	; 255
     b6a:	f9 01       	movw	r30, r18
     b6c:	20 81       	ld	r18, Z
     b6e:	31 81       	ldd	r19, Z+1	; 0x01
     b70:	fc 01       	movw	r30, r24
     b72:	31 83       	std	Z+1, r19	; 0x01
     b74:	20 83       	st	Z, r18
     b76:	ce 01       	movw	r24, r28
     b78:	83 58       	subi	r24, 0x83	; 131
     b7a:	9f 4f       	sbci	r25, 0xFF	; 255
     b7c:	fc 01       	movw	r30, r24
     b7e:	80 81       	ld	r24, Z
     b80:	91 81       	ldd	r25, Z+1	; 0x01
     b82:	01 97       	sbiw	r24, 0x01	; 1
     b84:	f1 f7       	brne	.-4      	; 0xb82 <main+0xa60>
     b86:	9e 01       	movw	r18, r28
     b88:	23 58       	subi	r18, 0x83	; 131
     b8a:	3f 4f       	sbci	r19, 0xFF	; 255
     b8c:	f9 01       	movw	r30, r18
     b8e:	91 83       	std	Z+1, r25	; 0x01
     b90:	80 83       	st	Z, r24
     b92:	ce 01       	movw	r24, r28
     b94:	80 59       	subi	r24, 0x90	; 144
     b96:	9f 4f       	sbci	r25, 0xFF	; 255
     b98:	9e 01       	movw	r18, r28
     b9a:	2c 57       	subi	r18, 0x7C	; 124
     b9c:	3f 4f       	sbci	r19, 0xFF	; 255
     b9e:	f9 01       	movw	r30, r18
     ba0:	20 81       	ld	r18, Z
     ba2:	fc 01       	movw	r30, r24
     ba4:	20 83       	st	Z, r18
     ba6:	4e c0       	rjmp	.+156    	; 0xc44 <main+0xb22>
		__ticks = 1;
	else if (__tmp2 > 65535)
	{
		_delay_ms(__us / 1000.0);
	}
	else if (__tmp > 255)
     ba8:	ce 01       	movw	r24, r28
     baa:	88 59       	subi	r24, 0x98	; 152
     bac:	9f 4f       	sbci	r25, 0xFF	; 255
     bae:	20 e0       	ldi	r18, 0x00	; 0
     bb0:	30 e0       	ldi	r19, 0x00	; 0
     bb2:	4f e7       	ldi	r20, 0x7F	; 127
     bb4:	53 e4       	ldi	r21, 0x43	; 67
     bb6:	fc 01       	movw	r30, r24
     bb8:	60 81       	ld	r22, Z
     bba:	71 81       	ldd	r23, Z+1	; 0x01
     bbc:	82 81       	ldd	r24, Z+2	; 0x02
     bbe:	93 81       	ldd	r25, Z+3	; 0x03
     bc0:	0e 94 a0 11 	call	0x2340	; 0x2340 <__gesf2>
     bc4:	18 16       	cp	r1, r24
     bc6:	6c f5       	brge	.+90     	; 0xc22 <main+0xb00>
	{
		uint16_t __ticks=(uint16_t)__tmp2;
     bc8:	8e 01       	movw	r16, r28
     bca:	01 58       	subi	r16, 0x81	; 129
     bcc:	1f 4f       	sbci	r17, 0xFF	; 255
     bce:	ce 01       	movw	r24, r28
     bd0:	84 59       	subi	r24, 0x94	; 148
     bd2:	9f 4f       	sbci	r25, 0xFF	; 255
     bd4:	fc 01       	movw	r30, r24
     bd6:	60 81       	ld	r22, Z
     bd8:	71 81       	ldd	r23, Z+1	; 0x01
     bda:	82 81       	ldd	r24, Z+2	; 0x02
     bdc:	93 81       	ldd	r25, Z+3	; 0x03
     bde:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
     be2:	dc 01       	movw	r26, r24
     be4:	cb 01       	movw	r24, r22
     be6:	f8 01       	movw	r30, r16
     be8:	91 83       	std	Z+1, r25	; 0x01
     bea:	80 83       	st	Z, r24
     bec:	ce 01       	movw	r24, r28
     bee:	8f 57       	subi	r24, 0x7F	; 127
     bf0:	9f 4f       	sbci	r25, 0xFF	; 255
     bf2:	9e 01       	movw	r18, r28
     bf4:	21 58       	subi	r18, 0x81	; 129
     bf6:	3f 4f       	sbci	r19, 0xFF	; 255
     bf8:	f9 01       	movw	r30, r18
     bfa:	20 81       	ld	r18, Z
     bfc:	31 81       	ldd	r19, Z+1	; 0x01
     bfe:	fc 01       	movw	r30, r24
     c00:	31 83       	std	Z+1, r19	; 0x01
     c02:	20 83       	st	Z, r18
     c04:	ce 01       	movw	r24, r28
     c06:	8f 57       	subi	r24, 0x7F	; 127
     c08:	9f 4f       	sbci	r25, 0xFF	; 255
     c0a:	fc 01       	movw	r30, r24
     c0c:	80 81       	ld	r24, Z
     c0e:	91 81       	ldd	r25, Z+1	; 0x01
     c10:	01 97       	sbiw	r24, 0x01	; 1
     c12:	f1 f7       	brne	.-4      	; 0xc10 <main+0xaee>
     c14:	9e 01       	movw	r18, r28
     c16:	2f 57       	subi	r18, 0x7F	; 127
     c18:	3f 4f       	sbci	r19, 0xFF	; 255
     c1a:	f9 01       	movw	r30, r18
     c1c:	91 83       	std	Z+1, r25	; 0x01
     c1e:	80 83       	st	Z, r24
     c20:	10 c7       	rjmp	.+3616   	; 0x1a42 <main+0x1920>
		_delay_loop_2(__ticks);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     c22:	8e 01       	movw	r16, r28
     c24:	00 59       	subi	r16, 0x90	; 144
     c26:	1f 4f       	sbci	r17, 0xFF	; 255
     c28:	ce 01       	movw	r24, r28
     c2a:	88 59       	subi	r24, 0x98	; 152
     c2c:	9f 4f       	sbci	r25, 0xFF	; 255
     c2e:	fc 01       	movw	r30, r24
     c30:	60 81       	ld	r22, Z
     c32:	71 81       	ldd	r23, Z+1	; 0x01
     c34:	82 81       	ldd	r24, Z+2	; 0x02
     c36:	93 81       	ldd	r25, Z+3	; 0x03
     c38:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
     c3c:	dc 01       	movw	r26, r24
     c3e:	cb 01       	movw	r24, r22
     c40:	f8 01       	movw	r30, r16
     c42:	80 83       	st	Z, r24
     c44:	ce 01       	movw	r24, r28
     c46:	8d 57       	subi	r24, 0x7D	; 125
     c48:	9f 4f       	sbci	r25, 0xFF	; 255
     c4a:	9e 01       	movw	r18, r28
     c4c:	20 59       	subi	r18, 0x90	; 144
     c4e:	3f 4f       	sbci	r19, 0xFF	; 255
     c50:	f9 01       	movw	r30, r18
     c52:	20 81       	ld	r18, Z
     c54:	fc 01       	movw	r30, r24
     c56:	20 83       	st	Z, r18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     c58:	ce 01       	movw	r24, r28
     c5a:	8d 57       	subi	r24, 0x7D	; 125
     c5c:	9f 4f       	sbci	r25, 0xFF	; 255
     c5e:	fc 01       	movw	r30, r24
     c60:	80 81       	ld	r24, Z
     c62:	28 2f       	mov	r18, r24
     c64:	2a 95       	dec	r18
     c66:	f1 f7       	brne	.-4      	; 0xc64 <main+0xb42>
     c68:	ce 01       	movw	r24, r28
     c6a:	8d 57       	subi	r24, 0x7D	; 125
     c6c:	9f 4f       	sbci	r25, 0xFF	; 255
     c6e:	fc 01       	movw	r30, r24
     c70:	20 83       	st	Z, r18
     c72:	e7 c6       	rjmp	.+3534   	; 0x1a42 <main+0x1920>
		_delay_us(716);
		else if ((PINA & 0b00001000) == 0)
     c74:	80 e2       	ldi	r24, 0x20	; 32
     c76:	90 e0       	ldi	r25, 0x00	; 0
     c78:	fc 01       	movw	r30, r24
     c7a:	80 81       	ld	r24, Z
     c7c:	88 2f       	mov	r24, r24
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	88 70       	andi	r24, 0x08	; 8
     c82:	99 27       	eor	r25, r25
     c84:	89 2b       	or	r24, r25
     c86:	09 f0       	breq	.+2      	; 0xc8a <main+0xb68>
     c88:	af c1       	rjmp	.+862    	; 0xfe8 <main+0xec6>
     c8a:	9e 01       	movw	r18, r28
     c8c:	2b 57       	subi	r18, 0x7B	; 123
     c8e:	3f 4f       	sbci	r19, 0xFF	; 255
     c90:	80 e0       	ldi	r24, 0x00	; 0
     c92:	90 e8       	ldi	r25, 0x80	; 128
     c94:	af e1       	ldi	r26, 0x1F	; 31
     c96:	b4 e4       	ldi	r27, 0x44	; 68
     c98:	f9 01       	movw	r30, r18
     c9a:	80 83       	st	Z, r24
     c9c:	91 83       	std	Z+1, r25	; 0x01
     c9e:	a2 83       	std	Z+2, r26	; 0x02
     ca0:	b3 83       	std	Z+3, r27	; 0x03
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ; 
	__tmp = ((F_CPU) / 3e6) * __us;
     ca2:	8e 01       	movw	r16, r28
     ca4:	07 57       	subi	r16, 0x77	; 119
     ca6:	1f 4f       	sbci	r17, 0xFF	; 255
     ca8:	ce 01       	movw	r24, r28
     caa:	8b 57       	subi	r24, 0x7B	; 123
     cac:	9f 4f       	sbci	r25, 0xFF	; 255
     cae:	2b ea       	ldi	r18, 0xAB	; 171
     cb0:	3a ea       	ldi	r19, 0xAA	; 170
     cb2:	4a ea       	ldi	r20, 0xAA	; 170
     cb4:	50 e4       	ldi	r21, 0x40	; 64
     cb6:	fc 01       	movw	r30, r24
     cb8:	60 81       	ld	r22, Z
     cba:	71 81       	ldd	r23, Z+1	; 0x01
     cbc:	82 81       	ldd	r24, Z+2	; 0x02
     cbe:	93 81       	ldd	r25, Z+3	; 0x03
     cc0:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
     cc4:	dc 01       	movw	r26, r24
     cc6:	cb 01       	movw	r24, r22
     cc8:	f8 01       	movw	r30, r16
     cca:	80 83       	st	Z, r24
     ccc:	91 83       	std	Z+1, r25	; 0x01
     cce:	a2 83       	std	Z+2, r26	; 0x02
     cd0:	b3 83       	std	Z+3, r27	; 0x03
	__tmp2 = ((F_CPU) / 4e6) * __us;
     cd2:	8e 01       	movw	r16, r28
     cd4:	03 57       	subi	r16, 0x73	; 115
     cd6:	1f 4f       	sbci	r17, 0xFF	; 255
     cd8:	ce 01       	movw	r24, r28
     cda:	8b 57       	subi	r24, 0x7B	; 123
     cdc:	9f 4f       	sbci	r25, 0xFF	; 255
     cde:	20 e0       	ldi	r18, 0x00	; 0
     ce0:	30 e0       	ldi	r19, 0x00	; 0
     ce2:	40 e8       	ldi	r20, 0x80	; 128
     ce4:	50 e4       	ldi	r21, 0x40	; 64
     ce6:	fc 01       	movw	r30, r24
     ce8:	60 81       	ld	r22, Z
     cea:	71 81       	ldd	r23, Z+1	; 0x01
     cec:	82 81       	ldd	r24, Z+2	; 0x02
     cee:	93 81       	ldd	r25, Z+3	; 0x03
     cf0:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
     cf4:	dc 01       	movw	r26, r24
     cf6:	cb 01       	movw	r24, r22
     cf8:	f8 01       	movw	r30, r16
     cfa:	80 83       	st	Z, r24
     cfc:	91 83       	std	Z+1, r25	; 0x01
     cfe:	a2 83       	std	Z+2, r26	; 0x02
     d00:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     d02:	ce 01       	movw	r24, r28
     d04:	87 57       	subi	r24, 0x77	; 119
     d06:	9f 4f       	sbci	r25, 0xFF	; 255
     d08:	20 e0       	ldi	r18, 0x00	; 0
     d0a:	30 e0       	ldi	r19, 0x00	; 0
     d0c:	40 e8       	ldi	r20, 0x80	; 128
     d0e:	5f e3       	ldi	r21, 0x3F	; 63
     d10:	fc 01       	movw	r30, r24
     d12:	60 81       	ld	r22, Z
     d14:	71 81       	ldd	r23, Z+1	; 0x01
     d16:	82 81       	ldd	r24, Z+2	; 0x02
     d18:	93 81       	ldd	r25, Z+3	; 0x03
     d1a:	0e 94 85 10 	call	0x210a	; 0x210a <__cmpsf2>
     d1e:	88 23       	and	r24, r24
     d20:	3c f4       	brge	.+14     	; 0xd30 <main+0xc0e>
		__ticks = 1;
     d22:	ce 01       	movw	r24, r28
     d24:	8f 56       	subi	r24, 0x6F	; 111
     d26:	9f 4f       	sbci	r25, 0xFF	; 255
     d28:	21 e0       	ldi	r18, 0x01	; 1
     d2a:	fc 01       	movw	r30, r24
     d2c:	20 83       	st	Z, r18
     d2e:	44 c1       	rjmp	.+648    	; 0xfb8 <main+0xe96>
	else if (__tmp2 > 65535)
     d30:	ce 01       	movw	r24, r28
     d32:	83 57       	subi	r24, 0x73	; 115
     d34:	9f 4f       	sbci	r25, 0xFF	; 255
     d36:	20 e0       	ldi	r18, 0x00	; 0
     d38:	3f ef       	ldi	r19, 0xFF	; 255
     d3a:	4f e7       	ldi	r20, 0x7F	; 127
     d3c:	57 e4       	ldi	r21, 0x47	; 71
     d3e:	fc 01       	movw	r30, r24
     d40:	60 81       	ld	r22, Z
     d42:	71 81       	ldd	r23, Z+1	; 0x01
     d44:	82 81       	ldd	r24, Z+2	; 0x02
     d46:	93 81       	ldd	r25, Z+3	; 0x03
     d48:	0e 94 a0 11 	call	0x2340	; 0x2340 <__gesf2>
     d4c:	18 16       	cp	r1, r24
     d4e:	0c f0       	brlt	.+2      	; 0xd52 <main+0xc30>
     d50:	e5 c0       	rjmp	.+458    	; 0xf1c <main+0xdfa>
	{
		_delay_ms(__us / 1000.0);
     d52:	ce 01       	movw	r24, r28
     d54:	8b 57       	subi	r24, 0x7B	; 123
     d56:	9f 4f       	sbci	r25, 0xFF	; 255
     d58:	20 e0       	ldi	r18, 0x00	; 0
     d5a:	30 e0       	ldi	r19, 0x00	; 0
     d5c:	4a e7       	ldi	r20, 0x7A	; 122
     d5e:	54 e4       	ldi	r21, 0x44	; 68
     d60:	fc 01       	movw	r30, r24
     d62:	60 81       	ld	r22, Z
     d64:	71 81       	ldd	r23, Z+1	; 0x01
     d66:	82 81       	ldd	r24, Z+2	; 0x02
     d68:	93 81       	ldd	r25, Z+3	; 0x03
     d6a:	0e 94 8a 10 	call	0x2114	; 0x2114 <__divsf3>
     d6e:	dc 01       	movw	r26, r24
     d70:	cb 01       	movw	r24, r22
     d72:	9e 01       	movw	r18, r28
     d74:	2e 56       	subi	r18, 0x6E	; 110
     d76:	3f 4f       	sbci	r19, 0xFF	; 255
     d78:	f9 01       	movw	r30, r18
     d7a:	80 83       	st	Z, r24
     d7c:	91 83       	std	Z+1, r25	; 0x01
     d7e:	a2 83       	std	Z+2, r26	; 0x02
     d80:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     d82:	8e 01       	movw	r16, r28
     d84:	0a 56       	subi	r16, 0x6A	; 106
     d86:	1f 4f       	sbci	r17, 0xFF	; 255
     d88:	ce 01       	movw	r24, r28
     d8a:	8e 56       	subi	r24, 0x6E	; 110
     d8c:	9f 4f       	sbci	r25, 0xFF	; 255
     d8e:	20 e0       	ldi	r18, 0x00	; 0
     d90:	30 e0       	ldi	r19, 0x00	; 0
     d92:	4a e7       	ldi	r20, 0x7A	; 122
     d94:	55 e4       	ldi	r21, 0x45	; 69
     d96:	fc 01       	movw	r30, r24
     d98:	60 81       	ld	r22, Z
     d9a:	71 81       	ldd	r23, Z+1	; 0x01
     d9c:	82 81       	ldd	r24, Z+2	; 0x02
     d9e:	93 81       	ldd	r25, Z+3	; 0x03
     da0:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
     da4:	dc 01       	movw	r26, r24
     da6:	cb 01       	movw	r24, r22
     da8:	f8 01       	movw	r30, r16
     daa:	80 83       	st	Z, r24
     dac:	91 83       	std	Z+1, r25	; 0x01
     dae:	a2 83       	std	Z+2, r26	; 0x02
     db0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     db2:	ce 01       	movw	r24, r28
     db4:	8a 56       	subi	r24, 0x6A	; 106
     db6:	9f 4f       	sbci	r25, 0xFF	; 255
     db8:	20 e0       	ldi	r18, 0x00	; 0
     dba:	30 e0       	ldi	r19, 0x00	; 0
     dbc:	40 e8       	ldi	r20, 0x80	; 128
     dbe:	5f e3       	ldi	r21, 0x3F	; 63
     dc0:	fc 01       	movw	r30, r24
     dc2:	60 81       	ld	r22, Z
     dc4:	71 81       	ldd	r23, Z+1	; 0x01
     dc6:	82 81       	ldd	r24, Z+2	; 0x02
     dc8:	93 81       	ldd	r25, Z+3	; 0x03
     dca:	0e 94 85 10 	call	0x210a	; 0x210a <__cmpsf2>
     dce:	88 23       	and	r24, r24
     dd0:	4c f4       	brge	.+18     	; 0xde4 <main+0xcc2>
		__ticks = 1;
     dd2:	ce 01       	movw	r24, r28
     dd4:	86 56       	subi	r24, 0x66	; 102
     dd6:	9f 4f       	sbci	r25, 0xFF	; 255
     dd8:	21 e0       	ldi	r18, 0x01	; 1
     dda:	30 e0       	ldi	r19, 0x00	; 0
     ddc:	fc 01       	movw	r30, r24
     dde:	31 83       	std	Z+1, r19	; 0x01
     de0:	20 83       	st	Z, r18
     de2:	77 c0       	rjmp	.+238    	; 0xed2 <main+0xdb0>
	else if (__tmp > 65535)
     de4:	ce 01       	movw	r24, r28
     de6:	8a 56       	subi	r24, 0x6A	; 106
     de8:	9f 4f       	sbci	r25, 0xFF	; 255
     dea:	20 e0       	ldi	r18, 0x00	; 0
     dec:	3f ef       	ldi	r19, 0xFF	; 255
     dee:	4f e7       	ldi	r20, 0x7F	; 127
     df0:	57 e4       	ldi	r21, 0x47	; 71
     df2:	fc 01       	movw	r30, r24
     df4:	60 81       	ld	r22, Z
     df6:	71 81       	ldd	r23, Z+1	; 0x01
     df8:	82 81       	ldd	r24, Z+2	; 0x02
     dfa:	93 81       	ldd	r25, Z+3	; 0x03
     dfc:	0e 94 a0 11 	call	0x2340	; 0x2340 <__gesf2>
     e00:	18 16       	cp	r1, r24
     e02:	0c f0       	brlt	.+2      	; 0xe06 <main+0xce4>
     e04:	54 c0       	rjmp	.+168    	; 0xeae <main+0xd8c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e06:	ce 01       	movw	r24, r28
     e08:	8e 56       	subi	r24, 0x6E	; 110
     e0a:	9f 4f       	sbci	r25, 0xFF	; 255
     e0c:	20 e0       	ldi	r18, 0x00	; 0
     e0e:	30 e0       	ldi	r19, 0x00	; 0
     e10:	40 e2       	ldi	r20, 0x20	; 32
     e12:	51 e4       	ldi	r21, 0x41	; 65
     e14:	fc 01       	movw	r30, r24
     e16:	60 81       	ld	r22, Z
     e18:	71 81       	ldd	r23, Z+1	; 0x01
     e1a:	82 81       	ldd	r24, Z+2	; 0x02
     e1c:	93 81       	ldd	r25, Z+3	; 0x03
     e1e:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
     e22:	dc 01       	movw	r26, r24
     e24:	cb 01       	movw	r24, r22
     e26:	8e 01       	movw	r16, r28
     e28:	06 56       	subi	r16, 0x66	; 102
     e2a:	1f 4f       	sbci	r17, 0xFF	; 255
     e2c:	bc 01       	movw	r22, r24
     e2e:	cd 01       	movw	r24, r26
     e30:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
     e34:	dc 01       	movw	r26, r24
     e36:	cb 01       	movw	r24, r22
     e38:	f8 01       	movw	r30, r16
     e3a:	91 83       	std	Z+1, r25	; 0x01
     e3c:	80 83       	st	Z, r24
     e3e:	24 c0       	rjmp	.+72     	; 0xe88 <main+0xd66>
     e40:	ce 01       	movw	r24, r28
     e42:	84 56       	subi	r24, 0x64	; 100
     e44:	9f 4f       	sbci	r25, 0xFF	; 255
     e46:	20 e9       	ldi	r18, 0x90	; 144
     e48:	31 e0       	ldi	r19, 0x01	; 1
     e4a:	fc 01       	movw	r30, r24
     e4c:	31 83       	std	Z+1, r19	; 0x01
     e4e:	20 83       	st	Z, r18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     e50:	ce 01       	movw	r24, r28
     e52:	84 56       	subi	r24, 0x64	; 100
     e54:	9f 4f       	sbci	r25, 0xFF	; 255
     e56:	fc 01       	movw	r30, r24
     e58:	80 81       	ld	r24, Z
     e5a:	91 81       	ldd	r25, Z+1	; 0x01
     e5c:	01 97       	sbiw	r24, 0x01	; 1
     e5e:	f1 f7       	brne	.-4      	; 0xe5c <main+0xd3a>
     e60:	9e 01       	movw	r18, r28
     e62:	24 56       	subi	r18, 0x64	; 100
     e64:	3f 4f       	sbci	r19, 0xFF	; 255
     e66:	f9 01       	movw	r30, r18
     e68:	91 83       	std	Z+1, r25	; 0x01
     e6a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e6c:	ce 01       	movw	r24, r28
     e6e:	86 56       	subi	r24, 0x66	; 102
     e70:	9f 4f       	sbci	r25, 0xFF	; 255
     e72:	9e 01       	movw	r18, r28
     e74:	26 56       	subi	r18, 0x66	; 102
     e76:	3f 4f       	sbci	r19, 0xFF	; 255
     e78:	f9 01       	movw	r30, r18
     e7a:	20 81       	ld	r18, Z
     e7c:	31 81       	ldd	r19, Z+1	; 0x01
     e7e:	21 50       	subi	r18, 0x01	; 1
     e80:	31 09       	sbc	r19, r1
     e82:	fc 01       	movw	r30, r24
     e84:	31 83       	std	Z+1, r19	; 0x01
     e86:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e88:	ce 01       	movw	r24, r28
     e8a:	86 56       	subi	r24, 0x66	; 102
     e8c:	9f 4f       	sbci	r25, 0xFF	; 255
     e8e:	fc 01       	movw	r30, r24
     e90:	80 81       	ld	r24, Z
     e92:	91 81       	ldd	r25, Z+1	; 0x01
     e94:	89 2b       	or	r24, r25
     e96:	a1 f6       	brne	.-88     	; 0xe40 <main+0xd1e>
     e98:	ce 01       	movw	r24, r28
     e9a:	8f 56       	subi	r24, 0x6F	; 111
     e9c:	9f 4f       	sbci	r25, 0xFF	; 255
     e9e:	9e 01       	movw	r18, r28
     ea0:	2b 55       	subi	r18, 0x5B	; 91
     ea2:	3f 4f       	sbci	r19, 0xFF	; 255
     ea4:	f9 01       	movw	r30, r18
     ea6:	20 81       	ld	r18, Z
     ea8:	fc 01       	movw	r30, r24
     eaa:	20 83       	st	Z, r18
     eac:	85 c0       	rjmp	.+266    	; 0xfb8 <main+0xe96>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     eae:	8e 01       	movw	r16, r28
     eb0:	06 56       	subi	r16, 0x66	; 102
     eb2:	1f 4f       	sbci	r17, 0xFF	; 255
     eb4:	ce 01       	movw	r24, r28
     eb6:	8a 56       	subi	r24, 0x6A	; 106
     eb8:	9f 4f       	sbci	r25, 0xFF	; 255
     eba:	fc 01       	movw	r30, r24
     ebc:	60 81       	ld	r22, Z
     ebe:	71 81       	ldd	r23, Z+1	; 0x01
     ec0:	82 81       	ldd	r24, Z+2	; 0x02
     ec2:	93 81       	ldd	r25, Z+3	; 0x03
     ec4:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
     ec8:	dc 01       	movw	r26, r24
     eca:	cb 01       	movw	r24, r22
     ecc:	f8 01       	movw	r30, r16
     ece:	91 83       	std	Z+1, r25	; 0x01
     ed0:	80 83       	st	Z, r24
     ed2:	ce 01       	movw	r24, r28
     ed4:	82 56       	subi	r24, 0x62	; 98
     ed6:	9f 4f       	sbci	r25, 0xFF	; 255
     ed8:	9e 01       	movw	r18, r28
     eda:	26 56       	subi	r18, 0x66	; 102
     edc:	3f 4f       	sbci	r19, 0xFF	; 255
     ede:	f9 01       	movw	r30, r18
     ee0:	20 81       	ld	r18, Z
     ee2:	31 81       	ldd	r19, Z+1	; 0x01
     ee4:	fc 01       	movw	r30, r24
     ee6:	31 83       	std	Z+1, r19	; 0x01
     ee8:	20 83       	st	Z, r18
     eea:	ce 01       	movw	r24, r28
     eec:	82 56       	subi	r24, 0x62	; 98
     eee:	9f 4f       	sbci	r25, 0xFF	; 255
     ef0:	fc 01       	movw	r30, r24
     ef2:	80 81       	ld	r24, Z
     ef4:	91 81       	ldd	r25, Z+1	; 0x01
     ef6:	01 97       	sbiw	r24, 0x01	; 1
     ef8:	f1 f7       	brne	.-4      	; 0xef6 <main+0xdd4>
     efa:	9e 01       	movw	r18, r28
     efc:	22 56       	subi	r18, 0x62	; 98
     efe:	3f 4f       	sbci	r19, 0xFF	; 255
     f00:	f9 01       	movw	r30, r18
     f02:	91 83       	std	Z+1, r25	; 0x01
     f04:	80 83       	st	Z, r24
     f06:	ce 01       	movw	r24, r28
     f08:	8f 56       	subi	r24, 0x6F	; 111
     f0a:	9f 4f       	sbci	r25, 0xFF	; 255
     f0c:	9e 01       	movw	r18, r28
     f0e:	2b 55       	subi	r18, 0x5B	; 91
     f10:	3f 4f       	sbci	r19, 0xFF	; 255
     f12:	f9 01       	movw	r30, r18
     f14:	20 81       	ld	r18, Z
     f16:	fc 01       	movw	r30, r24
     f18:	20 83       	st	Z, r18
     f1a:	4e c0       	rjmp	.+156    	; 0xfb8 <main+0xe96>
		__ticks = 1;
	else if (__tmp2 > 65535)
	{
		_delay_ms(__us / 1000.0);
	}
	else if (__tmp > 255)
     f1c:	ce 01       	movw	r24, r28
     f1e:	87 57       	subi	r24, 0x77	; 119
     f20:	9f 4f       	sbci	r25, 0xFF	; 255
     f22:	20 e0       	ldi	r18, 0x00	; 0
     f24:	30 e0       	ldi	r19, 0x00	; 0
     f26:	4f e7       	ldi	r20, 0x7F	; 127
     f28:	53 e4       	ldi	r21, 0x43	; 67
     f2a:	fc 01       	movw	r30, r24
     f2c:	60 81       	ld	r22, Z
     f2e:	71 81       	ldd	r23, Z+1	; 0x01
     f30:	82 81       	ldd	r24, Z+2	; 0x02
     f32:	93 81       	ldd	r25, Z+3	; 0x03
     f34:	0e 94 a0 11 	call	0x2340	; 0x2340 <__gesf2>
     f38:	18 16       	cp	r1, r24
     f3a:	6c f5       	brge	.+90     	; 0xf96 <main+0xe74>
	{
		uint16_t __ticks=(uint16_t)__tmp2;
     f3c:	8e 01       	movw	r16, r28
     f3e:	00 56       	subi	r16, 0x60	; 96
     f40:	1f 4f       	sbci	r17, 0xFF	; 255
     f42:	ce 01       	movw	r24, r28
     f44:	83 57       	subi	r24, 0x73	; 115
     f46:	9f 4f       	sbci	r25, 0xFF	; 255
     f48:	fc 01       	movw	r30, r24
     f4a:	60 81       	ld	r22, Z
     f4c:	71 81       	ldd	r23, Z+1	; 0x01
     f4e:	82 81       	ldd	r24, Z+2	; 0x02
     f50:	93 81       	ldd	r25, Z+3	; 0x03
     f52:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
     f56:	dc 01       	movw	r26, r24
     f58:	cb 01       	movw	r24, r22
     f5a:	f8 01       	movw	r30, r16
     f5c:	91 83       	std	Z+1, r25	; 0x01
     f5e:	80 83       	st	Z, r24
     f60:	ce 01       	movw	r24, r28
     f62:	8e 55       	subi	r24, 0x5E	; 94
     f64:	9f 4f       	sbci	r25, 0xFF	; 255
     f66:	9e 01       	movw	r18, r28
     f68:	20 56       	subi	r18, 0x60	; 96
     f6a:	3f 4f       	sbci	r19, 0xFF	; 255
     f6c:	f9 01       	movw	r30, r18
     f6e:	20 81       	ld	r18, Z
     f70:	31 81       	ldd	r19, Z+1	; 0x01
     f72:	fc 01       	movw	r30, r24
     f74:	31 83       	std	Z+1, r19	; 0x01
     f76:	20 83       	st	Z, r18
     f78:	ce 01       	movw	r24, r28
     f7a:	8e 55       	subi	r24, 0x5E	; 94
     f7c:	9f 4f       	sbci	r25, 0xFF	; 255
     f7e:	fc 01       	movw	r30, r24
     f80:	80 81       	ld	r24, Z
     f82:	91 81       	ldd	r25, Z+1	; 0x01
     f84:	01 97       	sbiw	r24, 0x01	; 1
     f86:	f1 f7       	brne	.-4      	; 0xf84 <main+0xe62>
     f88:	9e 01       	movw	r18, r28
     f8a:	2e 55       	subi	r18, 0x5E	; 94
     f8c:	3f 4f       	sbci	r19, 0xFF	; 255
     f8e:	f9 01       	movw	r30, r18
     f90:	91 83       	std	Z+1, r25	; 0x01
     f92:	80 83       	st	Z, r24
     f94:	56 c5       	rjmp	.+2732   	; 0x1a42 <main+0x1920>
		_delay_loop_2(__ticks);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
     f96:	8e 01       	movw	r16, r28
     f98:	0f 56       	subi	r16, 0x6F	; 111
     f9a:	1f 4f       	sbci	r17, 0xFF	; 255
     f9c:	ce 01       	movw	r24, r28
     f9e:	87 57       	subi	r24, 0x77	; 119
     fa0:	9f 4f       	sbci	r25, 0xFF	; 255
     fa2:	fc 01       	movw	r30, r24
     fa4:	60 81       	ld	r22, Z
     fa6:	71 81       	ldd	r23, Z+1	; 0x01
     fa8:	82 81       	ldd	r24, Z+2	; 0x02
     faa:	93 81       	ldd	r25, Z+3	; 0x03
     fac:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
     fb0:	dc 01       	movw	r26, r24
     fb2:	cb 01       	movw	r24, r22
     fb4:	f8 01       	movw	r30, r16
     fb6:	80 83       	st	Z, r24
     fb8:	ce 01       	movw	r24, r28
     fba:	8c 55       	subi	r24, 0x5C	; 92
     fbc:	9f 4f       	sbci	r25, 0xFF	; 255
     fbe:	9e 01       	movw	r18, r28
     fc0:	2f 56       	subi	r18, 0x6F	; 111
     fc2:	3f 4f       	sbci	r19, 0xFF	; 255
     fc4:	f9 01       	movw	r30, r18
     fc6:	20 81       	ld	r18, Z
     fc8:	fc 01       	movw	r30, r24
     fca:	20 83       	st	Z, r18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     fcc:	ce 01       	movw	r24, r28
     fce:	8c 55       	subi	r24, 0x5C	; 92
     fd0:	9f 4f       	sbci	r25, 0xFF	; 255
     fd2:	fc 01       	movw	r30, r24
     fd4:	80 81       	ld	r24, Z
     fd6:	28 2f       	mov	r18, r24
     fd8:	2a 95       	dec	r18
     fda:	f1 f7       	brne	.-4      	; 0xfd8 <main+0xeb6>
     fdc:	ce 01       	movw	r24, r28
     fde:	8c 55       	subi	r24, 0x5C	; 92
     fe0:	9f 4f       	sbci	r25, 0xFF	; 255
     fe2:	fc 01       	movw	r30, r24
     fe4:	20 83       	st	Z, r18
     fe6:	2d c5       	rjmp	.+2650   	; 0x1a42 <main+0x1920>
		_delay_us(638);
		else if ((PINA & 0b00000100) == 0)
     fe8:	80 e2       	ldi	r24, 0x20	; 32
     fea:	90 e0       	ldi	r25, 0x00	; 0
     fec:	fc 01       	movw	r30, r24
     fee:	80 81       	ld	r24, Z
     ff0:	88 2f       	mov	r24, r24
     ff2:	90 e0       	ldi	r25, 0x00	; 0
     ff4:	84 70       	andi	r24, 0x04	; 4
     ff6:	99 27       	eor	r25, r25
     ff8:	89 2b       	or	r24, r25
     ffa:	09 f0       	breq	.+2      	; 0xffe <main+0xedc>
     ffc:	af c1       	rjmp	.+862    	; 0x135c <main+0x123a>
     ffe:	9e 01       	movw	r18, r28
    1000:	2a 55       	subi	r18, 0x5A	; 90
    1002:	3f 4f       	sbci	r19, 0xFF	; 255
    1004:	80 e0       	ldi	r24, 0x00	; 0
    1006:	90 e0       	ldi	r25, 0x00	; 0
    1008:	ae e0       	ldi	r26, 0x0E	; 14
    100a:	b4 e4       	ldi	r27, 0x44	; 68
    100c:	f9 01       	movw	r30, r18
    100e:	80 83       	st	Z, r24
    1010:	91 83       	std	Z+1, r25	; 0x01
    1012:	a2 83       	std	Z+2, r26	; 0x02
    1014:	b3 83       	std	Z+3, r27	; 0x03
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ; 
	__tmp = ((F_CPU) / 3e6) * __us;
    1016:	8e 01       	movw	r16, r28
    1018:	06 55       	subi	r16, 0x56	; 86
    101a:	1f 4f       	sbci	r17, 0xFF	; 255
    101c:	ce 01       	movw	r24, r28
    101e:	8a 55       	subi	r24, 0x5A	; 90
    1020:	9f 4f       	sbci	r25, 0xFF	; 255
    1022:	2b ea       	ldi	r18, 0xAB	; 171
    1024:	3a ea       	ldi	r19, 0xAA	; 170
    1026:	4a ea       	ldi	r20, 0xAA	; 170
    1028:	50 e4       	ldi	r21, 0x40	; 64
    102a:	fc 01       	movw	r30, r24
    102c:	60 81       	ld	r22, Z
    102e:	71 81       	ldd	r23, Z+1	; 0x01
    1030:	82 81       	ldd	r24, Z+2	; 0x02
    1032:	93 81       	ldd	r25, Z+3	; 0x03
    1034:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
    1038:	dc 01       	movw	r26, r24
    103a:	cb 01       	movw	r24, r22
    103c:	f8 01       	movw	r30, r16
    103e:	80 83       	st	Z, r24
    1040:	91 83       	std	Z+1, r25	; 0x01
    1042:	a2 83       	std	Z+2, r26	; 0x02
    1044:	b3 83       	std	Z+3, r27	; 0x03
	__tmp2 = ((F_CPU) / 4e6) * __us;
    1046:	8e 01       	movw	r16, r28
    1048:	02 55       	subi	r16, 0x52	; 82
    104a:	1f 4f       	sbci	r17, 0xFF	; 255
    104c:	ce 01       	movw	r24, r28
    104e:	8a 55       	subi	r24, 0x5A	; 90
    1050:	9f 4f       	sbci	r25, 0xFF	; 255
    1052:	20 e0       	ldi	r18, 0x00	; 0
    1054:	30 e0       	ldi	r19, 0x00	; 0
    1056:	40 e8       	ldi	r20, 0x80	; 128
    1058:	50 e4       	ldi	r21, 0x40	; 64
    105a:	fc 01       	movw	r30, r24
    105c:	60 81       	ld	r22, Z
    105e:	71 81       	ldd	r23, Z+1	; 0x01
    1060:	82 81       	ldd	r24, Z+2	; 0x02
    1062:	93 81       	ldd	r25, Z+3	; 0x03
    1064:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
    1068:	dc 01       	movw	r26, r24
    106a:	cb 01       	movw	r24, r22
    106c:	f8 01       	movw	r30, r16
    106e:	80 83       	st	Z, r24
    1070:	91 83       	std	Z+1, r25	; 0x01
    1072:	a2 83       	std	Z+2, r26	; 0x02
    1074:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1076:	ce 01       	movw	r24, r28
    1078:	86 55       	subi	r24, 0x56	; 86
    107a:	9f 4f       	sbci	r25, 0xFF	; 255
    107c:	20 e0       	ldi	r18, 0x00	; 0
    107e:	30 e0       	ldi	r19, 0x00	; 0
    1080:	40 e8       	ldi	r20, 0x80	; 128
    1082:	5f e3       	ldi	r21, 0x3F	; 63
    1084:	fc 01       	movw	r30, r24
    1086:	60 81       	ld	r22, Z
    1088:	71 81       	ldd	r23, Z+1	; 0x01
    108a:	82 81       	ldd	r24, Z+2	; 0x02
    108c:	93 81       	ldd	r25, Z+3	; 0x03
    108e:	0e 94 85 10 	call	0x210a	; 0x210a <__cmpsf2>
    1092:	88 23       	and	r24, r24
    1094:	3c f4       	brge	.+14     	; 0x10a4 <main+0xf82>
		__ticks = 1;
    1096:	ce 01       	movw	r24, r28
    1098:	8e 54       	subi	r24, 0x4E	; 78
    109a:	9f 4f       	sbci	r25, 0xFF	; 255
    109c:	21 e0       	ldi	r18, 0x01	; 1
    109e:	fc 01       	movw	r30, r24
    10a0:	20 83       	st	Z, r18
    10a2:	44 c1       	rjmp	.+648    	; 0x132c <main+0x120a>
	else if (__tmp2 > 65535)
    10a4:	ce 01       	movw	r24, r28
    10a6:	82 55       	subi	r24, 0x52	; 82
    10a8:	9f 4f       	sbci	r25, 0xFF	; 255
    10aa:	20 e0       	ldi	r18, 0x00	; 0
    10ac:	3f ef       	ldi	r19, 0xFF	; 255
    10ae:	4f e7       	ldi	r20, 0x7F	; 127
    10b0:	57 e4       	ldi	r21, 0x47	; 71
    10b2:	fc 01       	movw	r30, r24
    10b4:	60 81       	ld	r22, Z
    10b6:	71 81       	ldd	r23, Z+1	; 0x01
    10b8:	82 81       	ldd	r24, Z+2	; 0x02
    10ba:	93 81       	ldd	r25, Z+3	; 0x03
    10bc:	0e 94 a0 11 	call	0x2340	; 0x2340 <__gesf2>
    10c0:	18 16       	cp	r1, r24
    10c2:	0c f0       	brlt	.+2      	; 0x10c6 <main+0xfa4>
    10c4:	e5 c0       	rjmp	.+458    	; 0x1290 <main+0x116e>
	{
		_delay_ms(__us / 1000.0);
    10c6:	ce 01       	movw	r24, r28
    10c8:	8a 55       	subi	r24, 0x5A	; 90
    10ca:	9f 4f       	sbci	r25, 0xFF	; 255
    10cc:	20 e0       	ldi	r18, 0x00	; 0
    10ce:	30 e0       	ldi	r19, 0x00	; 0
    10d0:	4a e7       	ldi	r20, 0x7A	; 122
    10d2:	54 e4       	ldi	r21, 0x44	; 68
    10d4:	fc 01       	movw	r30, r24
    10d6:	60 81       	ld	r22, Z
    10d8:	71 81       	ldd	r23, Z+1	; 0x01
    10da:	82 81       	ldd	r24, Z+2	; 0x02
    10dc:	93 81       	ldd	r25, Z+3	; 0x03
    10de:	0e 94 8a 10 	call	0x2114	; 0x2114 <__divsf3>
    10e2:	dc 01       	movw	r26, r24
    10e4:	cb 01       	movw	r24, r22
    10e6:	9e 01       	movw	r18, r28
    10e8:	2d 54       	subi	r18, 0x4D	; 77
    10ea:	3f 4f       	sbci	r19, 0xFF	; 255
    10ec:	f9 01       	movw	r30, r18
    10ee:	80 83       	st	Z, r24
    10f0:	91 83       	std	Z+1, r25	; 0x01
    10f2:	a2 83       	std	Z+2, r26	; 0x02
    10f4:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    10f6:	8e 01       	movw	r16, r28
    10f8:	09 54       	subi	r16, 0x49	; 73
    10fa:	1f 4f       	sbci	r17, 0xFF	; 255
    10fc:	ce 01       	movw	r24, r28
    10fe:	8d 54       	subi	r24, 0x4D	; 77
    1100:	9f 4f       	sbci	r25, 0xFF	; 255
    1102:	20 e0       	ldi	r18, 0x00	; 0
    1104:	30 e0       	ldi	r19, 0x00	; 0
    1106:	4a e7       	ldi	r20, 0x7A	; 122
    1108:	55 e4       	ldi	r21, 0x45	; 69
    110a:	fc 01       	movw	r30, r24
    110c:	60 81       	ld	r22, Z
    110e:	71 81       	ldd	r23, Z+1	; 0x01
    1110:	82 81       	ldd	r24, Z+2	; 0x02
    1112:	93 81       	ldd	r25, Z+3	; 0x03
    1114:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
    1118:	dc 01       	movw	r26, r24
    111a:	cb 01       	movw	r24, r22
    111c:	f8 01       	movw	r30, r16
    111e:	80 83       	st	Z, r24
    1120:	91 83       	std	Z+1, r25	; 0x01
    1122:	a2 83       	std	Z+2, r26	; 0x02
    1124:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1126:	ce 01       	movw	r24, r28
    1128:	89 54       	subi	r24, 0x49	; 73
    112a:	9f 4f       	sbci	r25, 0xFF	; 255
    112c:	20 e0       	ldi	r18, 0x00	; 0
    112e:	30 e0       	ldi	r19, 0x00	; 0
    1130:	40 e8       	ldi	r20, 0x80	; 128
    1132:	5f e3       	ldi	r21, 0x3F	; 63
    1134:	fc 01       	movw	r30, r24
    1136:	60 81       	ld	r22, Z
    1138:	71 81       	ldd	r23, Z+1	; 0x01
    113a:	82 81       	ldd	r24, Z+2	; 0x02
    113c:	93 81       	ldd	r25, Z+3	; 0x03
    113e:	0e 94 85 10 	call	0x210a	; 0x210a <__cmpsf2>
    1142:	88 23       	and	r24, r24
    1144:	4c f4       	brge	.+18     	; 0x1158 <main+0x1036>
		__ticks = 1;
    1146:	ce 01       	movw	r24, r28
    1148:	85 54       	subi	r24, 0x45	; 69
    114a:	9f 4f       	sbci	r25, 0xFF	; 255
    114c:	21 e0       	ldi	r18, 0x01	; 1
    114e:	30 e0       	ldi	r19, 0x00	; 0
    1150:	fc 01       	movw	r30, r24
    1152:	31 83       	std	Z+1, r19	; 0x01
    1154:	20 83       	st	Z, r18
    1156:	77 c0       	rjmp	.+238    	; 0x1246 <main+0x1124>
	else if (__tmp > 65535)
    1158:	ce 01       	movw	r24, r28
    115a:	89 54       	subi	r24, 0x49	; 73
    115c:	9f 4f       	sbci	r25, 0xFF	; 255
    115e:	20 e0       	ldi	r18, 0x00	; 0
    1160:	3f ef       	ldi	r19, 0xFF	; 255
    1162:	4f e7       	ldi	r20, 0x7F	; 127
    1164:	57 e4       	ldi	r21, 0x47	; 71
    1166:	fc 01       	movw	r30, r24
    1168:	60 81       	ld	r22, Z
    116a:	71 81       	ldd	r23, Z+1	; 0x01
    116c:	82 81       	ldd	r24, Z+2	; 0x02
    116e:	93 81       	ldd	r25, Z+3	; 0x03
    1170:	0e 94 a0 11 	call	0x2340	; 0x2340 <__gesf2>
    1174:	18 16       	cp	r1, r24
    1176:	0c f0       	brlt	.+2      	; 0x117a <main+0x1058>
    1178:	54 c0       	rjmp	.+168    	; 0x1222 <main+0x1100>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    117a:	ce 01       	movw	r24, r28
    117c:	8d 54       	subi	r24, 0x4D	; 77
    117e:	9f 4f       	sbci	r25, 0xFF	; 255
    1180:	20 e0       	ldi	r18, 0x00	; 0
    1182:	30 e0       	ldi	r19, 0x00	; 0
    1184:	40 e2       	ldi	r20, 0x20	; 32
    1186:	51 e4       	ldi	r21, 0x41	; 65
    1188:	fc 01       	movw	r30, r24
    118a:	60 81       	ld	r22, Z
    118c:	71 81       	ldd	r23, Z+1	; 0x01
    118e:	82 81       	ldd	r24, Z+2	; 0x02
    1190:	93 81       	ldd	r25, Z+3	; 0x03
    1192:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
    1196:	dc 01       	movw	r26, r24
    1198:	cb 01       	movw	r24, r22
    119a:	8e 01       	movw	r16, r28
    119c:	05 54       	subi	r16, 0x45	; 69
    119e:	1f 4f       	sbci	r17, 0xFF	; 255
    11a0:	bc 01       	movw	r22, r24
    11a2:	cd 01       	movw	r24, r26
    11a4:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
    11a8:	dc 01       	movw	r26, r24
    11aa:	cb 01       	movw	r24, r22
    11ac:	f8 01       	movw	r30, r16
    11ae:	91 83       	std	Z+1, r25	; 0x01
    11b0:	80 83       	st	Z, r24
    11b2:	24 c0       	rjmp	.+72     	; 0x11fc <main+0x10da>
    11b4:	ce 01       	movw	r24, r28
    11b6:	83 54       	subi	r24, 0x43	; 67
    11b8:	9f 4f       	sbci	r25, 0xFF	; 255
    11ba:	20 e9       	ldi	r18, 0x90	; 144
    11bc:	31 e0       	ldi	r19, 0x01	; 1
    11be:	fc 01       	movw	r30, r24
    11c0:	31 83       	std	Z+1, r19	; 0x01
    11c2:	20 83       	st	Z, r18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    11c4:	ce 01       	movw	r24, r28
    11c6:	83 54       	subi	r24, 0x43	; 67
    11c8:	9f 4f       	sbci	r25, 0xFF	; 255
    11ca:	fc 01       	movw	r30, r24
    11cc:	80 81       	ld	r24, Z
    11ce:	91 81       	ldd	r25, Z+1	; 0x01
    11d0:	01 97       	sbiw	r24, 0x01	; 1
    11d2:	f1 f7       	brne	.-4      	; 0x11d0 <main+0x10ae>
    11d4:	9e 01       	movw	r18, r28
    11d6:	23 54       	subi	r18, 0x43	; 67
    11d8:	3f 4f       	sbci	r19, 0xFF	; 255
    11da:	f9 01       	movw	r30, r18
    11dc:	91 83       	std	Z+1, r25	; 0x01
    11de:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    11e0:	ce 01       	movw	r24, r28
    11e2:	85 54       	subi	r24, 0x45	; 69
    11e4:	9f 4f       	sbci	r25, 0xFF	; 255
    11e6:	9e 01       	movw	r18, r28
    11e8:	25 54       	subi	r18, 0x45	; 69
    11ea:	3f 4f       	sbci	r19, 0xFF	; 255
    11ec:	f9 01       	movw	r30, r18
    11ee:	20 81       	ld	r18, Z
    11f0:	31 81       	ldd	r19, Z+1	; 0x01
    11f2:	21 50       	subi	r18, 0x01	; 1
    11f4:	31 09       	sbc	r19, r1
    11f6:	fc 01       	movw	r30, r24
    11f8:	31 83       	std	Z+1, r19	; 0x01
    11fa:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    11fc:	ce 01       	movw	r24, r28
    11fe:	85 54       	subi	r24, 0x45	; 69
    1200:	9f 4f       	sbci	r25, 0xFF	; 255
    1202:	fc 01       	movw	r30, r24
    1204:	80 81       	ld	r24, Z
    1206:	91 81       	ldd	r25, Z+1	; 0x01
    1208:	89 2b       	or	r24, r25
    120a:	a1 f6       	brne	.-88     	; 0x11b4 <main+0x1092>
    120c:	ce 01       	movw	r24, r28
    120e:	8e 54       	subi	r24, 0x4E	; 78
    1210:	9f 4f       	sbci	r25, 0xFF	; 255
    1212:	9e 01       	movw	r18, r28
    1214:	2a 53       	subi	r18, 0x3A	; 58
    1216:	3f 4f       	sbci	r19, 0xFF	; 255
    1218:	f9 01       	movw	r30, r18
    121a:	20 81       	ld	r18, Z
    121c:	fc 01       	movw	r30, r24
    121e:	20 83       	st	Z, r18
    1220:	85 c0       	rjmp	.+266    	; 0x132c <main+0x120a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1222:	8e 01       	movw	r16, r28
    1224:	05 54       	subi	r16, 0x45	; 69
    1226:	1f 4f       	sbci	r17, 0xFF	; 255
    1228:	ce 01       	movw	r24, r28
    122a:	89 54       	subi	r24, 0x49	; 73
    122c:	9f 4f       	sbci	r25, 0xFF	; 255
    122e:	fc 01       	movw	r30, r24
    1230:	60 81       	ld	r22, Z
    1232:	71 81       	ldd	r23, Z+1	; 0x01
    1234:	82 81       	ldd	r24, Z+2	; 0x02
    1236:	93 81       	ldd	r25, Z+3	; 0x03
    1238:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
    123c:	dc 01       	movw	r26, r24
    123e:	cb 01       	movw	r24, r22
    1240:	f8 01       	movw	r30, r16
    1242:	91 83       	std	Z+1, r25	; 0x01
    1244:	80 83       	st	Z, r24
    1246:	ce 01       	movw	r24, r28
    1248:	81 54       	subi	r24, 0x41	; 65
    124a:	9f 4f       	sbci	r25, 0xFF	; 255
    124c:	9e 01       	movw	r18, r28
    124e:	25 54       	subi	r18, 0x45	; 69
    1250:	3f 4f       	sbci	r19, 0xFF	; 255
    1252:	f9 01       	movw	r30, r18
    1254:	20 81       	ld	r18, Z
    1256:	31 81       	ldd	r19, Z+1	; 0x01
    1258:	fc 01       	movw	r30, r24
    125a:	31 83       	std	Z+1, r19	; 0x01
    125c:	20 83       	st	Z, r18
    125e:	ce 01       	movw	r24, r28
    1260:	81 54       	subi	r24, 0x41	; 65
    1262:	9f 4f       	sbci	r25, 0xFF	; 255
    1264:	fc 01       	movw	r30, r24
    1266:	80 81       	ld	r24, Z
    1268:	91 81       	ldd	r25, Z+1	; 0x01
    126a:	01 97       	sbiw	r24, 0x01	; 1
    126c:	f1 f7       	brne	.-4      	; 0x126a <main+0x1148>
    126e:	9e 01       	movw	r18, r28
    1270:	21 54       	subi	r18, 0x41	; 65
    1272:	3f 4f       	sbci	r19, 0xFF	; 255
    1274:	f9 01       	movw	r30, r18
    1276:	91 83       	std	Z+1, r25	; 0x01
    1278:	80 83       	st	Z, r24
    127a:	ce 01       	movw	r24, r28
    127c:	8e 54       	subi	r24, 0x4E	; 78
    127e:	9f 4f       	sbci	r25, 0xFF	; 255
    1280:	9e 01       	movw	r18, r28
    1282:	2a 53       	subi	r18, 0x3A	; 58
    1284:	3f 4f       	sbci	r19, 0xFF	; 255
    1286:	f9 01       	movw	r30, r18
    1288:	20 81       	ld	r18, Z
    128a:	fc 01       	movw	r30, r24
    128c:	20 83       	st	Z, r18
    128e:	4e c0       	rjmp	.+156    	; 0x132c <main+0x120a>
		__ticks = 1;
	else if (__tmp2 > 65535)
	{
		_delay_ms(__us / 1000.0);
	}
	else if (__tmp > 255)
    1290:	ce 01       	movw	r24, r28
    1292:	86 55       	subi	r24, 0x56	; 86
    1294:	9f 4f       	sbci	r25, 0xFF	; 255
    1296:	20 e0       	ldi	r18, 0x00	; 0
    1298:	30 e0       	ldi	r19, 0x00	; 0
    129a:	4f e7       	ldi	r20, 0x7F	; 127
    129c:	53 e4       	ldi	r21, 0x43	; 67
    129e:	fc 01       	movw	r30, r24
    12a0:	60 81       	ld	r22, Z
    12a2:	71 81       	ldd	r23, Z+1	; 0x01
    12a4:	82 81       	ldd	r24, Z+2	; 0x02
    12a6:	93 81       	ldd	r25, Z+3	; 0x03
    12a8:	0e 94 a0 11 	call	0x2340	; 0x2340 <__gesf2>
    12ac:	18 16       	cp	r1, r24
    12ae:	6c f5       	brge	.+90     	; 0x130a <main+0x11e8>
	{
		uint16_t __ticks=(uint16_t)__tmp2;
    12b0:	8e 01       	movw	r16, r28
    12b2:	0f 53       	subi	r16, 0x3F	; 63
    12b4:	1f 4f       	sbci	r17, 0xFF	; 255
    12b6:	ce 01       	movw	r24, r28
    12b8:	82 55       	subi	r24, 0x52	; 82
    12ba:	9f 4f       	sbci	r25, 0xFF	; 255
    12bc:	fc 01       	movw	r30, r24
    12be:	60 81       	ld	r22, Z
    12c0:	71 81       	ldd	r23, Z+1	; 0x01
    12c2:	82 81       	ldd	r24, Z+2	; 0x02
    12c4:	93 81       	ldd	r25, Z+3	; 0x03
    12c6:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
    12ca:	dc 01       	movw	r26, r24
    12cc:	cb 01       	movw	r24, r22
    12ce:	f8 01       	movw	r30, r16
    12d0:	91 83       	std	Z+1, r25	; 0x01
    12d2:	80 83       	st	Z, r24
    12d4:	ce 01       	movw	r24, r28
    12d6:	8d 53       	subi	r24, 0x3D	; 61
    12d8:	9f 4f       	sbci	r25, 0xFF	; 255
    12da:	9e 01       	movw	r18, r28
    12dc:	2f 53       	subi	r18, 0x3F	; 63
    12de:	3f 4f       	sbci	r19, 0xFF	; 255
    12e0:	f9 01       	movw	r30, r18
    12e2:	20 81       	ld	r18, Z
    12e4:	31 81       	ldd	r19, Z+1	; 0x01
    12e6:	fc 01       	movw	r30, r24
    12e8:	31 83       	std	Z+1, r19	; 0x01
    12ea:	20 83       	st	Z, r18
    12ec:	ce 01       	movw	r24, r28
    12ee:	8d 53       	subi	r24, 0x3D	; 61
    12f0:	9f 4f       	sbci	r25, 0xFF	; 255
    12f2:	fc 01       	movw	r30, r24
    12f4:	80 81       	ld	r24, Z
    12f6:	91 81       	ldd	r25, Z+1	; 0x01
    12f8:	01 97       	sbiw	r24, 0x01	; 1
    12fa:	f1 f7       	brne	.-4      	; 0x12f8 <main+0x11d6>
    12fc:	9e 01       	movw	r18, r28
    12fe:	2d 53       	subi	r18, 0x3D	; 61
    1300:	3f 4f       	sbci	r19, 0xFF	; 255
    1302:	f9 01       	movw	r30, r18
    1304:	91 83       	std	Z+1, r25	; 0x01
    1306:	80 83       	st	Z, r24
    1308:	9c c3       	rjmp	.+1848   	; 0x1a42 <main+0x1920>
		_delay_loop_2(__ticks);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    130a:	8e 01       	movw	r16, r28
    130c:	0e 54       	subi	r16, 0x4E	; 78
    130e:	1f 4f       	sbci	r17, 0xFF	; 255
    1310:	ce 01       	movw	r24, r28
    1312:	86 55       	subi	r24, 0x56	; 86
    1314:	9f 4f       	sbci	r25, 0xFF	; 255
    1316:	fc 01       	movw	r30, r24
    1318:	60 81       	ld	r22, Z
    131a:	71 81       	ldd	r23, Z+1	; 0x01
    131c:	82 81       	ldd	r24, Z+2	; 0x02
    131e:	93 81       	ldd	r25, Z+3	; 0x03
    1320:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
    1324:	dc 01       	movw	r26, r24
    1326:	cb 01       	movw	r24, r22
    1328:	f8 01       	movw	r30, r16
    132a:	80 83       	st	Z, r24
    132c:	ce 01       	movw	r24, r28
    132e:	8b 53       	subi	r24, 0x3B	; 59
    1330:	9f 4f       	sbci	r25, 0xFF	; 255
    1332:	9e 01       	movw	r18, r28
    1334:	2e 54       	subi	r18, 0x4E	; 78
    1336:	3f 4f       	sbci	r19, 0xFF	; 255
    1338:	f9 01       	movw	r30, r18
    133a:	20 81       	ld	r18, Z
    133c:	fc 01       	movw	r30, r24
    133e:	20 83       	st	Z, r18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1340:	ce 01       	movw	r24, r28
    1342:	8b 53       	subi	r24, 0x3B	; 59
    1344:	9f 4f       	sbci	r25, 0xFF	; 255
    1346:	fc 01       	movw	r30, r24
    1348:	80 81       	ld	r24, Z
    134a:	28 2f       	mov	r18, r24
    134c:	2a 95       	dec	r18
    134e:	f1 f7       	brne	.-4      	; 0x134c <main+0x122a>
    1350:	ce 01       	movw	r24, r28
    1352:	8b 53       	subi	r24, 0x3B	; 59
    1354:	9f 4f       	sbci	r25, 0xFF	; 255
    1356:	fc 01       	movw	r30, r24
    1358:	20 83       	st	Z, r18
    135a:	73 c3       	rjmp	.+1766   	; 0x1a42 <main+0x1920>
		_delay_us(568);
		else if ((PINA & 0b00000010) == 0)
    135c:	80 e2       	ldi	r24, 0x20	; 32
    135e:	90 e0       	ldi	r25, 0x00	; 0
    1360:	fc 01       	movw	r30, r24
    1362:	80 81       	ld	r24, Z
    1364:	88 2f       	mov	r24, r24
    1366:	90 e0       	ldi	r25, 0x00	; 0
    1368:	82 70       	andi	r24, 0x02	; 2
    136a:	99 27       	eor	r25, r25
    136c:	89 2b       	or	r24, r25
    136e:	09 f0       	breq	.+2      	; 0x1372 <main+0x1250>
    1370:	af c1       	rjmp	.+862    	; 0x16d0 <main+0x15ae>
    1372:	9e 01       	movw	r18, r28
    1374:	29 53       	subi	r18, 0x39	; 57
    1376:	3f 4f       	sbci	r19, 0xFF	; 255
    1378:	80 e0       	ldi	r24, 0x00	; 0
    137a:	90 e0       	ldi	r25, 0x00	; 0
    137c:	ad ef       	ldi	r26, 0xFD	; 253
    137e:	b3 e4       	ldi	r27, 0x43	; 67
    1380:	f9 01       	movw	r30, r18
    1382:	80 83       	st	Z, r24
    1384:	91 83       	std	Z+1, r25	; 0x01
    1386:	a2 83       	std	Z+2, r26	; 0x02
    1388:	b3 83       	std	Z+3, r27	; 0x03
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ; 
	__tmp = ((F_CPU) / 3e6) * __us;
    138a:	8e 01       	movw	r16, r28
    138c:	05 53       	subi	r16, 0x35	; 53
    138e:	1f 4f       	sbci	r17, 0xFF	; 255
    1390:	ce 01       	movw	r24, r28
    1392:	89 53       	subi	r24, 0x39	; 57
    1394:	9f 4f       	sbci	r25, 0xFF	; 255
    1396:	2b ea       	ldi	r18, 0xAB	; 171
    1398:	3a ea       	ldi	r19, 0xAA	; 170
    139a:	4a ea       	ldi	r20, 0xAA	; 170
    139c:	50 e4       	ldi	r21, 0x40	; 64
    139e:	fc 01       	movw	r30, r24
    13a0:	60 81       	ld	r22, Z
    13a2:	71 81       	ldd	r23, Z+1	; 0x01
    13a4:	82 81       	ldd	r24, Z+2	; 0x02
    13a6:	93 81       	ldd	r25, Z+3	; 0x03
    13a8:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
    13ac:	dc 01       	movw	r26, r24
    13ae:	cb 01       	movw	r24, r22
    13b0:	f8 01       	movw	r30, r16
    13b2:	80 83       	st	Z, r24
    13b4:	91 83       	std	Z+1, r25	; 0x01
    13b6:	a2 83       	std	Z+2, r26	; 0x02
    13b8:	b3 83       	std	Z+3, r27	; 0x03
	__tmp2 = ((F_CPU) / 4e6) * __us;
    13ba:	8e 01       	movw	r16, r28
    13bc:	01 53       	subi	r16, 0x31	; 49
    13be:	1f 4f       	sbci	r17, 0xFF	; 255
    13c0:	ce 01       	movw	r24, r28
    13c2:	89 53       	subi	r24, 0x39	; 57
    13c4:	9f 4f       	sbci	r25, 0xFF	; 255
    13c6:	20 e0       	ldi	r18, 0x00	; 0
    13c8:	30 e0       	ldi	r19, 0x00	; 0
    13ca:	40 e8       	ldi	r20, 0x80	; 128
    13cc:	50 e4       	ldi	r21, 0x40	; 64
    13ce:	fc 01       	movw	r30, r24
    13d0:	60 81       	ld	r22, Z
    13d2:	71 81       	ldd	r23, Z+1	; 0x01
    13d4:	82 81       	ldd	r24, Z+2	; 0x02
    13d6:	93 81       	ldd	r25, Z+3	; 0x03
    13d8:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
    13dc:	dc 01       	movw	r26, r24
    13de:	cb 01       	movw	r24, r22
    13e0:	f8 01       	movw	r30, r16
    13e2:	80 83       	st	Z, r24
    13e4:	91 83       	std	Z+1, r25	; 0x01
    13e6:	a2 83       	std	Z+2, r26	; 0x02
    13e8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    13ea:	ce 01       	movw	r24, r28
    13ec:	85 53       	subi	r24, 0x35	; 53
    13ee:	9f 4f       	sbci	r25, 0xFF	; 255
    13f0:	20 e0       	ldi	r18, 0x00	; 0
    13f2:	30 e0       	ldi	r19, 0x00	; 0
    13f4:	40 e8       	ldi	r20, 0x80	; 128
    13f6:	5f e3       	ldi	r21, 0x3F	; 63
    13f8:	fc 01       	movw	r30, r24
    13fa:	60 81       	ld	r22, Z
    13fc:	71 81       	ldd	r23, Z+1	; 0x01
    13fe:	82 81       	ldd	r24, Z+2	; 0x02
    1400:	93 81       	ldd	r25, Z+3	; 0x03
    1402:	0e 94 85 10 	call	0x210a	; 0x210a <__cmpsf2>
    1406:	88 23       	and	r24, r24
    1408:	3c f4       	brge	.+14     	; 0x1418 <main+0x12f6>
		__ticks = 1;
    140a:	ce 01       	movw	r24, r28
    140c:	8d 52       	subi	r24, 0x2D	; 45
    140e:	9f 4f       	sbci	r25, 0xFF	; 255
    1410:	21 e0       	ldi	r18, 0x01	; 1
    1412:	fc 01       	movw	r30, r24
    1414:	20 83       	st	Z, r18
    1416:	44 c1       	rjmp	.+648    	; 0x16a0 <main+0x157e>
	else if (__tmp2 > 65535)
    1418:	ce 01       	movw	r24, r28
    141a:	81 53       	subi	r24, 0x31	; 49
    141c:	9f 4f       	sbci	r25, 0xFF	; 255
    141e:	20 e0       	ldi	r18, 0x00	; 0
    1420:	3f ef       	ldi	r19, 0xFF	; 255
    1422:	4f e7       	ldi	r20, 0x7F	; 127
    1424:	57 e4       	ldi	r21, 0x47	; 71
    1426:	fc 01       	movw	r30, r24
    1428:	60 81       	ld	r22, Z
    142a:	71 81       	ldd	r23, Z+1	; 0x01
    142c:	82 81       	ldd	r24, Z+2	; 0x02
    142e:	93 81       	ldd	r25, Z+3	; 0x03
    1430:	0e 94 a0 11 	call	0x2340	; 0x2340 <__gesf2>
    1434:	18 16       	cp	r1, r24
    1436:	0c f0       	brlt	.+2      	; 0x143a <main+0x1318>
    1438:	e5 c0       	rjmp	.+458    	; 0x1604 <main+0x14e2>
	{
		_delay_ms(__us / 1000.0);
    143a:	ce 01       	movw	r24, r28
    143c:	89 53       	subi	r24, 0x39	; 57
    143e:	9f 4f       	sbci	r25, 0xFF	; 255
    1440:	20 e0       	ldi	r18, 0x00	; 0
    1442:	30 e0       	ldi	r19, 0x00	; 0
    1444:	4a e7       	ldi	r20, 0x7A	; 122
    1446:	54 e4       	ldi	r21, 0x44	; 68
    1448:	fc 01       	movw	r30, r24
    144a:	60 81       	ld	r22, Z
    144c:	71 81       	ldd	r23, Z+1	; 0x01
    144e:	82 81       	ldd	r24, Z+2	; 0x02
    1450:	93 81       	ldd	r25, Z+3	; 0x03
    1452:	0e 94 8a 10 	call	0x2114	; 0x2114 <__divsf3>
    1456:	dc 01       	movw	r26, r24
    1458:	cb 01       	movw	r24, r22
    145a:	9e 01       	movw	r18, r28
    145c:	2c 52       	subi	r18, 0x2C	; 44
    145e:	3f 4f       	sbci	r19, 0xFF	; 255
    1460:	f9 01       	movw	r30, r18
    1462:	80 83       	st	Z, r24
    1464:	91 83       	std	Z+1, r25	; 0x01
    1466:	a2 83       	std	Z+2, r26	; 0x02
    1468:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    146a:	8e 01       	movw	r16, r28
    146c:	08 52       	subi	r16, 0x28	; 40
    146e:	1f 4f       	sbci	r17, 0xFF	; 255
    1470:	ce 01       	movw	r24, r28
    1472:	8c 52       	subi	r24, 0x2C	; 44
    1474:	9f 4f       	sbci	r25, 0xFF	; 255
    1476:	20 e0       	ldi	r18, 0x00	; 0
    1478:	30 e0       	ldi	r19, 0x00	; 0
    147a:	4a e7       	ldi	r20, 0x7A	; 122
    147c:	55 e4       	ldi	r21, 0x45	; 69
    147e:	fc 01       	movw	r30, r24
    1480:	60 81       	ld	r22, Z
    1482:	71 81       	ldd	r23, Z+1	; 0x01
    1484:	82 81       	ldd	r24, Z+2	; 0x02
    1486:	93 81       	ldd	r25, Z+3	; 0x03
    1488:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
    148c:	dc 01       	movw	r26, r24
    148e:	cb 01       	movw	r24, r22
    1490:	f8 01       	movw	r30, r16
    1492:	80 83       	st	Z, r24
    1494:	91 83       	std	Z+1, r25	; 0x01
    1496:	a2 83       	std	Z+2, r26	; 0x02
    1498:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    149a:	ce 01       	movw	r24, r28
    149c:	88 52       	subi	r24, 0x28	; 40
    149e:	9f 4f       	sbci	r25, 0xFF	; 255
    14a0:	20 e0       	ldi	r18, 0x00	; 0
    14a2:	30 e0       	ldi	r19, 0x00	; 0
    14a4:	40 e8       	ldi	r20, 0x80	; 128
    14a6:	5f e3       	ldi	r21, 0x3F	; 63
    14a8:	fc 01       	movw	r30, r24
    14aa:	60 81       	ld	r22, Z
    14ac:	71 81       	ldd	r23, Z+1	; 0x01
    14ae:	82 81       	ldd	r24, Z+2	; 0x02
    14b0:	93 81       	ldd	r25, Z+3	; 0x03
    14b2:	0e 94 85 10 	call	0x210a	; 0x210a <__cmpsf2>
    14b6:	88 23       	and	r24, r24
    14b8:	4c f4       	brge	.+18     	; 0x14cc <main+0x13aa>
		__ticks = 1;
    14ba:	ce 01       	movw	r24, r28
    14bc:	84 52       	subi	r24, 0x24	; 36
    14be:	9f 4f       	sbci	r25, 0xFF	; 255
    14c0:	21 e0       	ldi	r18, 0x01	; 1
    14c2:	30 e0       	ldi	r19, 0x00	; 0
    14c4:	fc 01       	movw	r30, r24
    14c6:	31 83       	std	Z+1, r19	; 0x01
    14c8:	20 83       	st	Z, r18
    14ca:	77 c0       	rjmp	.+238    	; 0x15ba <main+0x1498>
	else if (__tmp > 65535)
    14cc:	ce 01       	movw	r24, r28
    14ce:	88 52       	subi	r24, 0x28	; 40
    14d0:	9f 4f       	sbci	r25, 0xFF	; 255
    14d2:	20 e0       	ldi	r18, 0x00	; 0
    14d4:	3f ef       	ldi	r19, 0xFF	; 255
    14d6:	4f e7       	ldi	r20, 0x7F	; 127
    14d8:	57 e4       	ldi	r21, 0x47	; 71
    14da:	fc 01       	movw	r30, r24
    14dc:	60 81       	ld	r22, Z
    14de:	71 81       	ldd	r23, Z+1	; 0x01
    14e0:	82 81       	ldd	r24, Z+2	; 0x02
    14e2:	93 81       	ldd	r25, Z+3	; 0x03
    14e4:	0e 94 a0 11 	call	0x2340	; 0x2340 <__gesf2>
    14e8:	18 16       	cp	r1, r24
    14ea:	0c f0       	brlt	.+2      	; 0x14ee <main+0x13cc>
    14ec:	54 c0       	rjmp	.+168    	; 0x1596 <main+0x1474>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    14ee:	ce 01       	movw	r24, r28
    14f0:	8c 52       	subi	r24, 0x2C	; 44
    14f2:	9f 4f       	sbci	r25, 0xFF	; 255
    14f4:	20 e0       	ldi	r18, 0x00	; 0
    14f6:	30 e0       	ldi	r19, 0x00	; 0
    14f8:	40 e2       	ldi	r20, 0x20	; 32
    14fa:	51 e4       	ldi	r21, 0x41	; 65
    14fc:	fc 01       	movw	r30, r24
    14fe:	60 81       	ld	r22, Z
    1500:	71 81       	ldd	r23, Z+1	; 0x01
    1502:	82 81       	ldd	r24, Z+2	; 0x02
    1504:	93 81       	ldd	r25, Z+3	; 0x03
    1506:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
    150a:	dc 01       	movw	r26, r24
    150c:	cb 01       	movw	r24, r22
    150e:	8e 01       	movw	r16, r28
    1510:	04 52       	subi	r16, 0x24	; 36
    1512:	1f 4f       	sbci	r17, 0xFF	; 255
    1514:	bc 01       	movw	r22, r24
    1516:	cd 01       	movw	r24, r26
    1518:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
    151c:	dc 01       	movw	r26, r24
    151e:	cb 01       	movw	r24, r22
    1520:	f8 01       	movw	r30, r16
    1522:	91 83       	std	Z+1, r25	; 0x01
    1524:	80 83       	st	Z, r24
    1526:	24 c0       	rjmp	.+72     	; 0x1570 <main+0x144e>
    1528:	ce 01       	movw	r24, r28
    152a:	82 52       	subi	r24, 0x22	; 34
    152c:	9f 4f       	sbci	r25, 0xFF	; 255
    152e:	20 e9       	ldi	r18, 0x90	; 144
    1530:	31 e0       	ldi	r19, 0x01	; 1
    1532:	fc 01       	movw	r30, r24
    1534:	31 83       	std	Z+1, r19	; 0x01
    1536:	20 83       	st	Z, r18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1538:	ce 01       	movw	r24, r28
    153a:	82 52       	subi	r24, 0x22	; 34
    153c:	9f 4f       	sbci	r25, 0xFF	; 255
    153e:	fc 01       	movw	r30, r24
    1540:	80 81       	ld	r24, Z
    1542:	91 81       	ldd	r25, Z+1	; 0x01
    1544:	01 97       	sbiw	r24, 0x01	; 1
    1546:	f1 f7       	brne	.-4      	; 0x1544 <main+0x1422>
    1548:	9e 01       	movw	r18, r28
    154a:	22 52       	subi	r18, 0x22	; 34
    154c:	3f 4f       	sbci	r19, 0xFF	; 255
    154e:	f9 01       	movw	r30, r18
    1550:	91 83       	std	Z+1, r25	; 0x01
    1552:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1554:	ce 01       	movw	r24, r28
    1556:	84 52       	subi	r24, 0x24	; 36
    1558:	9f 4f       	sbci	r25, 0xFF	; 255
    155a:	9e 01       	movw	r18, r28
    155c:	24 52       	subi	r18, 0x24	; 36
    155e:	3f 4f       	sbci	r19, 0xFF	; 255
    1560:	f9 01       	movw	r30, r18
    1562:	20 81       	ld	r18, Z
    1564:	31 81       	ldd	r19, Z+1	; 0x01
    1566:	21 50       	subi	r18, 0x01	; 1
    1568:	31 09       	sbc	r19, r1
    156a:	fc 01       	movw	r30, r24
    156c:	31 83       	std	Z+1, r19	; 0x01
    156e:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1570:	ce 01       	movw	r24, r28
    1572:	84 52       	subi	r24, 0x24	; 36
    1574:	9f 4f       	sbci	r25, 0xFF	; 255
    1576:	fc 01       	movw	r30, r24
    1578:	80 81       	ld	r24, Z
    157a:	91 81       	ldd	r25, Z+1	; 0x01
    157c:	89 2b       	or	r24, r25
    157e:	a1 f6       	brne	.-88     	; 0x1528 <main+0x1406>
    1580:	ce 01       	movw	r24, r28
    1582:	8d 52       	subi	r24, 0x2D	; 45
    1584:	9f 4f       	sbci	r25, 0xFF	; 255
    1586:	9e 01       	movw	r18, r28
    1588:	29 51       	subi	r18, 0x19	; 25
    158a:	3f 4f       	sbci	r19, 0xFF	; 255
    158c:	f9 01       	movw	r30, r18
    158e:	20 81       	ld	r18, Z
    1590:	fc 01       	movw	r30, r24
    1592:	20 83       	st	Z, r18
    1594:	85 c0       	rjmp	.+266    	; 0x16a0 <main+0x157e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1596:	8e 01       	movw	r16, r28
    1598:	04 52       	subi	r16, 0x24	; 36
    159a:	1f 4f       	sbci	r17, 0xFF	; 255
    159c:	ce 01       	movw	r24, r28
    159e:	88 52       	subi	r24, 0x28	; 40
    15a0:	9f 4f       	sbci	r25, 0xFF	; 255
    15a2:	fc 01       	movw	r30, r24
    15a4:	60 81       	ld	r22, Z
    15a6:	71 81       	ldd	r23, Z+1	; 0x01
    15a8:	82 81       	ldd	r24, Z+2	; 0x02
    15aa:	93 81       	ldd	r25, Z+3	; 0x03
    15ac:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
    15b0:	dc 01       	movw	r26, r24
    15b2:	cb 01       	movw	r24, r22
    15b4:	f8 01       	movw	r30, r16
    15b6:	91 83       	std	Z+1, r25	; 0x01
    15b8:	80 83       	st	Z, r24
    15ba:	ce 01       	movw	r24, r28
    15bc:	80 52       	subi	r24, 0x20	; 32
    15be:	9f 4f       	sbci	r25, 0xFF	; 255
    15c0:	9e 01       	movw	r18, r28
    15c2:	24 52       	subi	r18, 0x24	; 36
    15c4:	3f 4f       	sbci	r19, 0xFF	; 255
    15c6:	f9 01       	movw	r30, r18
    15c8:	20 81       	ld	r18, Z
    15ca:	31 81       	ldd	r19, Z+1	; 0x01
    15cc:	fc 01       	movw	r30, r24
    15ce:	31 83       	std	Z+1, r19	; 0x01
    15d0:	20 83       	st	Z, r18
    15d2:	ce 01       	movw	r24, r28
    15d4:	80 52       	subi	r24, 0x20	; 32
    15d6:	9f 4f       	sbci	r25, 0xFF	; 255
    15d8:	fc 01       	movw	r30, r24
    15da:	80 81       	ld	r24, Z
    15dc:	91 81       	ldd	r25, Z+1	; 0x01
    15de:	01 97       	sbiw	r24, 0x01	; 1
    15e0:	f1 f7       	brne	.-4      	; 0x15de <main+0x14bc>
    15e2:	9e 01       	movw	r18, r28
    15e4:	20 52       	subi	r18, 0x20	; 32
    15e6:	3f 4f       	sbci	r19, 0xFF	; 255
    15e8:	f9 01       	movw	r30, r18
    15ea:	91 83       	std	Z+1, r25	; 0x01
    15ec:	80 83       	st	Z, r24
    15ee:	ce 01       	movw	r24, r28
    15f0:	8d 52       	subi	r24, 0x2D	; 45
    15f2:	9f 4f       	sbci	r25, 0xFF	; 255
    15f4:	9e 01       	movw	r18, r28
    15f6:	29 51       	subi	r18, 0x19	; 25
    15f8:	3f 4f       	sbci	r19, 0xFF	; 255
    15fa:	f9 01       	movw	r30, r18
    15fc:	20 81       	ld	r18, Z
    15fe:	fc 01       	movw	r30, r24
    1600:	20 83       	st	Z, r18
    1602:	4e c0       	rjmp	.+156    	; 0x16a0 <main+0x157e>
		__ticks = 1;
	else if (__tmp2 > 65535)
	{
		_delay_ms(__us / 1000.0);
	}
	else if (__tmp > 255)
    1604:	ce 01       	movw	r24, r28
    1606:	85 53       	subi	r24, 0x35	; 53
    1608:	9f 4f       	sbci	r25, 0xFF	; 255
    160a:	20 e0       	ldi	r18, 0x00	; 0
    160c:	30 e0       	ldi	r19, 0x00	; 0
    160e:	4f e7       	ldi	r20, 0x7F	; 127
    1610:	53 e4       	ldi	r21, 0x43	; 67
    1612:	fc 01       	movw	r30, r24
    1614:	60 81       	ld	r22, Z
    1616:	71 81       	ldd	r23, Z+1	; 0x01
    1618:	82 81       	ldd	r24, Z+2	; 0x02
    161a:	93 81       	ldd	r25, Z+3	; 0x03
    161c:	0e 94 a0 11 	call	0x2340	; 0x2340 <__gesf2>
    1620:	18 16       	cp	r1, r24
    1622:	6c f5       	brge	.+90     	; 0x167e <main+0x155c>
	{
		uint16_t __ticks=(uint16_t)__tmp2;
    1624:	8e 01       	movw	r16, r28
    1626:	0e 51       	subi	r16, 0x1E	; 30
    1628:	1f 4f       	sbci	r17, 0xFF	; 255
    162a:	ce 01       	movw	r24, r28
    162c:	81 53       	subi	r24, 0x31	; 49
    162e:	9f 4f       	sbci	r25, 0xFF	; 255
    1630:	fc 01       	movw	r30, r24
    1632:	60 81       	ld	r22, Z
    1634:	71 81       	ldd	r23, Z+1	; 0x01
    1636:	82 81       	ldd	r24, Z+2	; 0x02
    1638:	93 81       	ldd	r25, Z+3	; 0x03
    163a:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
    163e:	dc 01       	movw	r26, r24
    1640:	cb 01       	movw	r24, r22
    1642:	f8 01       	movw	r30, r16
    1644:	91 83       	std	Z+1, r25	; 0x01
    1646:	80 83       	st	Z, r24
    1648:	ce 01       	movw	r24, r28
    164a:	8c 51       	subi	r24, 0x1C	; 28
    164c:	9f 4f       	sbci	r25, 0xFF	; 255
    164e:	9e 01       	movw	r18, r28
    1650:	2e 51       	subi	r18, 0x1E	; 30
    1652:	3f 4f       	sbci	r19, 0xFF	; 255
    1654:	f9 01       	movw	r30, r18
    1656:	20 81       	ld	r18, Z
    1658:	31 81       	ldd	r19, Z+1	; 0x01
    165a:	fc 01       	movw	r30, r24
    165c:	31 83       	std	Z+1, r19	; 0x01
    165e:	20 83       	st	Z, r18
    1660:	ce 01       	movw	r24, r28
    1662:	8c 51       	subi	r24, 0x1C	; 28
    1664:	9f 4f       	sbci	r25, 0xFF	; 255
    1666:	fc 01       	movw	r30, r24
    1668:	80 81       	ld	r24, Z
    166a:	91 81       	ldd	r25, Z+1	; 0x01
    166c:	01 97       	sbiw	r24, 0x01	; 1
    166e:	f1 f7       	brne	.-4      	; 0x166c <main+0x154a>
    1670:	9e 01       	movw	r18, r28
    1672:	2c 51       	subi	r18, 0x1C	; 28
    1674:	3f 4f       	sbci	r19, 0xFF	; 255
    1676:	f9 01       	movw	r30, r18
    1678:	91 83       	std	Z+1, r25	; 0x01
    167a:	80 83       	st	Z, r24
    167c:	e2 c1       	rjmp	.+964    	; 0x1a42 <main+0x1920>
		_delay_loop_2(__ticks);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    167e:	8e 01       	movw	r16, r28
    1680:	0d 52       	subi	r16, 0x2D	; 45
    1682:	1f 4f       	sbci	r17, 0xFF	; 255
    1684:	ce 01       	movw	r24, r28
    1686:	85 53       	subi	r24, 0x35	; 53
    1688:	9f 4f       	sbci	r25, 0xFF	; 255
    168a:	fc 01       	movw	r30, r24
    168c:	60 81       	ld	r22, Z
    168e:	71 81       	ldd	r23, Z+1	; 0x01
    1690:	82 81       	ldd	r24, Z+2	; 0x02
    1692:	93 81       	ldd	r25, Z+3	; 0x03
    1694:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
    1698:	dc 01       	movw	r26, r24
    169a:	cb 01       	movw	r24, r22
    169c:	f8 01       	movw	r30, r16
    169e:	80 83       	st	Z, r24
    16a0:	ce 01       	movw	r24, r28
    16a2:	8a 51       	subi	r24, 0x1A	; 26
    16a4:	9f 4f       	sbci	r25, 0xFF	; 255
    16a6:	9e 01       	movw	r18, r28
    16a8:	2d 52       	subi	r18, 0x2D	; 45
    16aa:	3f 4f       	sbci	r19, 0xFF	; 255
    16ac:	f9 01       	movw	r30, r18
    16ae:	20 81       	ld	r18, Z
    16b0:	fc 01       	movw	r30, r24
    16b2:	20 83       	st	Z, r18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    16b4:	ce 01       	movw	r24, r28
    16b6:	8a 51       	subi	r24, 0x1A	; 26
    16b8:	9f 4f       	sbci	r25, 0xFF	; 255
    16ba:	fc 01       	movw	r30, r24
    16bc:	80 81       	ld	r24, Z
    16be:	28 2f       	mov	r18, r24
    16c0:	2a 95       	dec	r18
    16c2:	f1 f7       	brne	.-4      	; 0x16c0 <main+0x159e>
    16c4:	ce 01       	movw	r24, r28
    16c6:	8a 51       	subi	r24, 0x1A	; 26
    16c8:	9f 4f       	sbci	r25, 0xFF	; 255
    16ca:	fc 01       	movw	r30, r24
    16cc:	20 83       	st	Z, r18
    16ce:	b9 c1       	rjmp	.+882    	; 0x1a42 <main+0x1920>
		_delay_us(506);
		else if ((PINA & 0b00000001) == 0)
    16d0:	80 e2       	ldi	r24, 0x20	; 32
    16d2:	90 e0       	ldi	r25, 0x00	; 0
    16d4:	fc 01       	movw	r30, r24
    16d6:	80 81       	ld	r24, Z
    16d8:	88 2f       	mov	r24, r24
    16da:	90 e0       	ldi	r25, 0x00	; 0
    16dc:	81 70       	andi	r24, 0x01	; 1
    16de:	99 27       	eor	r25, r25
    16e0:	89 2b       	or	r24, r25
    16e2:	09 f0       	breq	.+2      	; 0x16e6 <main+0x15c4>
    16e4:	ae c1       	rjmp	.+860    	; 0x1a42 <main+0x1920>
    16e6:	9e 01       	movw	r18, r28
    16e8:	28 51       	subi	r18, 0x18	; 24
    16ea:	3f 4f       	sbci	r19, 0xFF	; 255
    16ec:	80 e0       	ldi	r24, 0x00	; 0
    16ee:	90 e0       	ldi	r25, 0x00	; 0
    16f0:	af ee       	ldi	r26, 0xEF	; 239
    16f2:	b3 e4       	ldi	r27, 0x43	; 67
    16f4:	f9 01       	movw	r30, r18
    16f6:	80 83       	st	Z, r24
    16f8:	91 83       	std	Z+1, r25	; 0x01
    16fa:	a2 83       	std	Z+2, r26	; 0x02
    16fc:	b3 83       	std	Z+3, r27	; 0x03
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ; 
	__tmp = ((F_CPU) / 3e6) * __us;
    16fe:	8e 01       	movw	r16, r28
    1700:	04 51       	subi	r16, 0x14	; 20
    1702:	1f 4f       	sbci	r17, 0xFF	; 255
    1704:	ce 01       	movw	r24, r28
    1706:	88 51       	subi	r24, 0x18	; 24
    1708:	9f 4f       	sbci	r25, 0xFF	; 255
    170a:	2b ea       	ldi	r18, 0xAB	; 171
    170c:	3a ea       	ldi	r19, 0xAA	; 170
    170e:	4a ea       	ldi	r20, 0xAA	; 170
    1710:	50 e4       	ldi	r21, 0x40	; 64
    1712:	fc 01       	movw	r30, r24
    1714:	60 81       	ld	r22, Z
    1716:	71 81       	ldd	r23, Z+1	; 0x01
    1718:	82 81       	ldd	r24, Z+2	; 0x02
    171a:	93 81       	ldd	r25, Z+3	; 0x03
    171c:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
    1720:	dc 01       	movw	r26, r24
    1722:	cb 01       	movw	r24, r22
    1724:	f8 01       	movw	r30, r16
    1726:	80 83       	st	Z, r24
    1728:	91 83       	std	Z+1, r25	; 0x01
    172a:	a2 83       	std	Z+2, r26	; 0x02
    172c:	b3 83       	std	Z+3, r27	; 0x03
	__tmp2 = ((F_CPU) / 4e6) * __us;
    172e:	8e 01       	movw	r16, r28
    1730:	00 51       	subi	r16, 0x10	; 16
    1732:	1f 4f       	sbci	r17, 0xFF	; 255
    1734:	ce 01       	movw	r24, r28
    1736:	88 51       	subi	r24, 0x18	; 24
    1738:	9f 4f       	sbci	r25, 0xFF	; 255
    173a:	20 e0       	ldi	r18, 0x00	; 0
    173c:	30 e0       	ldi	r19, 0x00	; 0
    173e:	40 e8       	ldi	r20, 0x80	; 128
    1740:	50 e4       	ldi	r21, 0x40	; 64
    1742:	fc 01       	movw	r30, r24
    1744:	60 81       	ld	r22, Z
    1746:	71 81       	ldd	r23, Z+1	; 0x01
    1748:	82 81       	ldd	r24, Z+2	; 0x02
    174a:	93 81       	ldd	r25, Z+3	; 0x03
    174c:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
    1750:	dc 01       	movw	r26, r24
    1752:	cb 01       	movw	r24, r22
    1754:	f8 01       	movw	r30, r16
    1756:	80 83       	st	Z, r24
    1758:	91 83       	std	Z+1, r25	; 0x01
    175a:	a2 83       	std	Z+2, r26	; 0x02
    175c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    175e:	ce 01       	movw	r24, r28
    1760:	84 51       	subi	r24, 0x14	; 20
    1762:	9f 4f       	sbci	r25, 0xFF	; 255
    1764:	20 e0       	ldi	r18, 0x00	; 0
    1766:	30 e0       	ldi	r19, 0x00	; 0
    1768:	40 e8       	ldi	r20, 0x80	; 128
    176a:	5f e3       	ldi	r21, 0x3F	; 63
    176c:	fc 01       	movw	r30, r24
    176e:	60 81       	ld	r22, Z
    1770:	71 81       	ldd	r23, Z+1	; 0x01
    1772:	82 81       	ldd	r24, Z+2	; 0x02
    1774:	93 81       	ldd	r25, Z+3	; 0x03
    1776:	0e 94 85 10 	call	0x210a	; 0x210a <__cmpsf2>
    177a:	88 23       	and	r24, r24
    177c:	3c f4       	brge	.+14     	; 0x178c <main+0x166a>
		__ticks = 1;
    177e:	ce 01       	movw	r24, r28
    1780:	8c 50       	subi	r24, 0x0C	; 12
    1782:	9f 4f       	sbci	r25, 0xFF	; 255
    1784:	21 e0       	ldi	r18, 0x01	; 1
    1786:	fc 01       	movw	r30, r24
    1788:	20 83       	st	Z, r18
    178a:	44 c1       	rjmp	.+648    	; 0x1a14 <main+0x18f2>
	else if (__tmp2 > 65535)
    178c:	ce 01       	movw	r24, r28
    178e:	80 51       	subi	r24, 0x10	; 16
    1790:	9f 4f       	sbci	r25, 0xFF	; 255
    1792:	20 e0       	ldi	r18, 0x00	; 0
    1794:	3f ef       	ldi	r19, 0xFF	; 255
    1796:	4f e7       	ldi	r20, 0x7F	; 127
    1798:	57 e4       	ldi	r21, 0x47	; 71
    179a:	fc 01       	movw	r30, r24
    179c:	60 81       	ld	r22, Z
    179e:	71 81       	ldd	r23, Z+1	; 0x01
    17a0:	82 81       	ldd	r24, Z+2	; 0x02
    17a2:	93 81       	ldd	r25, Z+3	; 0x03
    17a4:	0e 94 a0 11 	call	0x2340	; 0x2340 <__gesf2>
    17a8:	18 16       	cp	r1, r24
    17aa:	0c f0       	brlt	.+2      	; 0x17ae <main+0x168c>
    17ac:	e5 c0       	rjmp	.+458    	; 0x1978 <main+0x1856>
	{
		_delay_ms(__us / 1000.0);
    17ae:	ce 01       	movw	r24, r28
    17b0:	88 51       	subi	r24, 0x18	; 24
    17b2:	9f 4f       	sbci	r25, 0xFF	; 255
    17b4:	20 e0       	ldi	r18, 0x00	; 0
    17b6:	30 e0       	ldi	r19, 0x00	; 0
    17b8:	4a e7       	ldi	r20, 0x7A	; 122
    17ba:	54 e4       	ldi	r21, 0x44	; 68
    17bc:	fc 01       	movw	r30, r24
    17be:	60 81       	ld	r22, Z
    17c0:	71 81       	ldd	r23, Z+1	; 0x01
    17c2:	82 81       	ldd	r24, Z+2	; 0x02
    17c4:	93 81       	ldd	r25, Z+3	; 0x03
    17c6:	0e 94 8a 10 	call	0x2114	; 0x2114 <__divsf3>
    17ca:	dc 01       	movw	r26, r24
    17cc:	cb 01       	movw	r24, r22
    17ce:	9e 01       	movw	r18, r28
    17d0:	2b 50       	subi	r18, 0x0B	; 11
    17d2:	3f 4f       	sbci	r19, 0xFF	; 255
    17d4:	f9 01       	movw	r30, r18
    17d6:	80 83       	st	Z, r24
    17d8:	91 83       	std	Z+1, r25	; 0x01
    17da:	a2 83       	std	Z+2, r26	; 0x02
    17dc:	b3 83       	std	Z+3, r27	; 0x03

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
    17de:	8e 01       	movw	r16, r28
    17e0:	07 50       	subi	r16, 0x07	; 7
    17e2:	1f 4f       	sbci	r17, 0xFF	; 255
    17e4:	ce 01       	movw	r24, r28
    17e6:	8b 50       	subi	r24, 0x0B	; 11
    17e8:	9f 4f       	sbci	r25, 0xFF	; 255
    17ea:	20 e0       	ldi	r18, 0x00	; 0
    17ec:	30 e0       	ldi	r19, 0x00	; 0
    17ee:	4a e7       	ldi	r20, 0x7A	; 122
    17f0:	55 e4       	ldi	r21, 0x45	; 69
    17f2:	fc 01       	movw	r30, r24
    17f4:	60 81       	ld	r22, Z
    17f6:	71 81       	ldd	r23, Z+1	; 0x01
    17f8:	82 81       	ldd	r24, Z+2	; 0x02
    17fa:	93 81       	ldd	r25, Z+3	; 0x03
    17fc:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
    1800:	dc 01       	movw	r26, r24
    1802:	cb 01       	movw	r24, r22
    1804:	f8 01       	movw	r30, r16
    1806:	80 83       	st	Z, r24
    1808:	91 83       	std	Z+1, r25	; 0x01
    180a:	a2 83       	std	Z+2, r26	; 0x02
    180c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    180e:	ce 01       	movw	r24, r28
    1810:	87 50       	subi	r24, 0x07	; 7
    1812:	9f 4f       	sbci	r25, 0xFF	; 255
    1814:	20 e0       	ldi	r18, 0x00	; 0
    1816:	30 e0       	ldi	r19, 0x00	; 0
    1818:	40 e8       	ldi	r20, 0x80	; 128
    181a:	5f e3       	ldi	r21, 0x3F	; 63
    181c:	fc 01       	movw	r30, r24
    181e:	60 81       	ld	r22, Z
    1820:	71 81       	ldd	r23, Z+1	; 0x01
    1822:	82 81       	ldd	r24, Z+2	; 0x02
    1824:	93 81       	ldd	r25, Z+3	; 0x03
    1826:	0e 94 85 10 	call	0x210a	; 0x210a <__cmpsf2>
    182a:	88 23       	and	r24, r24
    182c:	4c f4       	brge	.+18     	; 0x1840 <main+0x171e>
		__ticks = 1;
    182e:	ce 01       	movw	r24, r28
    1830:	83 50       	subi	r24, 0x03	; 3
    1832:	9f 4f       	sbci	r25, 0xFF	; 255
    1834:	21 e0       	ldi	r18, 0x01	; 1
    1836:	30 e0       	ldi	r19, 0x00	; 0
    1838:	fc 01       	movw	r30, r24
    183a:	31 83       	std	Z+1, r19	; 0x01
    183c:	20 83       	st	Z, r18
    183e:	77 c0       	rjmp	.+238    	; 0x192e <main+0x180c>
	else if (__tmp > 65535)
    1840:	ce 01       	movw	r24, r28
    1842:	87 50       	subi	r24, 0x07	; 7
    1844:	9f 4f       	sbci	r25, 0xFF	; 255
    1846:	20 e0       	ldi	r18, 0x00	; 0
    1848:	3f ef       	ldi	r19, 0xFF	; 255
    184a:	4f e7       	ldi	r20, 0x7F	; 127
    184c:	57 e4       	ldi	r21, 0x47	; 71
    184e:	fc 01       	movw	r30, r24
    1850:	60 81       	ld	r22, Z
    1852:	71 81       	ldd	r23, Z+1	; 0x01
    1854:	82 81       	ldd	r24, Z+2	; 0x02
    1856:	93 81       	ldd	r25, Z+3	; 0x03
    1858:	0e 94 a0 11 	call	0x2340	; 0x2340 <__gesf2>
    185c:	18 16       	cp	r1, r24
    185e:	0c f0       	brlt	.+2      	; 0x1862 <main+0x1740>
    1860:	54 c0       	rjmp	.+168    	; 0x190a <main+0x17e8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1862:	ce 01       	movw	r24, r28
    1864:	8b 50       	subi	r24, 0x0B	; 11
    1866:	9f 4f       	sbci	r25, 0xFF	; 255
    1868:	20 e0       	ldi	r18, 0x00	; 0
    186a:	30 e0       	ldi	r19, 0x00	; 0
    186c:	40 e2       	ldi	r20, 0x20	; 32
    186e:	51 e4       	ldi	r21, 0x41	; 65
    1870:	fc 01       	movw	r30, r24
    1872:	60 81       	ld	r22, Z
    1874:	71 81       	ldd	r23, Z+1	; 0x01
    1876:	82 81       	ldd	r24, Z+2	; 0x02
    1878:	93 81       	ldd	r25, Z+3	; 0x03
    187a:	0e 94 a5 11 	call	0x234a	; 0x234a <__mulsf3>
    187e:	dc 01       	movw	r26, r24
    1880:	cb 01       	movw	r24, r22
    1882:	8e 01       	movw	r16, r28
    1884:	03 50       	subi	r16, 0x03	; 3
    1886:	1f 4f       	sbci	r17, 0xFF	; 255
    1888:	bc 01       	movw	r22, r24
    188a:	cd 01       	movw	r24, r26
    188c:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
    1890:	dc 01       	movw	r26, r24
    1892:	cb 01       	movw	r24, r22
    1894:	f8 01       	movw	r30, r16
    1896:	91 83       	std	Z+1, r25	; 0x01
    1898:	80 83       	st	Z, r24
    189a:	24 c0       	rjmp	.+72     	; 0x18e4 <main+0x17c2>
    189c:	ce 01       	movw	r24, r28
    189e:	81 50       	subi	r24, 0x01	; 1
    18a0:	9f 4f       	sbci	r25, 0xFF	; 255
    18a2:	20 e9       	ldi	r18, 0x90	; 144
    18a4:	31 e0       	ldi	r19, 0x01	; 1
    18a6:	fc 01       	movw	r30, r24
    18a8:	31 83       	std	Z+1, r19	; 0x01
    18aa:	20 83       	st	Z, r18
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    18ac:	ce 01       	movw	r24, r28
    18ae:	81 50       	subi	r24, 0x01	; 1
    18b0:	9f 4f       	sbci	r25, 0xFF	; 255
    18b2:	fc 01       	movw	r30, r24
    18b4:	80 81       	ld	r24, Z
    18b6:	91 81       	ldd	r25, Z+1	; 0x01
    18b8:	01 97       	sbiw	r24, 0x01	; 1
    18ba:	f1 f7       	brne	.-4      	; 0x18b8 <main+0x1796>
    18bc:	9e 01       	movw	r18, r28
    18be:	21 50       	subi	r18, 0x01	; 1
    18c0:	3f 4f       	sbci	r19, 0xFF	; 255
    18c2:	f9 01       	movw	r30, r18
    18c4:	91 83       	std	Z+1, r25	; 0x01
    18c6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18c8:	ce 01       	movw	r24, r28
    18ca:	83 50       	subi	r24, 0x03	; 3
    18cc:	9f 4f       	sbci	r25, 0xFF	; 255
    18ce:	9e 01       	movw	r18, r28
    18d0:	23 50       	subi	r18, 0x03	; 3
    18d2:	3f 4f       	sbci	r19, 0xFF	; 255
    18d4:	f9 01       	movw	r30, r18
    18d6:	20 81       	ld	r18, Z
    18d8:	31 81       	ldd	r19, Z+1	; 0x01
    18da:	21 50       	subi	r18, 0x01	; 1
    18dc:	31 09       	sbc	r19, r1
    18de:	fc 01       	movw	r30, r24
    18e0:	31 83       	std	Z+1, r19	; 0x01
    18e2:	20 83       	st	Z, r18
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18e4:	ce 01       	movw	r24, r28
    18e6:	83 50       	subi	r24, 0x03	; 3
    18e8:	9f 4f       	sbci	r25, 0xFF	; 255
    18ea:	fc 01       	movw	r30, r24
    18ec:	80 81       	ld	r24, Z
    18ee:	91 81       	ldd	r25, Z+1	; 0x01
    18f0:	89 2b       	or	r24, r25
    18f2:	a1 f6       	brne	.-88     	; 0x189c <main+0x177a>
    18f4:	ce 01       	movw	r24, r28
    18f6:	8c 50       	subi	r24, 0x0C	; 12
    18f8:	9f 4f       	sbci	r25, 0xFF	; 255
    18fa:	9e 01       	movw	r18, r28
    18fc:	28 5f       	subi	r18, 0xF8	; 248
    18fe:	3e 4f       	sbci	r19, 0xFE	; 254
    1900:	f9 01       	movw	r30, r18
    1902:	20 81       	ld	r18, Z
    1904:	fc 01       	movw	r30, r24
    1906:	20 83       	st	Z, r18
    1908:	85 c0       	rjmp	.+266    	; 0x1a14 <main+0x18f2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    190a:	8e 01       	movw	r16, r28
    190c:	03 50       	subi	r16, 0x03	; 3
    190e:	1f 4f       	sbci	r17, 0xFF	; 255
    1910:	ce 01       	movw	r24, r28
    1912:	87 50       	subi	r24, 0x07	; 7
    1914:	9f 4f       	sbci	r25, 0xFF	; 255
    1916:	fc 01       	movw	r30, r24
    1918:	60 81       	ld	r22, Z
    191a:	71 81       	ldd	r23, Z+1	; 0x01
    191c:	82 81       	ldd	r24, Z+2	; 0x02
    191e:	93 81       	ldd	r25, Z+3	; 0x03
    1920:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
    1924:	dc 01       	movw	r26, r24
    1926:	cb 01       	movw	r24, r22
    1928:	f8 01       	movw	r30, r16
    192a:	91 83       	std	Z+1, r25	; 0x01
    192c:	80 83       	st	Z, r24
    192e:	ce 01       	movw	r24, r28
    1930:	8f 5f       	subi	r24, 0xFF	; 255
    1932:	9e 4f       	sbci	r25, 0xFE	; 254
    1934:	9e 01       	movw	r18, r28
    1936:	23 50       	subi	r18, 0x03	; 3
    1938:	3f 4f       	sbci	r19, 0xFF	; 255
    193a:	f9 01       	movw	r30, r18
    193c:	20 81       	ld	r18, Z
    193e:	31 81       	ldd	r19, Z+1	; 0x01
    1940:	fc 01       	movw	r30, r24
    1942:	31 83       	std	Z+1, r19	; 0x01
    1944:	20 83       	st	Z, r18
    1946:	ce 01       	movw	r24, r28
    1948:	8f 5f       	subi	r24, 0xFF	; 255
    194a:	9e 4f       	sbci	r25, 0xFE	; 254
    194c:	fc 01       	movw	r30, r24
    194e:	80 81       	ld	r24, Z
    1950:	91 81       	ldd	r25, Z+1	; 0x01
    1952:	01 97       	sbiw	r24, 0x01	; 1
    1954:	f1 f7       	brne	.-4      	; 0x1952 <main+0x1830>
    1956:	9e 01       	movw	r18, r28
    1958:	2f 5f       	subi	r18, 0xFF	; 255
    195a:	3e 4f       	sbci	r19, 0xFE	; 254
    195c:	f9 01       	movw	r30, r18
    195e:	91 83       	std	Z+1, r25	; 0x01
    1960:	80 83       	st	Z, r24
    1962:	ce 01       	movw	r24, r28
    1964:	8c 50       	subi	r24, 0x0C	; 12
    1966:	9f 4f       	sbci	r25, 0xFF	; 255
    1968:	9e 01       	movw	r18, r28
    196a:	28 5f       	subi	r18, 0xF8	; 248
    196c:	3e 4f       	sbci	r19, 0xFE	; 254
    196e:	f9 01       	movw	r30, r18
    1970:	20 81       	ld	r18, Z
    1972:	fc 01       	movw	r30, r24
    1974:	20 83       	st	Z, r18
    1976:	4e c0       	rjmp	.+156    	; 0x1a14 <main+0x18f2>
		__ticks = 1;
	else if (__tmp2 > 65535)
	{
		_delay_ms(__us / 1000.0);
	}
	else if (__tmp > 255)
    1978:	ce 01       	movw	r24, r28
    197a:	84 51       	subi	r24, 0x14	; 20
    197c:	9f 4f       	sbci	r25, 0xFF	; 255
    197e:	20 e0       	ldi	r18, 0x00	; 0
    1980:	30 e0       	ldi	r19, 0x00	; 0
    1982:	4f e7       	ldi	r20, 0x7F	; 127
    1984:	53 e4       	ldi	r21, 0x43	; 67
    1986:	fc 01       	movw	r30, r24
    1988:	60 81       	ld	r22, Z
    198a:	71 81       	ldd	r23, Z+1	; 0x01
    198c:	82 81       	ldd	r24, Z+2	; 0x02
    198e:	93 81       	ldd	r25, Z+3	; 0x03
    1990:	0e 94 a0 11 	call	0x2340	; 0x2340 <__gesf2>
    1994:	18 16       	cp	r1, r24
    1996:	6c f5       	brge	.+90     	; 0x19f2 <main+0x18d0>
	{
		uint16_t __ticks=(uint16_t)__tmp2;
    1998:	8e 01       	movw	r16, r28
    199a:	0d 5f       	subi	r16, 0xFD	; 253
    199c:	1e 4f       	sbci	r17, 0xFE	; 254
    199e:	ce 01       	movw	r24, r28
    19a0:	80 51       	subi	r24, 0x10	; 16
    19a2:	9f 4f       	sbci	r25, 0xFF	; 255
    19a4:	fc 01       	movw	r30, r24
    19a6:	60 81       	ld	r22, Z
    19a8:	71 81       	ldd	r23, Z+1	; 0x01
    19aa:	82 81       	ldd	r24, Z+2	; 0x02
    19ac:	93 81       	ldd	r25, Z+3	; 0x03
    19ae:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
    19b2:	dc 01       	movw	r26, r24
    19b4:	cb 01       	movw	r24, r22
    19b6:	f8 01       	movw	r30, r16
    19b8:	91 83       	std	Z+1, r25	; 0x01
    19ba:	80 83       	st	Z, r24
    19bc:	ce 01       	movw	r24, r28
    19be:	8b 5f       	subi	r24, 0xFB	; 251
    19c0:	9e 4f       	sbci	r25, 0xFE	; 254
    19c2:	9e 01       	movw	r18, r28
    19c4:	2d 5f       	subi	r18, 0xFD	; 253
    19c6:	3e 4f       	sbci	r19, 0xFE	; 254
    19c8:	f9 01       	movw	r30, r18
    19ca:	20 81       	ld	r18, Z
    19cc:	31 81       	ldd	r19, Z+1	; 0x01
    19ce:	fc 01       	movw	r30, r24
    19d0:	31 83       	std	Z+1, r19	; 0x01
    19d2:	20 83       	st	Z, r18
    19d4:	ce 01       	movw	r24, r28
    19d6:	8b 5f       	subi	r24, 0xFB	; 251
    19d8:	9e 4f       	sbci	r25, 0xFE	; 254
    19da:	fc 01       	movw	r30, r24
    19dc:	80 81       	ld	r24, Z
    19de:	91 81       	ldd	r25, Z+1	; 0x01
    19e0:	01 97       	sbiw	r24, 0x01	; 1
    19e2:	f1 f7       	brne	.-4      	; 0x19e0 <main+0x18be>
    19e4:	9e 01       	movw	r18, r28
    19e6:	2b 5f       	subi	r18, 0xFB	; 251
    19e8:	3e 4f       	sbci	r19, 0xFE	; 254
    19ea:	f9 01       	movw	r30, r18
    19ec:	91 83       	std	Z+1, r25	; 0x01
    19ee:	80 83       	st	Z, r24
    19f0:	28 c0       	rjmp	.+80     	; 0x1a42 <main+0x1920>
		_delay_loop_2(__ticks);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    19f2:	8e 01       	movw	r16, r28
    19f4:	0c 50       	subi	r16, 0x0C	; 12
    19f6:	1f 4f       	sbci	r17, 0xFF	; 255
    19f8:	ce 01       	movw	r24, r28
    19fa:	84 51       	subi	r24, 0x14	; 20
    19fc:	9f 4f       	sbci	r25, 0xFF	; 255
    19fe:	fc 01       	movw	r30, r24
    1a00:	60 81       	ld	r22, Z
    1a02:	71 81       	ldd	r23, Z+1	; 0x01
    1a04:	82 81       	ldd	r24, Z+2	; 0x02
    1a06:	93 81       	ldd	r25, Z+3	; 0x03
    1a08:	0e 94 fc 10 	call	0x21f8	; 0x21f8 <__fixunssfsi>
    1a0c:	dc 01       	movw	r26, r24
    1a0e:	cb 01       	movw	r24, r22
    1a10:	f8 01       	movw	r30, r16
    1a12:	80 83       	st	Z, r24
    1a14:	ce 01       	movw	r24, r28
    1a16:	89 5f       	subi	r24, 0xF9	; 249
    1a18:	9e 4f       	sbci	r25, 0xFE	; 254
    1a1a:	9e 01       	movw	r18, r28
    1a1c:	2c 50       	subi	r18, 0x0C	; 12
    1a1e:	3f 4f       	sbci	r19, 0xFF	; 255
    1a20:	f9 01       	movw	r30, r18
    1a22:	20 81       	ld	r18, Z
    1a24:	fc 01       	movw	r30, r24
    1a26:	20 83       	st	Z, r18
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    1a28:	ce 01       	movw	r24, r28
    1a2a:	89 5f       	subi	r24, 0xF9	; 249
    1a2c:	9e 4f       	sbci	r25, 0xFE	; 254
    1a2e:	fc 01       	movw	r30, r24
    1a30:	80 81       	ld	r24, Z
    1a32:	28 2f       	mov	r18, r24
    1a34:	2a 95       	dec	r18
    1a36:	f1 f7       	brne	.-4      	; 0x1a34 <main+0x1912>
    1a38:	ce 01       	movw	r24, r28
    1a3a:	89 5f       	subi	r24, 0xF9	; 249
    1a3c:	9e 4f       	sbci	r25, 0xFE	; 254
    1a3e:	fc 01       	movw	r30, r24
    1a40:	20 83       	st	Z, r18
		_delay_us(478);
		
		if (PINA != 0xFF)
    1a42:	80 e2       	ldi	r24, 0x20	; 32
    1a44:	90 e0       	ldi	r25, 0x00	; 0
    1a46:	fc 01       	movw	r30, r24
    1a48:	80 81       	ld	r24, Z
    1a4a:	8f 3f       	cpi	r24, 0xFF	; 255
    1a4c:	49 f0       	breq	.+18     	; 0x1a60 <main+0x193e>
	 	PORTB = ~PINB;
    1a4e:	85 e2       	ldi	r24, 0x25	; 37
    1a50:	90 e0       	ldi	r25, 0x00	; 0
    1a52:	23 e2       	ldi	r18, 0x23	; 35
    1a54:	30 e0       	ldi	r19, 0x00	; 0
    1a56:	f9 01       	movw	r30, r18
    1a58:	20 81       	ld	r18, Z
    1a5a:	20 95       	com	r18
    1a5c:	fc 01       	movw	r30, r24
    1a5e:	20 83       	st	Z, r18
	}
    1a60:	0c 94 a7 00 	jmp	0x14e	; 0x14e <main+0x2c>

00001a64 <vfprintf>:
    1a64:	6f 92       	push	r6
    1a66:	7f 92       	push	r7
    1a68:	8f 92       	push	r8
    1a6a:	9f 92       	push	r9
    1a6c:	af 92       	push	r10
    1a6e:	bf 92       	push	r11
    1a70:	cf 92       	push	r12
    1a72:	df 92       	push	r13
    1a74:	ef 92       	push	r14
    1a76:	ff 92       	push	r15
    1a78:	0f 93       	push	r16
    1a7a:	1f 93       	push	r17
    1a7c:	cf 93       	push	r28
    1a7e:	df 93       	push	r29
    1a80:	cd b7       	in	r28, 0x3d	; 61
    1a82:	de b7       	in	r29, 0x3e	; 62
    1a84:	2c 97       	sbiw	r28, 0x0c	; 12
    1a86:	0f b6       	in	r0, 0x3f	; 63
    1a88:	f8 94       	cli
    1a8a:	de bf       	out	0x3e, r29	; 62
    1a8c:	0f be       	out	0x3f, r0	; 63
    1a8e:	cd bf       	out	0x3d, r28	; 61
    1a90:	6c 01       	movw	r12, r24
    1a92:	5b 01       	movw	r10, r22
    1a94:	7a 01       	movw	r14, r20
    1a96:	fc 01       	movw	r30, r24
    1a98:	17 82       	std	Z+7, r1	; 0x07
    1a9a:	16 82       	std	Z+6, r1	; 0x06
    1a9c:	83 81       	ldd	r24, Z+3	; 0x03
    1a9e:	81 ff       	sbrs	r24, 1
    1aa0:	0e c1       	rjmp	.+540    	; 0x1cbe <vfprintf+0x25a>
    1aa2:	ce 01       	movw	r24, r28
    1aa4:	01 96       	adiw	r24, 0x01	; 1
    1aa6:	4c 01       	movw	r8, r24
    1aa8:	f6 01       	movw	r30, r12
    1aaa:	03 81       	ldd	r16, Z+3	; 0x03
    1aac:	f5 01       	movw	r30, r10
    1aae:	03 fd       	sbrc	r16, 3
    1ab0:	15 91       	lpm	r17, Z+
    1ab2:	03 ff       	sbrs	r16, 3
    1ab4:	11 91       	ld	r17, Z+
    1ab6:	5f 01       	movw	r10, r30
    1ab8:	11 23       	and	r17, r17
    1aba:	09 f4       	brne	.+2      	; 0x1abe <vfprintf+0x5a>
    1abc:	fc c0       	rjmp	.+504    	; 0x1cb6 <vfprintf+0x252>
    1abe:	15 32       	cpi	r17, 0x25	; 37
    1ac0:	49 f4       	brne	.+18     	; 0x1ad4 <vfprintf+0x70>
    1ac2:	03 fd       	sbrc	r16, 3
    1ac4:	15 91       	lpm	r17, Z+
    1ac6:	03 ff       	sbrs	r16, 3
    1ac8:	11 91       	ld	r17, Z+
    1aca:	5f 01       	movw	r10, r30
    1acc:	15 32       	cpi	r17, 0x25	; 37
    1ace:	11 f0       	breq	.+4      	; 0x1ad4 <vfprintf+0x70>
    1ad0:	20 e0       	ldi	r18, 0x00	; 0
    1ad2:	1b c0       	rjmp	.+54     	; 0x1b0a <vfprintf+0xa6>
    1ad4:	b6 01       	movw	r22, r12
    1ad6:	81 2f       	mov	r24, r17
    1ad8:	90 e0       	ldi	r25, 0x00	; 0
    1ada:	0e 94 64 12 	call	0x24c8	; 0x24c8 <fputc>
    1ade:	37 01       	movw	r6, r14
    1ae0:	73 01       	movw	r14, r6
    1ae2:	e2 cf       	rjmp	.-60     	; 0x1aa8 <vfprintf+0x44>
    1ae4:	11 23       	and	r17, r17
    1ae6:	09 f4       	brne	.+2      	; 0x1aea <vfprintf+0x86>
    1ae8:	e6 c0       	rjmp	.+460    	; 0x1cb6 <vfprintf+0x252>
    1aea:	61 2f       	mov	r22, r17
    1aec:	70 e0       	ldi	r23, 0x00	; 0
    1aee:	8b ee       	ldi	r24, 0xEB	; 235
    1af0:	90 e0       	ldi	r25, 0x00	; 0
    1af2:	2c 87       	std	Y+12, r18	; 0x0c
    1af4:	0e 94 1b 12 	call	0x2436	; 0x2436 <strchr_P>
    1af8:	2c 85       	ldd	r18, Y+12	; 0x0c
    1afa:	89 2b       	or	r24, r25
    1afc:	49 f0       	breq	.+18     	; 0x1b10 <vfprintf+0xac>
    1afe:	f5 01       	movw	r30, r10
    1b00:	03 fd       	sbrc	r16, 3
    1b02:	15 91       	lpm	r17, Z+
    1b04:	03 ff       	sbrs	r16, 3
    1b06:	11 91       	ld	r17, Z+
    1b08:	5f 01       	movw	r10, r30
    1b0a:	27 ff       	sbrs	r18, 7
    1b0c:	eb cf       	rjmp	.-42     	; 0x1ae4 <vfprintf+0x80>
    1b0e:	09 c0       	rjmp	.+18     	; 0x1b22 <vfprintf+0xbe>
    1b10:	13 32       	cpi	r17, 0x23	; 35
    1b12:	29 f0       	breq	.+10     	; 0x1b1e <vfprintf+0xba>
    1b14:	1c 36       	cpi	r17, 0x6C	; 108
    1b16:	09 f0       	breq	.+2      	; 0x1b1a <vfprintf+0xb6>
    1b18:	d5 c0       	rjmp	.+426    	; 0x1cc4 <vfprintf+0x260>
    1b1a:	20 68       	ori	r18, 0x80	; 128
    1b1c:	f0 cf       	rjmp	.-32     	; 0x1afe <vfprintf+0x9a>
    1b1e:	20 e1       	ldi	r18, 0x10	; 16
    1b20:	ee cf       	rjmp	.-36     	; 0x1afe <vfprintf+0x9a>
    1b22:	02 2f       	mov	r16, r18
    1b24:	11 23       	and	r17, r17
    1b26:	09 f4       	brne	.+2      	; 0x1b2a <vfprintf+0xc6>
    1b28:	c6 c0       	rjmp	.+396    	; 0x1cb6 <vfprintf+0x252>
    1b2a:	61 2f       	mov	r22, r17
    1b2c:	70 e0       	ldi	r23, 0x00	; 0
    1b2e:	84 ee       	ldi	r24, 0xE4	; 228
    1b30:	90 e0       	ldi	r25, 0x00	; 0
    1b32:	2c 87       	std	Y+12, r18	; 0x0c
    1b34:	0e 94 1b 12 	call	0x2436	; 0x2436 <strchr_P>
    1b38:	2c 85       	ldd	r18, Y+12	; 0x0c
    1b3a:	89 2b       	or	r24, r25
    1b3c:	41 f0       	breq	.+16     	; 0x1b4e <vfprintf+0xea>
    1b3e:	37 01       	movw	r6, r14
    1b40:	f4 e0       	ldi	r31, 0x04	; 4
    1b42:	6f 0e       	add	r6, r31
    1b44:	71 1c       	adc	r7, r1
    1b46:	b6 01       	movw	r22, r12
    1b48:	8f e3       	ldi	r24, 0x3F	; 63
    1b4a:	90 e0       	ldi	r25, 0x00	; 0
    1b4c:	11 c0       	rjmp	.+34     	; 0x1b70 <vfprintf+0x10c>
    1b4e:	13 36       	cpi	r17, 0x63	; 99
    1b50:	39 f0       	breq	.+14     	; 0x1b60 <vfprintf+0xfc>
    1b52:	13 37       	cpi	r17, 0x73	; 115
    1b54:	81 f0       	breq	.+32     	; 0x1b76 <vfprintf+0x112>
    1b56:	13 35       	cpi	r17, 0x53	; 83
    1b58:	19 f5       	brne	.+70     	; 0x1ba0 <vfprintf+0x13c>
    1b5a:	02 2f       	mov	r16, r18
    1b5c:	01 60       	ori	r16, 0x01	; 1
    1b5e:	0b c0       	rjmp	.+22     	; 0x1b76 <vfprintf+0x112>
    1b60:	37 01       	movw	r6, r14
    1b62:	82 e0       	ldi	r24, 0x02	; 2
    1b64:	68 0e       	add	r6, r24
    1b66:	71 1c       	adc	r7, r1
    1b68:	b6 01       	movw	r22, r12
    1b6a:	f7 01       	movw	r30, r14
    1b6c:	80 81       	ld	r24, Z
    1b6e:	91 81       	ldd	r25, Z+1	; 0x01
    1b70:	0e 94 64 12 	call	0x24c8	; 0x24c8 <fputc>
    1b74:	b5 cf       	rjmp	.-150    	; 0x1ae0 <vfprintf+0x7c>
    1b76:	37 01       	movw	r6, r14
    1b78:	f2 e0       	ldi	r31, 0x02	; 2
    1b7a:	6f 0e       	add	r6, r31
    1b7c:	71 1c       	adc	r7, r1
    1b7e:	f7 01       	movw	r30, r14
    1b80:	e0 80       	ld	r14, Z
    1b82:	f1 80       	ldd	r15, Z+1	; 0x01
    1b84:	f7 01       	movw	r30, r14
    1b86:	00 fd       	sbrc	r16, 0
    1b88:	85 91       	lpm	r24, Z+
    1b8a:	00 ff       	sbrs	r16, 0
    1b8c:	81 91       	ld	r24, Z+
    1b8e:	7f 01       	movw	r14, r30
    1b90:	88 23       	and	r24, r24
    1b92:	09 f4       	brne	.+2      	; 0x1b96 <vfprintf+0x132>
    1b94:	a5 cf       	rjmp	.-182    	; 0x1ae0 <vfprintf+0x7c>
    1b96:	b6 01       	movw	r22, r12
    1b98:	90 e0       	ldi	r25, 0x00	; 0
    1b9a:	0e 94 64 12 	call	0x24c8	; 0x24c8 <fputc>
    1b9e:	f2 cf       	rjmp	.-28     	; 0x1b84 <vfprintf+0x120>
    1ba0:	14 36       	cpi	r17, 0x64	; 100
    1ba2:	11 f0       	breq	.+4      	; 0x1ba8 <vfprintf+0x144>
    1ba4:	19 36       	cpi	r17, 0x69	; 105
    1ba6:	29 f5       	brne	.+74     	; 0x1bf2 <vfprintf+0x18e>
    1ba8:	37 01       	movw	r6, r14
    1baa:	27 ff       	sbrs	r18, 7
    1bac:	09 c0       	rjmp	.+18     	; 0x1bc0 <vfprintf+0x15c>
    1bae:	f4 e0       	ldi	r31, 0x04	; 4
    1bb0:	6f 0e       	add	r6, r31
    1bb2:	71 1c       	adc	r7, r1
    1bb4:	f7 01       	movw	r30, r14
    1bb6:	60 81       	ld	r22, Z
    1bb8:	71 81       	ldd	r23, Z+1	; 0x01
    1bba:	82 81       	ldd	r24, Z+2	; 0x02
    1bbc:	93 81       	ldd	r25, Z+3	; 0x03
    1bbe:	0a c0       	rjmp	.+20     	; 0x1bd4 <vfprintf+0x170>
    1bc0:	f2 e0       	ldi	r31, 0x02	; 2
    1bc2:	6f 0e       	add	r6, r31
    1bc4:	71 1c       	adc	r7, r1
    1bc6:	f7 01       	movw	r30, r14
    1bc8:	60 81       	ld	r22, Z
    1bca:	71 81       	ldd	r23, Z+1	; 0x01
    1bcc:	07 2e       	mov	r0, r23
    1bce:	00 0c       	add	r0, r0
    1bd0:	88 0b       	sbc	r24, r24
    1bd2:	99 0b       	sbc	r25, r25
    1bd4:	02 2f       	mov	r16, r18
    1bd6:	0f 7e       	andi	r16, 0xEF	; 239
    1bd8:	97 ff       	sbrs	r25, 7
    1bda:	08 c0       	rjmp	.+16     	; 0x1bec <vfprintf+0x188>
    1bdc:	90 95       	com	r25
    1bde:	80 95       	com	r24
    1be0:	70 95       	com	r23
    1be2:	61 95       	neg	r22
    1be4:	7f 4f       	sbci	r23, 0xFF	; 255
    1be6:	8f 4f       	sbci	r24, 0xFF	; 255
    1be8:	9f 4f       	sbci	r25, 0xFF	; 255
    1bea:	00 64       	ori	r16, 0x40	; 64
    1bec:	2a e0       	ldi	r18, 0x0A	; 10
    1bee:	30 e0       	ldi	r19, 0x00	; 0
    1bf0:	33 c0       	rjmp	.+102    	; 0x1c58 <vfprintf+0x1f4>
    1bf2:	10 37       	cpi	r17, 0x70	; 112
    1bf4:	99 f0       	breq	.+38     	; 0x1c1c <vfprintf+0x1b8>
    1bf6:	40 f4       	brcc	.+16     	; 0x1c08 <vfprintf+0x1a4>
    1bf8:	18 35       	cpi	r17, 0x58	; 88
    1bfa:	b1 f0       	breq	.+44     	; 0x1c28 <vfprintf+0x1c4>
    1bfc:	1f 36       	cpi	r17, 0x6F	; 111
    1bfe:	09 f0       	breq	.+2      	; 0x1c02 <vfprintf+0x19e>
    1c00:	5a c0       	rjmp	.+180    	; 0x1cb6 <vfprintf+0x252>
    1c02:	28 e0       	ldi	r18, 0x08	; 8
    1c04:	30 e0       	ldi	r19, 0x00	; 0
    1c06:	14 c0       	rjmp	.+40     	; 0x1c30 <vfprintf+0x1cc>
    1c08:	15 37       	cpi	r17, 0x75	; 117
    1c0a:	19 f0       	breq	.+6      	; 0x1c12 <vfprintf+0x1ae>
    1c0c:	18 37       	cpi	r17, 0x78	; 120
    1c0e:	41 f0       	breq	.+16     	; 0x1c20 <vfprintf+0x1bc>
    1c10:	52 c0       	rjmp	.+164    	; 0x1cb6 <vfprintf+0x252>
    1c12:	02 2f       	mov	r16, r18
    1c14:	0f 7e       	andi	r16, 0xEF	; 239
    1c16:	2a e0       	ldi	r18, 0x0A	; 10
    1c18:	30 e0       	ldi	r19, 0x00	; 0
    1c1a:	0a c0       	rjmp	.+20     	; 0x1c30 <vfprintf+0x1cc>
    1c1c:	02 2f       	mov	r16, r18
    1c1e:	00 61       	ori	r16, 0x10	; 16
    1c20:	04 62       	ori	r16, 0x24	; 36
    1c22:	20 e1       	ldi	r18, 0x10	; 16
    1c24:	30 e0       	ldi	r19, 0x00	; 0
    1c26:	04 c0       	rjmp	.+8      	; 0x1c30 <vfprintf+0x1cc>
    1c28:	02 2f       	mov	r16, r18
    1c2a:	04 60       	ori	r16, 0x04	; 4
    1c2c:	20 e1       	ldi	r18, 0x10	; 16
    1c2e:	32 e0       	ldi	r19, 0x02	; 2
    1c30:	37 01       	movw	r6, r14
    1c32:	07 ff       	sbrs	r16, 7
    1c34:	09 c0       	rjmp	.+18     	; 0x1c48 <vfprintf+0x1e4>
    1c36:	f4 e0       	ldi	r31, 0x04	; 4
    1c38:	6f 0e       	add	r6, r31
    1c3a:	71 1c       	adc	r7, r1
    1c3c:	f7 01       	movw	r30, r14
    1c3e:	60 81       	ld	r22, Z
    1c40:	71 81       	ldd	r23, Z+1	; 0x01
    1c42:	82 81       	ldd	r24, Z+2	; 0x02
    1c44:	93 81       	ldd	r25, Z+3	; 0x03
    1c46:	08 c0       	rjmp	.+16     	; 0x1c58 <vfprintf+0x1f4>
    1c48:	f2 e0       	ldi	r31, 0x02	; 2
    1c4a:	6f 0e       	add	r6, r31
    1c4c:	71 1c       	adc	r7, r1
    1c4e:	f7 01       	movw	r30, r14
    1c50:	60 81       	ld	r22, Z
    1c52:	71 81       	ldd	r23, Z+1	; 0x01
    1c54:	80 e0       	ldi	r24, 0x00	; 0
    1c56:	90 e0       	ldi	r25, 0x00	; 0
    1c58:	a4 01       	movw	r20, r8
    1c5a:	0e 94 b5 12 	call	0x256a	; 0x256a <__ultoa_invert>
    1c5e:	18 2f       	mov	r17, r24
    1c60:	18 19       	sub	r17, r8
    1c62:	06 ff       	sbrs	r16, 6
    1c64:	05 c0       	rjmp	.+10     	; 0x1c70 <vfprintf+0x20c>
    1c66:	b6 01       	movw	r22, r12
    1c68:	8d e2       	ldi	r24, 0x2D	; 45
    1c6a:	90 e0       	ldi	r25, 0x00	; 0
    1c6c:	0e 94 64 12 	call	0x24c8	; 0x24c8 <fputc>
    1c70:	04 ff       	sbrs	r16, 4
    1c72:	15 c0       	rjmp	.+42     	; 0x1c9e <vfprintf+0x23a>
    1c74:	fe 01       	movw	r30, r28
    1c76:	e1 0f       	add	r30, r17
    1c78:	f1 1d       	adc	r31, r1
    1c7a:	80 81       	ld	r24, Z
    1c7c:	80 33       	cpi	r24, 0x30	; 48
    1c7e:	79 f0       	breq	.+30     	; 0x1c9e <vfprintf+0x23a>
    1c80:	b6 01       	movw	r22, r12
    1c82:	80 e3       	ldi	r24, 0x30	; 48
    1c84:	90 e0       	ldi	r25, 0x00	; 0
    1c86:	0e 94 64 12 	call	0x24c8	; 0x24c8 <fputc>
    1c8a:	02 ff       	sbrs	r16, 2
    1c8c:	08 c0       	rjmp	.+16     	; 0x1c9e <vfprintf+0x23a>
    1c8e:	00 72       	andi	r16, 0x20	; 32
    1c90:	80 2f       	mov	r24, r16
    1c92:	90 e0       	ldi	r25, 0x00	; 0
    1c94:	b6 01       	movw	r22, r12
    1c96:	88 5a       	subi	r24, 0xA8	; 168
    1c98:	9f 4f       	sbci	r25, 0xFF	; 255
    1c9a:	0e 94 64 12 	call	0x24c8	; 0x24c8 <fputc>
    1c9e:	11 50       	subi	r17, 0x01	; 1
    1ca0:	f4 01       	movw	r30, r8
    1ca2:	e1 0f       	add	r30, r17
    1ca4:	f1 1d       	adc	r31, r1
    1ca6:	80 81       	ld	r24, Z
    1ca8:	b6 01       	movw	r22, r12
    1caa:	90 e0       	ldi	r25, 0x00	; 0
    1cac:	0e 94 64 12 	call	0x24c8	; 0x24c8 <fputc>
    1cb0:	11 11       	cpse	r17, r1
    1cb2:	f5 cf       	rjmp	.-22     	; 0x1c9e <vfprintf+0x23a>
    1cb4:	15 cf       	rjmp	.-470    	; 0x1ae0 <vfprintf+0x7c>
    1cb6:	f6 01       	movw	r30, r12
    1cb8:	86 81       	ldd	r24, Z+6	; 0x06
    1cba:	97 81       	ldd	r25, Z+7	; 0x07
    1cbc:	05 c0       	rjmp	.+10     	; 0x1cc8 <vfprintf+0x264>
    1cbe:	8f ef       	ldi	r24, 0xFF	; 255
    1cc0:	9f ef       	ldi	r25, 0xFF	; 255
    1cc2:	02 c0       	rjmp	.+4      	; 0x1cc8 <vfprintf+0x264>
    1cc4:	02 2f       	mov	r16, r18
    1cc6:	31 cf       	rjmp	.-414    	; 0x1b2a <vfprintf+0xc6>
    1cc8:	2c 96       	adiw	r28, 0x0c	; 12
    1cca:	0f b6       	in	r0, 0x3f	; 63
    1ccc:	f8 94       	cli
    1cce:	de bf       	out	0x3e, r29	; 62
    1cd0:	0f be       	out	0x3f, r0	; 63
    1cd2:	cd bf       	out	0x3d, r28	; 61
    1cd4:	df 91       	pop	r29
    1cd6:	cf 91       	pop	r28
    1cd8:	1f 91       	pop	r17
    1cda:	0f 91       	pop	r16
    1cdc:	ff 90       	pop	r15
    1cde:	ef 90       	pop	r14
    1ce0:	df 90       	pop	r13
    1ce2:	cf 90       	pop	r12
    1ce4:	bf 90       	pop	r11
    1ce6:	af 90       	pop	r10
    1ce8:	9f 90       	pop	r9
    1cea:	8f 90       	pop	r8
    1cec:	7f 90       	pop	r7
    1cee:	6f 90       	pop	r6
    1cf0:	08 95       	ret

00001cf2 <putval>:
    1cf2:	20 fd       	sbrc	r18, 0
    1cf4:	09 c0       	rjmp	.+18     	; 0x1d08 <putval+0x16>
    1cf6:	fc 01       	movw	r30, r24
    1cf8:	23 fd       	sbrc	r18, 3
    1cfa:	05 c0       	rjmp	.+10     	; 0x1d06 <putval+0x14>
    1cfc:	22 ff       	sbrs	r18, 2
    1cfe:	02 c0       	rjmp	.+4      	; 0x1d04 <putval+0x12>
    1d00:	73 83       	std	Z+3, r23	; 0x03
    1d02:	62 83       	std	Z+2, r22	; 0x02
    1d04:	51 83       	std	Z+1, r21	; 0x01
    1d06:	40 83       	st	Z, r20
    1d08:	08 95       	ret

00001d0a <mulacc>:
    1d0a:	44 fd       	sbrc	r20, 4
    1d0c:	10 c0       	rjmp	.+32     	; 0x1d2e <mulacc+0x24>
    1d0e:	46 fd       	sbrc	r20, 6
    1d10:	10 c0       	rjmp	.+32     	; 0x1d32 <mulacc+0x28>
    1d12:	db 01       	movw	r26, r22
    1d14:	fc 01       	movw	r30, r24
    1d16:	aa 0f       	add	r26, r26
    1d18:	bb 1f       	adc	r27, r27
    1d1a:	ee 1f       	adc	r30, r30
    1d1c:	ff 1f       	adc	r31, r31
    1d1e:	10 94       	com	r1
    1d20:	d1 f7       	brne	.-12     	; 0x1d16 <mulacc+0xc>
    1d22:	6a 0f       	add	r22, r26
    1d24:	7b 1f       	adc	r23, r27
    1d26:	8e 1f       	adc	r24, r30
    1d28:	9f 1f       	adc	r25, r31
    1d2a:	31 e0       	ldi	r19, 0x01	; 1
    1d2c:	03 c0       	rjmp	.+6      	; 0x1d34 <mulacc+0x2a>
    1d2e:	33 e0       	ldi	r19, 0x03	; 3
    1d30:	01 c0       	rjmp	.+2      	; 0x1d34 <mulacc+0x2a>
    1d32:	34 e0       	ldi	r19, 0x04	; 4
    1d34:	66 0f       	add	r22, r22
    1d36:	77 1f       	adc	r23, r23
    1d38:	88 1f       	adc	r24, r24
    1d3a:	99 1f       	adc	r25, r25
    1d3c:	31 50       	subi	r19, 0x01	; 1
    1d3e:	d1 f7       	brne	.-12     	; 0x1d34 <mulacc+0x2a>
    1d40:	62 0f       	add	r22, r18
    1d42:	71 1d       	adc	r23, r1
    1d44:	81 1d       	adc	r24, r1
    1d46:	91 1d       	adc	r25, r1
    1d48:	08 95       	ret

00001d4a <skip_spaces>:
    1d4a:	0f 93       	push	r16
    1d4c:	1f 93       	push	r17
    1d4e:	cf 93       	push	r28
    1d50:	df 93       	push	r29
    1d52:	8c 01       	movw	r16, r24
    1d54:	c8 01       	movw	r24, r16
    1d56:	0e 94 26 12 	call	0x244c	; 0x244c <fgetc>
    1d5a:	ec 01       	movw	r28, r24
    1d5c:	97 fd       	sbrc	r25, 7
    1d5e:	08 c0       	rjmp	.+16     	; 0x1d70 <skip_spaces+0x26>
    1d60:	0e 94 12 12 	call	0x2424	; 0x2424 <isspace>
    1d64:	89 2b       	or	r24, r25
    1d66:	b1 f7       	brne	.-20     	; 0x1d54 <skip_spaces+0xa>
    1d68:	b8 01       	movw	r22, r16
    1d6a:	ce 01       	movw	r24, r28
    1d6c:	0e 94 9c 12 	call	0x2538	; 0x2538 <ungetc>
    1d70:	ce 01       	movw	r24, r28
    1d72:	df 91       	pop	r29
    1d74:	cf 91       	pop	r28
    1d76:	1f 91       	pop	r17
    1d78:	0f 91       	pop	r16
    1d7a:	08 95       	ret

00001d7c <conv_int>:
    1d7c:	8f 92       	push	r8
    1d7e:	9f 92       	push	r9
    1d80:	af 92       	push	r10
    1d82:	bf 92       	push	r11
    1d84:	cf 92       	push	r12
    1d86:	df 92       	push	r13
    1d88:	ef 92       	push	r14
    1d8a:	ff 92       	push	r15
    1d8c:	0f 93       	push	r16
    1d8e:	1f 93       	push	r17
    1d90:	cf 93       	push	r28
    1d92:	df 93       	push	r29
    1d94:	1f 92       	push	r1
    1d96:	cd b7       	in	r28, 0x3d	; 61
    1d98:	de b7       	in	r29, 0x3e	; 62
    1d9a:	8c 01       	movw	r16, r24
    1d9c:	c6 2e       	mov	r12, r22
    1d9e:	7a 01       	movw	r14, r20
    1da0:	29 83       	std	Y+1, r18	; 0x01
    1da2:	0e 94 26 12 	call	0x244c	; 0x244c <fgetc>
    1da6:	ac 01       	movw	r20, r24
    1da8:	55 27       	eor	r21, r21
    1daa:	29 81       	ldd	r18, Y+1	; 0x01
    1dac:	4b 32       	cpi	r20, 0x2B	; 43
    1dae:	51 05       	cpc	r21, r1
    1db0:	21 f0       	breq	.+8      	; 0x1dba <conv_int+0x3e>
    1db2:	4d 32       	cpi	r20, 0x2D	; 45
    1db4:	51 05       	cpc	r21, r1
    1db6:	69 f4       	brne	.+26     	; 0x1dd2 <conv_int+0x56>
    1db8:	20 68       	ori	r18, 0x80	; 128
    1dba:	ca 94       	dec	r12
    1dbc:	c1 10       	cpse	r12, r1
    1dbe:	02 c0       	rjmp	.+4      	; 0x1dc4 <conv_int+0x48>
    1dc0:	80 e0       	ldi	r24, 0x00	; 0
    1dc2:	76 c0       	rjmp	.+236    	; 0x1eb0 <conv_int+0x134>
    1dc4:	c8 01       	movw	r24, r16
    1dc6:	29 83       	std	Y+1, r18	; 0x01
    1dc8:	0e 94 26 12 	call	0x244c	; 0x244c <fgetc>
    1dcc:	29 81       	ldd	r18, Y+1	; 0x01
    1dce:	97 fd       	sbrc	r25, 7
    1dd0:	f7 cf       	rjmp	.-18     	; 0x1dc0 <conv_int+0x44>
    1dd2:	32 2f       	mov	r19, r18
    1dd4:	3d 7f       	andi	r19, 0xFD	; 253
    1dd6:	d3 2e       	mov	r13, r19
    1dd8:	32 2f       	mov	r19, r18
    1dda:	30 73       	andi	r19, 0x30	; 48
    1ddc:	49 f5       	brne	.+82     	; 0x1e30 <conv_int+0xb4>
    1dde:	80 33       	cpi	r24, 0x30	; 48
    1de0:	39 f5       	brne	.+78     	; 0x1e30 <conv_int+0xb4>
    1de2:	bb 24       	eor	r11, r11
    1de4:	ba 94       	dec	r11
    1de6:	bc 0c       	add	r11, r12
    1de8:	09 f4       	brne	.+2      	; 0x1dec <conv_int+0x70>
    1dea:	4e c0       	rjmp	.+156    	; 0x1e88 <conv_int+0x10c>
    1dec:	c8 01       	movw	r24, r16
    1dee:	29 83       	std	Y+1, r18	; 0x01
    1df0:	0e 94 26 12 	call	0x244c	; 0x244c <fgetc>
    1df4:	29 81       	ldd	r18, Y+1	; 0x01
    1df6:	97 fd       	sbrc	r25, 7
    1df8:	47 c0       	rjmp	.+142    	; 0x1e88 <conv_int+0x10c>
    1dfa:	38 2f       	mov	r19, r24
    1dfc:	3f 7d       	andi	r19, 0xDF	; 223
    1dfe:	38 35       	cpi	r19, 0x58	; 88
    1e00:	69 f4       	brne	.+26     	; 0x1e1c <conv_int+0xa0>
    1e02:	8d 2d       	mov	r24, r13
    1e04:	82 64       	ori	r24, 0x42	; 66
    1e06:	d8 2e       	mov	r13, r24
    1e08:	ca 94       	dec	r12
    1e0a:	ca 94       	dec	r12
    1e0c:	cc 20       	and	r12, r12
    1e0e:	e1 f1       	breq	.+120    	; 0x1e88 <conv_int+0x10c>
    1e10:	c8 01       	movw	r24, r16
    1e12:	0e 94 26 12 	call	0x244c	; 0x244c <fgetc>
    1e16:	97 ff       	sbrs	r25, 7
    1e18:	0b c0       	rjmp	.+22     	; 0x1e30 <conv_int+0xb4>
    1e1a:	36 c0       	rjmp	.+108    	; 0x1e88 <conv_int+0x10c>
    1e1c:	26 ff       	sbrs	r18, 6
    1e1e:	04 c0       	rjmp	.+8      	; 0x1e28 <conv_int+0xac>
    1e20:	2d 2d       	mov	r18, r13
    1e22:	22 60       	ori	r18, 0x02	; 2
    1e24:	d2 2e       	mov	r13, r18
    1e26:	03 c0       	rjmp	.+6      	; 0x1e2e <conv_int+0xb2>
    1e28:	3d 2d       	mov	r19, r13
    1e2a:	32 61       	ori	r19, 0x12	; 18
    1e2c:	d3 2e       	mov	r13, r19
    1e2e:	cb 2c       	mov	r12, r11
    1e30:	81 2c       	mov	r8, r1
    1e32:	91 2c       	mov	r9, r1
    1e34:	54 01       	movw	r10, r8
    1e36:	20 ed       	ldi	r18, 0xD0	; 208
    1e38:	28 0f       	add	r18, r24
    1e3a:	28 30       	cpi	r18, 0x08	; 8
    1e3c:	80 f0       	brcs	.+32     	; 0x1e5e <conv_int+0xe2>
    1e3e:	d4 fe       	sbrs	r13, 4
    1e40:	04 c0       	rjmp	.+8      	; 0x1e4a <conv_int+0xce>
    1e42:	b8 01       	movw	r22, r16
    1e44:	0e 94 9c 12 	call	0x2538	; 0x2538 <ungetc>
    1e48:	1c c0       	rjmp	.+56     	; 0x1e82 <conv_int+0x106>
    1e4a:	2a 30       	cpi	r18, 0x0A	; 10
    1e4c:	40 f0       	brcs	.+16     	; 0x1e5e <conv_int+0xe2>
    1e4e:	d6 fe       	sbrs	r13, 6
    1e50:	f8 cf       	rjmp	.-16     	; 0x1e42 <conv_int+0xc6>
    1e52:	2f 7d       	andi	r18, 0xDF	; 223
    1e54:	3f ee       	ldi	r19, 0xEF	; 239
    1e56:	32 0f       	add	r19, r18
    1e58:	36 30       	cpi	r19, 0x06	; 6
    1e5a:	98 f7       	brcc	.-26     	; 0x1e42 <conv_int+0xc6>
    1e5c:	27 50       	subi	r18, 0x07	; 7
    1e5e:	4d 2d       	mov	r20, r13
    1e60:	c5 01       	movw	r24, r10
    1e62:	b4 01       	movw	r22, r8
    1e64:	0e 94 85 0e 	call	0x1d0a	; 0x1d0a <mulacc>
    1e68:	4b 01       	movw	r8, r22
    1e6a:	5c 01       	movw	r10, r24
    1e6c:	8d 2d       	mov	r24, r13
    1e6e:	82 60       	ori	r24, 0x02	; 2
    1e70:	d8 2e       	mov	r13, r24
    1e72:	ca 94       	dec	r12
    1e74:	cc 20       	and	r12, r12
    1e76:	59 f0       	breq	.+22     	; 0x1e8e <conv_int+0x112>
    1e78:	c8 01       	movw	r24, r16
    1e7a:	0e 94 26 12 	call	0x244c	; 0x244c <fgetc>
    1e7e:	97 ff       	sbrs	r25, 7
    1e80:	da cf       	rjmp	.-76     	; 0x1e36 <conv_int+0xba>
    1e82:	d1 fc       	sbrc	r13, 1
    1e84:	04 c0       	rjmp	.+8      	; 0x1e8e <conv_int+0x112>
    1e86:	9c cf       	rjmp	.-200    	; 0x1dc0 <conv_int+0x44>
    1e88:	81 2c       	mov	r8, r1
    1e8a:	91 2c       	mov	r9, r1
    1e8c:	54 01       	movw	r10, r8
    1e8e:	d7 fe       	sbrs	r13, 7
    1e90:	08 c0       	rjmp	.+16     	; 0x1ea2 <conv_int+0x126>
    1e92:	b0 94       	com	r11
    1e94:	a0 94       	com	r10
    1e96:	90 94       	com	r9
    1e98:	80 94       	com	r8
    1e9a:	81 1c       	adc	r8, r1
    1e9c:	91 1c       	adc	r9, r1
    1e9e:	a1 1c       	adc	r10, r1
    1ea0:	b1 1c       	adc	r11, r1
    1ea2:	2d 2d       	mov	r18, r13
    1ea4:	b5 01       	movw	r22, r10
    1ea6:	a4 01       	movw	r20, r8
    1ea8:	c7 01       	movw	r24, r14
    1eaa:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <putval>
    1eae:	81 e0       	ldi	r24, 0x01	; 1
    1eb0:	0f 90       	pop	r0
    1eb2:	df 91       	pop	r29
    1eb4:	cf 91       	pop	r28
    1eb6:	1f 91       	pop	r17
    1eb8:	0f 91       	pop	r16
    1eba:	ff 90       	pop	r15
    1ebc:	ef 90       	pop	r14
    1ebe:	df 90       	pop	r13
    1ec0:	cf 90       	pop	r12
    1ec2:	bf 90       	pop	r11
    1ec4:	af 90       	pop	r10
    1ec6:	9f 90       	pop	r9
    1ec8:	8f 90       	pop	r8
    1eca:	08 95       	ret

00001ecc <vfscanf>:
    1ecc:	4f 92       	push	r4
    1ece:	5f 92       	push	r5
    1ed0:	6f 92       	push	r6
    1ed2:	7f 92       	push	r7
    1ed4:	8f 92       	push	r8
    1ed6:	9f 92       	push	r9
    1ed8:	af 92       	push	r10
    1eda:	bf 92       	push	r11
    1edc:	cf 92       	push	r12
    1ede:	df 92       	push	r13
    1ee0:	ef 92       	push	r14
    1ee2:	ff 92       	push	r15
    1ee4:	0f 93       	push	r16
    1ee6:	1f 93       	push	r17
    1ee8:	cf 93       	push	r28
    1eea:	df 93       	push	r29
    1eec:	1f 92       	push	r1
    1eee:	cd b7       	in	r28, 0x3d	; 61
    1ef0:	de b7       	in	r29, 0x3e	; 62
    1ef2:	7c 01       	movw	r14, r24
    1ef4:	2b 01       	movw	r4, r22
    1ef6:	5a 01       	movw	r10, r20
    1ef8:	fc 01       	movw	r30, r24
    1efa:	17 82       	std	Z+7, r1	; 0x07
    1efc:	16 82       	std	Z+6, r1	; 0x06
    1efe:	81 2c       	mov	r8, r1
    1f00:	f7 01       	movw	r30, r14
    1f02:	73 80       	ldd	r7, Z+3	; 0x03
    1f04:	f2 01       	movw	r30, r4
    1f06:	73 fc       	sbrc	r7, 3
    1f08:	85 91       	lpm	r24, Z+
    1f0a:	73 fe       	sbrs	r7, 3
    1f0c:	81 91       	ld	r24, Z+
    1f0e:	38 2f       	mov	r19, r24
    1f10:	2f 01       	movw	r4, r30
    1f12:	88 23       	and	r24, r24
    1f14:	09 f4       	brne	.+2      	; 0x1f18 <vfscanf+0x4c>
    1f16:	e2 c0       	rjmp	.+452    	; 0x20dc <vfscanf+0x210>
    1f18:	90 e0       	ldi	r25, 0x00	; 0
    1f1a:	39 83       	std	Y+1, r19	; 0x01
    1f1c:	0e 94 12 12 	call	0x2424	; 0x2424 <isspace>
    1f20:	39 81       	ldd	r19, Y+1	; 0x01
    1f22:	89 2b       	or	r24, r25
    1f24:	21 f0       	breq	.+8      	; 0x1f2e <vfscanf+0x62>
    1f26:	c7 01       	movw	r24, r14
    1f28:	0e 94 a5 0e 	call	0x1d4a	; 0x1d4a <skip_spaces>
    1f2c:	e9 cf       	rjmp	.-46     	; 0x1f00 <vfscanf+0x34>
    1f2e:	35 32       	cpi	r19, 0x25	; 37
    1f30:	41 f4       	brne	.+16     	; 0x1f42 <vfscanf+0x76>
    1f32:	f2 01       	movw	r30, r4
    1f34:	73 fc       	sbrc	r7, 3
    1f36:	35 91       	lpm	r19, Z+
    1f38:	73 fe       	sbrs	r7, 3
    1f3a:	31 91       	ld	r19, Z+
    1f3c:	2f 01       	movw	r4, r30
    1f3e:	35 32       	cpi	r19, 0x25	; 37
    1f40:	69 f4       	brne	.+26     	; 0x1f5c <vfscanf+0x90>
    1f42:	c7 01       	movw	r24, r14
    1f44:	39 83       	std	Y+1, r19	; 0x01
    1f46:	0e 94 26 12 	call	0x244c	; 0x244c <fgetc>
    1f4a:	39 81       	ldd	r19, Y+1	; 0x01
    1f4c:	97 fd       	sbrc	r25, 7
    1f4e:	c4 c0       	rjmp	.+392    	; 0x20d8 <vfscanf+0x20c>
    1f50:	38 17       	cp	r19, r24
    1f52:	b1 f2       	breq	.-84     	; 0x1f00 <vfscanf+0x34>
    1f54:	b7 01       	movw	r22, r14
    1f56:	0e 94 9c 12 	call	0x2538	; 0x2538 <ungetc>
    1f5a:	c0 c0       	rjmp	.+384    	; 0x20dc <vfscanf+0x210>
    1f5c:	3a 32       	cpi	r19, 0x2A	; 42
    1f5e:	39 f4       	brne	.+14     	; 0x1f6e <vfscanf+0xa2>
    1f60:	73 fc       	sbrc	r7, 3
    1f62:	35 91       	lpm	r19, Z+
    1f64:	73 fe       	sbrs	r7, 3
    1f66:	31 91       	ld	r19, Z+
    1f68:	2f 01       	movw	r4, r30
    1f6a:	11 e0       	ldi	r17, 0x01	; 1
    1f6c:	01 c0       	rjmp	.+2      	; 0x1f70 <vfscanf+0xa4>
    1f6e:	10 e0       	ldi	r17, 0x00	; 0
    1f70:	62 01       	movw	r12, r4
    1f72:	60 e0       	ldi	r22, 0x00	; 0
    1f74:	20 ed       	ldi	r18, 0xD0	; 208
    1f76:	23 0f       	add	r18, r19
    1f78:	2a 30       	cpi	r18, 0x0A	; 10
    1f7a:	70 f4       	brcc	.+28     	; 0x1f98 <vfscanf+0xcc>
    1f7c:	12 60       	ori	r17, 0x02	; 2
    1f7e:	70 e0       	ldi	r23, 0x00	; 0
    1f80:	80 e0       	ldi	r24, 0x00	; 0
    1f82:	90 e0       	ldi	r25, 0x00	; 0
    1f84:	40 e2       	ldi	r20, 0x20	; 32
    1f86:	0e 94 85 0e 	call	0x1d0a	; 0x1d0a <mulacc>
    1f8a:	f6 01       	movw	r30, r12
    1f8c:	73 fc       	sbrc	r7, 3
    1f8e:	35 91       	lpm	r19, Z+
    1f90:	73 fe       	sbrs	r7, 3
    1f92:	31 91       	ld	r19, Z+
    1f94:	6f 01       	movw	r12, r30
    1f96:	ee cf       	rjmp	.-36     	; 0x1f74 <vfscanf+0xa8>
    1f98:	96 2e       	mov	r9, r22
    1f9a:	03 2f       	mov	r16, r19
    1f9c:	26 01       	movw	r4, r12
    1f9e:	11 ff       	sbrs	r17, 1
    1fa0:	03 c0       	rjmp	.+6      	; 0x1fa8 <vfscanf+0xdc>
    1fa2:	61 11       	cpse	r22, r1
    1fa4:	03 c0       	rjmp	.+6      	; 0x1fac <vfscanf+0xe0>
    1fa6:	9a c0       	rjmp	.+308    	; 0x20dc <vfscanf+0x210>
    1fa8:	99 24       	eor	r9, r9
    1faa:	9a 94       	dec	r9
    1fac:	38 36       	cpi	r19, 0x68	; 104
    1fae:	19 f0       	breq	.+6      	; 0x1fb6 <vfscanf+0xea>
    1fb0:	3c 36       	cpi	r19, 0x6C	; 108
    1fb2:	51 f0       	breq	.+20     	; 0x1fc8 <vfscanf+0xfc>
    1fb4:	10 c0       	rjmp	.+32     	; 0x1fd6 <vfscanf+0x10a>
    1fb6:	f6 01       	movw	r30, r12
    1fb8:	73 fc       	sbrc	r7, 3
    1fba:	05 91       	lpm	r16, Z+
    1fbc:	73 fe       	sbrs	r7, 3
    1fbe:	01 91       	ld	r16, Z+
    1fc0:	2f 01       	movw	r4, r30
    1fc2:	08 36       	cpi	r16, 0x68	; 104
    1fc4:	41 f4       	brne	.+16     	; 0x1fd6 <vfscanf+0x10a>
    1fc6:	18 60       	ori	r17, 0x08	; 8
    1fc8:	14 60       	ori	r17, 0x04	; 4
    1fca:	f2 01       	movw	r30, r4
    1fcc:	73 fc       	sbrc	r7, 3
    1fce:	05 91       	lpm	r16, Z+
    1fd0:	73 fe       	sbrs	r7, 3
    1fd2:	01 91       	ld	r16, Z+
    1fd4:	2f 01       	movw	r4, r30
    1fd6:	00 23       	and	r16, r16
    1fd8:	09 f4       	brne	.+2      	; 0x1fdc <vfscanf+0x110>
    1fda:	80 c0       	rjmp	.+256    	; 0x20dc <vfscanf+0x210>
    1fdc:	60 2f       	mov	r22, r16
    1fde:	70 e0       	ldi	r23, 0x00	; 0
    1fe0:	8b ef       	ldi	r24, 0xFB	; 251
    1fe2:	90 e0       	ldi	r25, 0x00	; 0
    1fe4:	0e 94 1b 12 	call	0x2436	; 0x2436 <strchr_P>
    1fe8:	89 2b       	or	r24, r25
    1fea:	09 f4       	brne	.+2      	; 0x1fee <vfscanf+0x122>
    1fec:	77 c0       	rjmp	.+238    	; 0x20dc <vfscanf+0x210>
    1fee:	10 fd       	sbrc	r17, 0
    1ff0:	07 c0       	rjmp	.+14     	; 0x2000 <vfscanf+0x134>
    1ff2:	f5 01       	movw	r30, r10
    1ff4:	c0 80       	ld	r12, Z
    1ff6:	d1 80       	ldd	r13, Z+1	; 0x01
    1ff8:	c5 01       	movw	r24, r10
    1ffa:	02 96       	adiw	r24, 0x02	; 2
    1ffc:	5c 01       	movw	r10, r24
    1ffe:	02 c0       	rjmp	.+4      	; 0x2004 <vfscanf+0x138>
    2000:	c1 2c       	mov	r12, r1
    2002:	d1 2c       	mov	r13, r1
    2004:	0e 36       	cpi	r16, 0x6E	; 110
    2006:	51 f4       	brne	.+20     	; 0x201c <vfscanf+0x150>
    2008:	f7 01       	movw	r30, r14
    200a:	46 81       	ldd	r20, Z+6	; 0x06
    200c:	57 81       	ldd	r21, Z+7	; 0x07
    200e:	60 e0       	ldi	r22, 0x00	; 0
    2010:	70 e0       	ldi	r23, 0x00	; 0
    2012:	21 2f       	mov	r18, r17
    2014:	c6 01       	movw	r24, r12
    2016:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <putval>
    201a:	72 cf       	rjmp	.-284    	; 0x1f00 <vfscanf+0x34>
    201c:	03 36       	cpi	r16, 0x63	; 99
    201e:	a9 f4       	brne	.+42     	; 0x204a <vfscanf+0x17e>
    2020:	11 fd       	sbrc	r17, 1
    2022:	02 c0       	rjmp	.+4      	; 0x2028 <vfscanf+0x15c>
    2024:	99 24       	eor	r9, r9
    2026:	93 94       	inc	r9
    2028:	c7 01       	movw	r24, r14
    202a:	0e 94 26 12 	call	0x244c	; 0x244c <fgetc>
    202e:	97 fd       	sbrc	r25, 7
    2030:	53 c0       	rjmp	.+166    	; 0x20d8 <vfscanf+0x20c>
    2032:	c1 14       	cp	r12, r1
    2034:	d1 04       	cpc	r13, r1
    2036:	29 f0       	breq	.+10     	; 0x2042 <vfscanf+0x176>
    2038:	f6 01       	movw	r30, r12
    203a:	80 83       	st	Z, r24
    203c:	c6 01       	movw	r24, r12
    203e:	01 96       	adiw	r24, 0x01	; 1
    2040:	6c 01       	movw	r12, r24
    2042:	9a 94       	dec	r9
    2044:	91 10       	cpse	r9, r1
    2046:	f0 cf       	rjmp	.-32     	; 0x2028 <vfscanf+0x15c>
    2048:	43 c0       	rjmp	.+134    	; 0x20d0 <vfscanf+0x204>
    204a:	c7 01       	movw	r24, r14
    204c:	0e 94 a5 0e 	call	0x1d4a	; 0x1d4a <skip_spaces>
    2050:	97 fd       	sbrc	r25, 7
    2052:	42 c0       	rjmp	.+132    	; 0x20d8 <vfscanf+0x20c>
    2054:	0f 36       	cpi	r16, 0x6F	; 111
    2056:	61 f1       	breq	.+88     	; 0x20b0 <vfscanf+0x1e4>
    2058:	28 f4       	brcc	.+10     	; 0x2064 <vfscanf+0x198>
    205a:	04 36       	cpi	r16, 0x64	; 100
    205c:	39 f1       	breq	.+78     	; 0x20ac <vfscanf+0x1e0>
    205e:	09 36       	cpi	r16, 0x69	; 105
    2060:	51 f1       	breq	.+84     	; 0x20b6 <vfscanf+0x1ea>
    2062:	28 c0       	rjmp	.+80     	; 0x20b4 <vfscanf+0x1e8>
    2064:	03 37       	cpi	r16, 0x73	; 115
    2066:	71 f0       	breq	.+28     	; 0x2084 <vfscanf+0x1b8>
    2068:	05 37       	cpi	r16, 0x75	; 117
    206a:	01 f1       	breq	.+64     	; 0x20ac <vfscanf+0x1e0>
    206c:	23 c0       	rjmp	.+70     	; 0x20b4 <vfscanf+0x1e8>
    206e:	c1 14       	cp	r12, r1
    2070:	d1 04       	cpc	r13, r1
    2072:	29 f0       	breq	.+10     	; 0x207e <vfscanf+0x1b2>
    2074:	f6 01       	movw	r30, r12
    2076:	60 82       	st	Z, r6
    2078:	c6 01       	movw	r24, r12
    207a:	01 96       	adiw	r24, 0x01	; 1
    207c:	6c 01       	movw	r12, r24
    207e:	9a 94       	dec	r9
    2080:	99 20       	and	r9, r9
    2082:	71 f0       	breq	.+28     	; 0x20a0 <vfscanf+0x1d4>
    2084:	c7 01       	movw	r24, r14
    2086:	0e 94 26 12 	call	0x244c	; 0x244c <fgetc>
    208a:	3c 01       	movw	r6, r24
    208c:	97 fd       	sbrc	r25, 7
    208e:	08 c0       	rjmp	.+16     	; 0x20a0 <vfscanf+0x1d4>
    2090:	0e 94 12 12 	call	0x2424	; 0x2424 <isspace>
    2094:	89 2b       	or	r24, r25
    2096:	59 f3       	breq	.-42     	; 0x206e <vfscanf+0x1a2>
    2098:	b7 01       	movw	r22, r14
    209a:	c3 01       	movw	r24, r6
    209c:	0e 94 9c 12 	call	0x2538	; 0x2538 <ungetc>
    20a0:	c1 14       	cp	r12, r1
    20a2:	d1 04       	cpc	r13, r1
    20a4:	a9 f0       	breq	.+42     	; 0x20d0 <vfscanf+0x204>
    20a6:	f6 01       	movw	r30, r12
    20a8:	10 82       	st	Z, r1
    20aa:	12 c0       	rjmp	.+36     	; 0x20d0 <vfscanf+0x204>
    20ac:	10 62       	ori	r17, 0x20	; 32
    20ae:	03 c0       	rjmp	.+6      	; 0x20b6 <vfscanf+0x1ea>
    20b0:	10 61       	ori	r17, 0x10	; 16
    20b2:	01 c0       	rjmp	.+2      	; 0x20b6 <vfscanf+0x1ea>
    20b4:	10 64       	ori	r17, 0x40	; 64
    20b6:	21 2f       	mov	r18, r17
    20b8:	a6 01       	movw	r20, r12
    20ba:	69 2d       	mov	r22, r9
    20bc:	c7 01       	movw	r24, r14
    20be:	0e 94 be 0e 	call	0x1d7c	; 0x1d7c <conv_int>
    20c2:	81 11       	cpse	r24, r1
    20c4:	05 c0       	rjmp	.+10     	; 0x20d0 <vfscanf+0x204>
    20c6:	f7 01       	movw	r30, r14
    20c8:	83 81       	ldd	r24, Z+3	; 0x03
    20ca:	80 73       	andi	r24, 0x30	; 48
    20cc:	29 f4       	brne	.+10     	; 0x20d8 <vfscanf+0x20c>
    20ce:	06 c0       	rjmp	.+12     	; 0x20dc <vfscanf+0x210>
    20d0:	10 fd       	sbrc	r17, 0
    20d2:	16 cf       	rjmp	.-468    	; 0x1f00 <vfscanf+0x34>
    20d4:	83 94       	inc	r8
    20d6:	14 cf       	rjmp	.-472    	; 0x1f00 <vfscanf+0x34>
    20d8:	88 20       	and	r8, r8
    20da:	19 f0       	breq	.+6      	; 0x20e2 <vfscanf+0x216>
    20dc:	88 2d       	mov	r24, r8
    20de:	90 e0       	ldi	r25, 0x00	; 0
    20e0:	02 c0       	rjmp	.+4      	; 0x20e6 <vfscanf+0x21a>
    20e2:	8f ef       	ldi	r24, 0xFF	; 255
    20e4:	9f ef       	ldi	r25, 0xFF	; 255
    20e6:	0f 90       	pop	r0
    20e8:	df 91       	pop	r29
    20ea:	cf 91       	pop	r28
    20ec:	1f 91       	pop	r17
    20ee:	0f 91       	pop	r16
    20f0:	ff 90       	pop	r15
    20f2:	ef 90       	pop	r14
    20f4:	df 90       	pop	r13
    20f6:	cf 90       	pop	r12
    20f8:	bf 90       	pop	r11
    20fa:	af 90       	pop	r10
    20fc:	9f 90       	pop	r9
    20fe:	8f 90       	pop	r8
    2100:	7f 90       	pop	r7
    2102:	6f 90       	pop	r6
    2104:	5f 90       	pop	r5
    2106:	4f 90       	pop	r4
    2108:	08 95       	ret

0000210a <__cmpsf2>:
    210a:	0e 94 2b 11 	call	0x2256	; 0x2256 <__fp_cmp>
    210e:	08 f4       	brcc	.+2      	; 0x2112 <__cmpsf2+0x8>
    2110:	81 e0       	ldi	r24, 0x01	; 1
    2112:	08 95       	ret

00002114 <__divsf3>:
    2114:	0e 94 9e 10 	call	0x213c	; 0x213c <__divsf3x>
    2118:	0c 94 66 11 	jmp	0x22cc	; 0x22cc <__fp_round>
    211c:	0e 94 5f 11 	call	0x22be	; 0x22be <__fp_pscB>
    2120:	58 f0       	brcs	.+22     	; 0x2138 <__divsf3+0x24>
    2122:	0e 94 58 11 	call	0x22b0	; 0x22b0 <__fp_pscA>
    2126:	40 f0       	brcs	.+16     	; 0x2138 <__divsf3+0x24>
    2128:	29 f4       	brne	.+10     	; 0x2134 <__divsf3+0x20>
    212a:	5f 3f       	cpi	r21, 0xFF	; 255
    212c:	29 f0       	breq	.+10     	; 0x2138 <__divsf3+0x24>
    212e:	0c 94 4f 11 	jmp	0x229e	; 0x229e <__fp_inf>
    2132:	51 11       	cpse	r21, r1
    2134:	0c 94 9a 11 	jmp	0x2334	; 0x2334 <__fp_szero>
    2138:	0c 94 55 11 	jmp	0x22aa	; 0x22aa <__fp_nan>

0000213c <__divsf3x>:
    213c:	0e 94 77 11 	call	0x22ee	; 0x22ee <__fp_split3>
    2140:	68 f3       	brcs	.-38     	; 0x211c <__divsf3+0x8>

00002142 <__divsf3_pse>:
    2142:	99 23       	and	r25, r25
    2144:	b1 f3       	breq	.-20     	; 0x2132 <__divsf3+0x1e>
    2146:	55 23       	and	r21, r21
    2148:	91 f3       	breq	.-28     	; 0x212e <__divsf3+0x1a>
    214a:	95 1b       	sub	r25, r21
    214c:	55 0b       	sbc	r21, r21
    214e:	bb 27       	eor	r27, r27
    2150:	aa 27       	eor	r26, r26
    2152:	62 17       	cp	r22, r18
    2154:	73 07       	cpc	r23, r19
    2156:	84 07       	cpc	r24, r20
    2158:	38 f0       	brcs	.+14     	; 0x2168 <__divsf3_pse+0x26>
    215a:	9f 5f       	subi	r25, 0xFF	; 255
    215c:	5f 4f       	sbci	r21, 0xFF	; 255
    215e:	22 0f       	add	r18, r18
    2160:	33 1f       	adc	r19, r19
    2162:	44 1f       	adc	r20, r20
    2164:	aa 1f       	adc	r26, r26
    2166:	a9 f3       	breq	.-22     	; 0x2152 <__divsf3_pse+0x10>
    2168:	35 d0       	rcall	.+106    	; 0x21d4 <__divsf3_pse+0x92>
    216a:	0e 2e       	mov	r0, r30
    216c:	3a f0       	brmi	.+14     	; 0x217c <__divsf3_pse+0x3a>
    216e:	e0 e8       	ldi	r30, 0x80	; 128
    2170:	32 d0       	rcall	.+100    	; 0x21d6 <__divsf3_pse+0x94>
    2172:	91 50       	subi	r25, 0x01	; 1
    2174:	50 40       	sbci	r21, 0x00	; 0
    2176:	e6 95       	lsr	r30
    2178:	00 1c       	adc	r0, r0
    217a:	ca f7       	brpl	.-14     	; 0x216e <__divsf3_pse+0x2c>
    217c:	2b d0       	rcall	.+86     	; 0x21d4 <__divsf3_pse+0x92>
    217e:	fe 2f       	mov	r31, r30
    2180:	29 d0       	rcall	.+82     	; 0x21d4 <__divsf3_pse+0x92>
    2182:	66 0f       	add	r22, r22
    2184:	77 1f       	adc	r23, r23
    2186:	88 1f       	adc	r24, r24
    2188:	bb 1f       	adc	r27, r27
    218a:	26 17       	cp	r18, r22
    218c:	37 07       	cpc	r19, r23
    218e:	48 07       	cpc	r20, r24
    2190:	ab 07       	cpc	r26, r27
    2192:	b0 e8       	ldi	r27, 0x80	; 128
    2194:	09 f0       	breq	.+2      	; 0x2198 <__divsf3_pse+0x56>
    2196:	bb 0b       	sbc	r27, r27
    2198:	80 2d       	mov	r24, r0
    219a:	bf 01       	movw	r22, r30
    219c:	ff 27       	eor	r31, r31
    219e:	93 58       	subi	r25, 0x83	; 131
    21a0:	5f 4f       	sbci	r21, 0xFF	; 255
    21a2:	3a f0       	brmi	.+14     	; 0x21b2 <__divsf3_pse+0x70>
    21a4:	9e 3f       	cpi	r25, 0xFE	; 254
    21a6:	51 05       	cpc	r21, r1
    21a8:	78 f0       	brcs	.+30     	; 0x21c8 <__divsf3_pse+0x86>
    21aa:	0c 94 4f 11 	jmp	0x229e	; 0x229e <__fp_inf>
    21ae:	0c 94 9a 11 	jmp	0x2334	; 0x2334 <__fp_szero>
    21b2:	5f 3f       	cpi	r21, 0xFF	; 255
    21b4:	e4 f3       	brlt	.-8      	; 0x21ae <__divsf3_pse+0x6c>
    21b6:	98 3e       	cpi	r25, 0xE8	; 232
    21b8:	d4 f3       	brlt	.-12     	; 0x21ae <__divsf3_pse+0x6c>
    21ba:	86 95       	lsr	r24
    21bc:	77 95       	ror	r23
    21be:	67 95       	ror	r22
    21c0:	b7 95       	ror	r27
    21c2:	f7 95       	ror	r31
    21c4:	9f 5f       	subi	r25, 0xFF	; 255
    21c6:	c9 f7       	brne	.-14     	; 0x21ba <__divsf3_pse+0x78>
    21c8:	88 0f       	add	r24, r24
    21ca:	91 1d       	adc	r25, r1
    21cc:	96 95       	lsr	r25
    21ce:	87 95       	ror	r24
    21d0:	97 f9       	bld	r25, 7
    21d2:	08 95       	ret
    21d4:	e1 e0       	ldi	r30, 0x01	; 1
    21d6:	66 0f       	add	r22, r22
    21d8:	77 1f       	adc	r23, r23
    21da:	88 1f       	adc	r24, r24
    21dc:	bb 1f       	adc	r27, r27
    21de:	62 17       	cp	r22, r18
    21e0:	73 07       	cpc	r23, r19
    21e2:	84 07       	cpc	r24, r20
    21e4:	ba 07       	cpc	r27, r26
    21e6:	20 f0       	brcs	.+8      	; 0x21f0 <__divsf3_pse+0xae>
    21e8:	62 1b       	sub	r22, r18
    21ea:	73 0b       	sbc	r23, r19
    21ec:	84 0b       	sbc	r24, r20
    21ee:	ba 0b       	sbc	r27, r26
    21f0:	ee 1f       	adc	r30, r30
    21f2:	88 f7       	brcc	.-30     	; 0x21d6 <__divsf3_pse+0x94>
    21f4:	e0 95       	com	r30
    21f6:	08 95       	ret

000021f8 <__fixunssfsi>:
    21f8:	0e 94 7f 11 	call	0x22fe	; 0x22fe <__fp_splitA>
    21fc:	88 f0       	brcs	.+34     	; 0x2220 <__stack+0x21>
    21fe:	9f 57       	subi	r25, 0x7F	; 127
    2200:	98 f0       	brcs	.+38     	; 0x2228 <__stack+0x29>
    2202:	b9 2f       	mov	r27, r25
    2204:	99 27       	eor	r25, r25
    2206:	b7 51       	subi	r27, 0x17	; 23
    2208:	b0 f0       	brcs	.+44     	; 0x2236 <__stack+0x37>
    220a:	e1 f0       	breq	.+56     	; 0x2244 <__stack+0x45>
    220c:	66 0f       	add	r22, r22
    220e:	77 1f       	adc	r23, r23
    2210:	88 1f       	adc	r24, r24
    2212:	99 1f       	adc	r25, r25
    2214:	1a f0       	brmi	.+6      	; 0x221c <__stack+0x1d>
    2216:	ba 95       	dec	r27
    2218:	c9 f7       	brne	.-14     	; 0x220c <__stack+0xd>
    221a:	14 c0       	rjmp	.+40     	; 0x2244 <__stack+0x45>
    221c:	b1 30       	cpi	r27, 0x01	; 1
    221e:	91 f0       	breq	.+36     	; 0x2244 <__stack+0x45>
    2220:	0e 94 99 11 	call	0x2332	; 0x2332 <__fp_zero>
    2224:	b1 e0       	ldi	r27, 0x01	; 1
    2226:	08 95       	ret
    2228:	0c 94 99 11 	jmp	0x2332	; 0x2332 <__fp_zero>
    222c:	67 2f       	mov	r22, r23
    222e:	78 2f       	mov	r23, r24
    2230:	88 27       	eor	r24, r24
    2232:	b8 5f       	subi	r27, 0xF8	; 248
    2234:	39 f0       	breq	.+14     	; 0x2244 <__stack+0x45>
    2236:	b9 3f       	cpi	r27, 0xF9	; 249
    2238:	cc f3       	brlt	.-14     	; 0x222c <__stack+0x2d>
    223a:	86 95       	lsr	r24
    223c:	77 95       	ror	r23
    223e:	67 95       	ror	r22
    2240:	b3 95       	inc	r27
    2242:	d9 f7       	brne	.-10     	; 0x223a <__stack+0x3b>
    2244:	3e f4       	brtc	.+14     	; 0x2254 <__stack+0x55>
    2246:	90 95       	com	r25
    2248:	80 95       	com	r24
    224a:	70 95       	com	r23
    224c:	61 95       	neg	r22
    224e:	7f 4f       	sbci	r23, 0xFF	; 255
    2250:	8f 4f       	sbci	r24, 0xFF	; 255
    2252:	9f 4f       	sbci	r25, 0xFF	; 255
    2254:	08 95       	ret

00002256 <__fp_cmp>:
    2256:	99 0f       	add	r25, r25
    2258:	00 08       	sbc	r0, r0
    225a:	55 0f       	add	r21, r21
    225c:	aa 0b       	sbc	r26, r26
    225e:	e0 e8       	ldi	r30, 0x80	; 128
    2260:	fe ef       	ldi	r31, 0xFE	; 254
    2262:	16 16       	cp	r1, r22
    2264:	17 06       	cpc	r1, r23
    2266:	e8 07       	cpc	r30, r24
    2268:	f9 07       	cpc	r31, r25
    226a:	c0 f0       	brcs	.+48     	; 0x229c <__fp_cmp+0x46>
    226c:	12 16       	cp	r1, r18
    226e:	13 06       	cpc	r1, r19
    2270:	e4 07       	cpc	r30, r20
    2272:	f5 07       	cpc	r31, r21
    2274:	98 f0       	brcs	.+38     	; 0x229c <__fp_cmp+0x46>
    2276:	62 1b       	sub	r22, r18
    2278:	73 0b       	sbc	r23, r19
    227a:	84 0b       	sbc	r24, r20
    227c:	95 0b       	sbc	r25, r21
    227e:	39 f4       	brne	.+14     	; 0x228e <__fp_cmp+0x38>
    2280:	0a 26       	eor	r0, r26
    2282:	61 f0       	breq	.+24     	; 0x229c <__fp_cmp+0x46>
    2284:	23 2b       	or	r18, r19
    2286:	24 2b       	or	r18, r20
    2288:	25 2b       	or	r18, r21
    228a:	21 f4       	brne	.+8      	; 0x2294 <__fp_cmp+0x3e>
    228c:	08 95       	ret
    228e:	0a 26       	eor	r0, r26
    2290:	09 f4       	brne	.+2      	; 0x2294 <__fp_cmp+0x3e>
    2292:	a1 40       	sbci	r26, 0x01	; 1
    2294:	a6 95       	lsr	r26
    2296:	8f ef       	ldi	r24, 0xFF	; 255
    2298:	81 1d       	adc	r24, r1
    229a:	81 1d       	adc	r24, r1
    229c:	08 95       	ret

0000229e <__fp_inf>:
    229e:	97 f9       	bld	r25, 7
    22a0:	9f 67       	ori	r25, 0x7F	; 127
    22a2:	80 e8       	ldi	r24, 0x80	; 128
    22a4:	70 e0       	ldi	r23, 0x00	; 0
    22a6:	60 e0       	ldi	r22, 0x00	; 0
    22a8:	08 95       	ret

000022aa <__fp_nan>:
    22aa:	9f ef       	ldi	r25, 0xFF	; 255
    22ac:	80 ec       	ldi	r24, 0xC0	; 192
    22ae:	08 95       	ret

000022b0 <__fp_pscA>:
    22b0:	00 24       	eor	r0, r0
    22b2:	0a 94       	dec	r0
    22b4:	16 16       	cp	r1, r22
    22b6:	17 06       	cpc	r1, r23
    22b8:	18 06       	cpc	r1, r24
    22ba:	09 06       	cpc	r0, r25
    22bc:	08 95       	ret

000022be <__fp_pscB>:
    22be:	00 24       	eor	r0, r0
    22c0:	0a 94       	dec	r0
    22c2:	12 16       	cp	r1, r18
    22c4:	13 06       	cpc	r1, r19
    22c6:	14 06       	cpc	r1, r20
    22c8:	05 06       	cpc	r0, r21
    22ca:	08 95       	ret

000022cc <__fp_round>:
    22cc:	09 2e       	mov	r0, r25
    22ce:	03 94       	inc	r0
    22d0:	00 0c       	add	r0, r0
    22d2:	11 f4       	brne	.+4      	; 0x22d8 <__fp_round+0xc>
    22d4:	88 23       	and	r24, r24
    22d6:	52 f0       	brmi	.+20     	; 0x22ec <__fp_round+0x20>
    22d8:	bb 0f       	add	r27, r27
    22da:	40 f4       	brcc	.+16     	; 0x22ec <__fp_round+0x20>
    22dc:	bf 2b       	or	r27, r31
    22de:	11 f4       	brne	.+4      	; 0x22e4 <__fp_round+0x18>
    22e0:	60 ff       	sbrs	r22, 0
    22e2:	04 c0       	rjmp	.+8      	; 0x22ec <__fp_round+0x20>
    22e4:	6f 5f       	subi	r22, 0xFF	; 255
    22e6:	7f 4f       	sbci	r23, 0xFF	; 255
    22e8:	8f 4f       	sbci	r24, 0xFF	; 255
    22ea:	9f 4f       	sbci	r25, 0xFF	; 255
    22ec:	08 95       	ret

000022ee <__fp_split3>:
    22ee:	57 fd       	sbrc	r21, 7
    22f0:	90 58       	subi	r25, 0x80	; 128
    22f2:	44 0f       	add	r20, r20
    22f4:	55 1f       	adc	r21, r21
    22f6:	59 f0       	breq	.+22     	; 0x230e <__fp_splitA+0x10>
    22f8:	5f 3f       	cpi	r21, 0xFF	; 255
    22fa:	71 f0       	breq	.+28     	; 0x2318 <__fp_splitA+0x1a>
    22fc:	47 95       	ror	r20

000022fe <__fp_splitA>:
    22fe:	88 0f       	add	r24, r24
    2300:	97 fb       	bst	r25, 7
    2302:	99 1f       	adc	r25, r25
    2304:	61 f0       	breq	.+24     	; 0x231e <__fp_splitA+0x20>
    2306:	9f 3f       	cpi	r25, 0xFF	; 255
    2308:	79 f0       	breq	.+30     	; 0x2328 <__fp_splitA+0x2a>
    230a:	87 95       	ror	r24
    230c:	08 95       	ret
    230e:	12 16       	cp	r1, r18
    2310:	13 06       	cpc	r1, r19
    2312:	14 06       	cpc	r1, r20
    2314:	55 1f       	adc	r21, r21
    2316:	f2 cf       	rjmp	.-28     	; 0x22fc <__fp_split3+0xe>
    2318:	46 95       	lsr	r20
    231a:	f1 df       	rcall	.-30     	; 0x22fe <__fp_splitA>
    231c:	08 c0       	rjmp	.+16     	; 0x232e <__fp_splitA+0x30>
    231e:	16 16       	cp	r1, r22
    2320:	17 06       	cpc	r1, r23
    2322:	18 06       	cpc	r1, r24
    2324:	99 1f       	adc	r25, r25
    2326:	f1 cf       	rjmp	.-30     	; 0x230a <__fp_splitA+0xc>
    2328:	86 95       	lsr	r24
    232a:	71 05       	cpc	r23, r1
    232c:	61 05       	cpc	r22, r1
    232e:	08 94       	sec
    2330:	08 95       	ret

00002332 <__fp_zero>:
    2332:	e8 94       	clt

00002334 <__fp_szero>:
    2334:	bb 27       	eor	r27, r27
    2336:	66 27       	eor	r22, r22
    2338:	77 27       	eor	r23, r23
    233a:	cb 01       	movw	r24, r22
    233c:	97 f9       	bld	r25, 7
    233e:	08 95       	ret

00002340 <__gesf2>:
    2340:	0e 94 2b 11 	call	0x2256	; 0x2256 <__fp_cmp>
    2344:	08 f4       	brcc	.+2      	; 0x2348 <__gesf2+0x8>
    2346:	8f ef       	ldi	r24, 0xFF	; 255
    2348:	08 95       	ret

0000234a <__mulsf3>:
    234a:	0e 94 b8 11 	call	0x2370	; 0x2370 <__mulsf3x>
    234e:	0c 94 66 11 	jmp	0x22cc	; 0x22cc <__fp_round>
    2352:	0e 94 58 11 	call	0x22b0	; 0x22b0 <__fp_pscA>
    2356:	38 f0       	brcs	.+14     	; 0x2366 <__mulsf3+0x1c>
    2358:	0e 94 5f 11 	call	0x22be	; 0x22be <__fp_pscB>
    235c:	20 f0       	brcs	.+8      	; 0x2366 <__mulsf3+0x1c>
    235e:	95 23       	and	r25, r21
    2360:	11 f0       	breq	.+4      	; 0x2366 <__mulsf3+0x1c>
    2362:	0c 94 4f 11 	jmp	0x229e	; 0x229e <__fp_inf>
    2366:	0c 94 55 11 	jmp	0x22aa	; 0x22aa <__fp_nan>
    236a:	11 24       	eor	r1, r1
    236c:	0c 94 9a 11 	jmp	0x2334	; 0x2334 <__fp_szero>

00002370 <__mulsf3x>:
    2370:	0e 94 77 11 	call	0x22ee	; 0x22ee <__fp_split3>
    2374:	70 f3       	brcs	.-36     	; 0x2352 <__mulsf3+0x8>

00002376 <__mulsf3_pse>:
    2376:	95 9f       	mul	r25, r21
    2378:	c1 f3       	breq	.-16     	; 0x236a <__mulsf3+0x20>
    237a:	95 0f       	add	r25, r21
    237c:	50 e0       	ldi	r21, 0x00	; 0
    237e:	55 1f       	adc	r21, r21
    2380:	62 9f       	mul	r22, r18
    2382:	f0 01       	movw	r30, r0
    2384:	72 9f       	mul	r23, r18
    2386:	bb 27       	eor	r27, r27
    2388:	f0 0d       	add	r31, r0
    238a:	b1 1d       	adc	r27, r1
    238c:	63 9f       	mul	r22, r19
    238e:	aa 27       	eor	r26, r26
    2390:	f0 0d       	add	r31, r0
    2392:	b1 1d       	adc	r27, r1
    2394:	aa 1f       	adc	r26, r26
    2396:	64 9f       	mul	r22, r20
    2398:	66 27       	eor	r22, r22
    239a:	b0 0d       	add	r27, r0
    239c:	a1 1d       	adc	r26, r1
    239e:	66 1f       	adc	r22, r22
    23a0:	82 9f       	mul	r24, r18
    23a2:	22 27       	eor	r18, r18
    23a4:	b0 0d       	add	r27, r0
    23a6:	a1 1d       	adc	r26, r1
    23a8:	62 1f       	adc	r22, r18
    23aa:	73 9f       	mul	r23, r19
    23ac:	b0 0d       	add	r27, r0
    23ae:	a1 1d       	adc	r26, r1
    23b0:	62 1f       	adc	r22, r18
    23b2:	83 9f       	mul	r24, r19
    23b4:	a0 0d       	add	r26, r0
    23b6:	61 1d       	adc	r22, r1
    23b8:	22 1f       	adc	r18, r18
    23ba:	74 9f       	mul	r23, r20
    23bc:	33 27       	eor	r19, r19
    23be:	a0 0d       	add	r26, r0
    23c0:	61 1d       	adc	r22, r1
    23c2:	23 1f       	adc	r18, r19
    23c4:	84 9f       	mul	r24, r20
    23c6:	60 0d       	add	r22, r0
    23c8:	21 1d       	adc	r18, r1
    23ca:	82 2f       	mov	r24, r18
    23cc:	76 2f       	mov	r23, r22
    23ce:	6a 2f       	mov	r22, r26
    23d0:	11 24       	eor	r1, r1
    23d2:	9f 57       	subi	r25, 0x7F	; 127
    23d4:	50 40       	sbci	r21, 0x00	; 0
    23d6:	9a f0       	brmi	.+38     	; 0x23fe <__mulsf3_pse+0x88>
    23d8:	f1 f0       	breq	.+60     	; 0x2416 <__mulsf3_pse+0xa0>
    23da:	88 23       	and	r24, r24
    23dc:	4a f0       	brmi	.+18     	; 0x23f0 <__mulsf3_pse+0x7a>
    23de:	ee 0f       	add	r30, r30
    23e0:	ff 1f       	adc	r31, r31
    23e2:	bb 1f       	adc	r27, r27
    23e4:	66 1f       	adc	r22, r22
    23e6:	77 1f       	adc	r23, r23
    23e8:	88 1f       	adc	r24, r24
    23ea:	91 50       	subi	r25, 0x01	; 1
    23ec:	50 40       	sbci	r21, 0x00	; 0
    23ee:	a9 f7       	brne	.-22     	; 0x23da <__mulsf3_pse+0x64>
    23f0:	9e 3f       	cpi	r25, 0xFE	; 254
    23f2:	51 05       	cpc	r21, r1
    23f4:	80 f0       	brcs	.+32     	; 0x2416 <__mulsf3_pse+0xa0>
    23f6:	0c 94 4f 11 	jmp	0x229e	; 0x229e <__fp_inf>
    23fa:	0c 94 9a 11 	jmp	0x2334	; 0x2334 <__fp_szero>
    23fe:	5f 3f       	cpi	r21, 0xFF	; 255
    2400:	e4 f3       	brlt	.-8      	; 0x23fa <__mulsf3_pse+0x84>
    2402:	98 3e       	cpi	r25, 0xE8	; 232
    2404:	d4 f3       	brlt	.-12     	; 0x23fa <__mulsf3_pse+0x84>
    2406:	86 95       	lsr	r24
    2408:	77 95       	ror	r23
    240a:	67 95       	ror	r22
    240c:	b7 95       	ror	r27
    240e:	f7 95       	ror	r31
    2410:	e7 95       	ror	r30
    2412:	9f 5f       	subi	r25, 0xFF	; 255
    2414:	c1 f7       	brne	.-16     	; 0x2406 <__mulsf3_pse+0x90>
    2416:	fe 2b       	or	r31, r30
    2418:	88 0f       	add	r24, r24
    241a:	91 1d       	adc	r25, r1
    241c:	96 95       	lsr	r25
    241e:	87 95       	ror	r24
    2420:	97 f9       	bld	r25, 7
    2422:	08 95       	ret

00002424 <isspace>:
    2424:	91 11       	cpse	r25, r1
    2426:	0c 94 13 13 	jmp	0x2626	; 0x2626 <__ctype_isfalse>
    242a:	80 32       	cpi	r24, 0x20	; 32
    242c:	19 f0       	breq	.+6      	; 0x2434 <isspace+0x10>
    242e:	89 50       	subi	r24, 0x09	; 9
    2430:	85 50       	subi	r24, 0x05	; 5
    2432:	c8 f7       	brcc	.-14     	; 0x2426 <isspace+0x2>
    2434:	08 95       	ret

00002436 <strchr_P>:
    2436:	fc 01       	movw	r30, r24
    2438:	05 90       	lpm	r0, Z+
    243a:	06 16       	cp	r0, r22
    243c:	21 f0       	breq	.+8      	; 0x2446 <strchr_P+0x10>
    243e:	00 20       	and	r0, r0
    2440:	d9 f7       	brne	.-10     	; 0x2438 <strchr_P+0x2>
    2442:	c0 01       	movw	r24, r0
    2444:	08 95       	ret
    2446:	31 97       	sbiw	r30, 0x01	; 1
    2448:	cf 01       	movw	r24, r30
    244a:	08 95       	ret

0000244c <fgetc>:
    244c:	cf 93       	push	r28
    244e:	df 93       	push	r29
    2450:	ec 01       	movw	r28, r24
    2452:	2b 81       	ldd	r18, Y+3	; 0x03
    2454:	20 ff       	sbrs	r18, 0
    2456:	33 c0       	rjmp	.+102    	; 0x24be <fgetc+0x72>
    2458:	26 ff       	sbrs	r18, 6
    245a:	0a c0       	rjmp	.+20     	; 0x2470 <fgetc+0x24>
    245c:	2f 7b       	andi	r18, 0xBF	; 191
    245e:	2b 83       	std	Y+3, r18	; 0x03
    2460:	8e 81       	ldd	r24, Y+6	; 0x06
    2462:	9f 81       	ldd	r25, Y+7	; 0x07
    2464:	01 96       	adiw	r24, 0x01	; 1
    2466:	9f 83       	std	Y+7, r25	; 0x07
    2468:	8e 83       	std	Y+6, r24	; 0x06
    246a:	8a 81       	ldd	r24, Y+2	; 0x02
    246c:	90 e0       	ldi	r25, 0x00	; 0
    246e:	29 c0       	rjmp	.+82     	; 0x24c2 <fgetc+0x76>
    2470:	22 ff       	sbrs	r18, 2
    2472:	0f c0       	rjmp	.+30     	; 0x2492 <fgetc+0x46>
    2474:	e8 81       	ld	r30, Y
    2476:	f9 81       	ldd	r31, Y+1	; 0x01
    2478:	80 81       	ld	r24, Z
    247a:	08 2e       	mov	r0, r24
    247c:	00 0c       	add	r0, r0
    247e:	99 0b       	sbc	r25, r25
    2480:	00 97       	sbiw	r24, 0x00	; 0
    2482:	19 f4       	brne	.+6      	; 0x248a <fgetc+0x3e>
    2484:	20 62       	ori	r18, 0x20	; 32
    2486:	2b 83       	std	Y+3, r18	; 0x03
    2488:	1a c0       	rjmp	.+52     	; 0x24be <fgetc+0x72>
    248a:	31 96       	adiw	r30, 0x01	; 1
    248c:	f9 83       	std	Y+1, r31	; 0x01
    248e:	e8 83       	st	Y, r30
    2490:	0e c0       	rjmp	.+28     	; 0x24ae <fgetc+0x62>
    2492:	ea 85       	ldd	r30, Y+10	; 0x0a
    2494:	fb 85       	ldd	r31, Y+11	; 0x0b
    2496:	19 95       	eicall
    2498:	97 ff       	sbrs	r25, 7
    249a:	09 c0       	rjmp	.+18     	; 0x24ae <fgetc+0x62>
    249c:	2b 81       	ldd	r18, Y+3	; 0x03
    249e:	01 96       	adiw	r24, 0x01	; 1
    24a0:	11 f0       	breq	.+4      	; 0x24a6 <fgetc+0x5a>
    24a2:	80 e2       	ldi	r24, 0x20	; 32
    24a4:	01 c0       	rjmp	.+2      	; 0x24a8 <fgetc+0x5c>
    24a6:	80 e1       	ldi	r24, 0x10	; 16
    24a8:	82 2b       	or	r24, r18
    24aa:	8b 83       	std	Y+3, r24	; 0x03
    24ac:	08 c0       	rjmp	.+16     	; 0x24be <fgetc+0x72>
    24ae:	2e 81       	ldd	r18, Y+6	; 0x06
    24b0:	3f 81       	ldd	r19, Y+7	; 0x07
    24b2:	2f 5f       	subi	r18, 0xFF	; 255
    24b4:	3f 4f       	sbci	r19, 0xFF	; 255
    24b6:	3f 83       	std	Y+7, r19	; 0x07
    24b8:	2e 83       	std	Y+6, r18	; 0x06
    24ba:	99 27       	eor	r25, r25
    24bc:	02 c0       	rjmp	.+4      	; 0x24c2 <fgetc+0x76>
    24be:	8f ef       	ldi	r24, 0xFF	; 255
    24c0:	9f ef       	ldi	r25, 0xFF	; 255
    24c2:	df 91       	pop	r29
    24c4:	cf 91       	pop	r28
    24c6:	08 95       	ret

000024c8 <fputc>:
    24c8:	0f 93       	push	r16
    24ca:	1f 93       	push	r17
    24cc:	cf 93       	push	r28
    24ce:	df 93       	push	r29
    24d0:	fb 01       	movw	r30, r22
    24d2:	23 81       	ldd	r18, Z+3	; 0x03
    24d4:	21 fd       	sbrc	r18, 1
    24d6:	03 c0       	rjmp	.+6      	; 0x24de <fputc+0x16>
    24d8:	8f ef       	ldi	r24, 0xFF	; 255
    24da:	9f ef       	ldi	r25, 0xFF	; 255
    24dc:	28 c0       	rjmp	.+80     	; 0x252e <fputc+0x66>
    24de:	22 ff       	sbrs	r18, 2
    24e0:	16 c0       	rjmp	.+44     	; 0x250e <fputc+0x46>
    24e2:	46 81       	ldd	r20, Z+6	; 0x06
    24e4:	57 81       	ldd	r21, Z+7	; 0x07
    24e6:	24 81       	ldd	r18, Z+4	; 0x04
    24e8:	35 81       	ldd	r19, Z+5	; 0x05
    24ea:	42 17       	cp	r20, r18
    24ec:	53 07       	cpc	r21, r19
    24ee:	44 f4       	brge	.+16     	; 0x2500 <fputc+0x38>
    24f0:	a0 81       	ld	r26, Z
    24f2:	b1 81       	ldd	r27, Z+1	; 0x01
    24f4:	9d 01       	movw	r18, r26
    24f6:	2f 5f       	subi	r18, 0xFF	; 255
    24f8:	3f 4f       	sbci	r19, 0xFF	; 255
    24fa:	31 83       	std	Z+1, r19	; 0x01
    24fc:	20 83       	st	Z, r18
    24fe:	8c 93       	st	X, r24
    2500:	26 81       	ldd	r18, Z+6	; 0x06
    2502:	37 81       	ldd	r19, Z+7	; 0x07
    2504:	2f 5f       	subi	r18, 0xFF	; 255
    2506:	3f 4f       	sbci	r19, 0xFF	; 255
    2508:	37 83       	std	Z+7, r19	; 0x07
    250a:	26 83       	std	Z+6, r18	; 0x06
    250c:	10 c0       	rjmp	.+32     	; 0x252e <fputc+0x66>
    250e:	eb 01       	movw	r28, r22
    2510:	09 2f       	mov	r16, r25
    2512:	18 2f       	mov	r17, r24
    2514:	00 84       	ldd	r0, Z+8	; 0x08
    2516:	f1 85       	ldd	r31, Z+9	; 0x09
    2518:	e0 2d       	mov	r30, r0
    251a:	19 95       	eicall
    251c:	89 2b       	or	r24, r25
    251e:	e1 f6       	brne	.-72     	; 0x24d8 <fputc+0x10>
    2520:	8e 81       	ldd	r24, Y+6	; 0x06
    2522:	9f 81       	ldd	r25, Y+7	; 0x07
    2524:	01 96       	adiw	r24, 0x01	; 1
    2526:	9f 83       	std	Y+7, r25	; 0x07
    2528:	8e 83       	std	Y+6, r24	; 0x06
    252a:	81 2f       	mov	r24, r17
    252c:	90 2f       	mov	r25, r16
    252e:	df 91       	pop	r29
    2530:	cf 91       	pop	r28
    2532:	1f 91       	pop	r17
    2534:	0f 91       	pop	r16
    2536:	08 95       	ret

00002538 <ungetc>:
    2538:	fb 01       	movw	r30, r22
    253a:	23 81       	ldd	r18, Z+3	; 0x03
    253c:	20 ff       	sbrs	r18, 0
    253e:	12 c0       	rjmp	.+36     	; 0x2564 <ungetc+0x2c>
    2540:	26 fd       	sbrc	r18, 6
    2542:	10 c0       	rjmp	.+32     	; 0x2564 <ungetc+0x2c>
    2544:	8f 3f       	cpi	r24, 0xFF	; 255
    2546:	3f ef       	ldi	r19, 0xFF	; 255
    2548:	93 07       	cpc	r25, r19
    254a:	61 f0       	breq	.+24     	; 0x2564 <ungetc+0x2c>
    254c:	82 83       	std	Z+2, r24	; 0x02
    254e:	2f 7d       	andi	r18, 0xDF	; 223
    2550:	20 64       	ori	r18, 0x40	; 64
    2552:	23 83       	std	Z+3, r18	; 0x03
    2554:	26 81       	ldd	r18, Z+6	; 0x06
    2556:	37 81       	ldd	r19, Z+7	; 0x07
    2558:	21 50       	subi	r18, 0x01	; 1
    255a:	31 09       	sbc	r19, r1
    255c:	37 83       	std	Z+7, r19	; 0x07
    255e:	26 83       	std	Z+6, r18	; 0x06
    2560:	99 27       	eor	r25, r25
    2562:	08 95       	ret
    2564:	8f ef       	ldi	r24, 0xFF	; 255
    2566:	9f ef       	ldi	r25, 0xFF	; 255
    2568:	08 95       	ret

0000256a <__ultoa_invert>:
    256a:	fa 01       	movw	r30, r20
    256c:	aa 27       	eor	r26, r26
    256e:	28 30       	cpi	r18, 0x08	; 8
    2570:	51 f1       	breq	.+84     	; 0x25c6 <__ultoa_invert+0x5c>
    2572:	20 31       	cpi	r18, 0x10	; 16
    2574:	81 f1       	breq	.+96     	; 0x25d6 <__ultoa_invert+0x6c>
    2576:	e8 94       	clt
    2578:	6f 93       	push	r22
    257a:	6e 7f       	andi	r22, 0xFE	; 254
    257c:	6e 5f       	subi	r22, 0xFE	; 254
    257e:	7f 4f       	sbci	r23, 0xFF	; 255
    2580:	8f 4f       	sbci	r24, 0xFF	; 255
    2582:	9f 4f       	sbci	r25, 0xFF	; 255
    2584:	af 4f       	sbci	r26, 0xFF	; 255
    2586:	b1 e0       	ldi	r27, 0x01	; 1
    2588:	3e d0       	rcall	.+124    	; 0x2606 <__ultoa_invert+0x9c>
    258a:	b4 e0       	ldi	r27, 0x04	; 4
    258c:	3c d0       	rcall	.+120    	; 0x2606 <__ultoa_invert+0x9c>
    258e:	67 0f       	add	r22, r23
    2590:	78 1f       	adc	r23, r24
    2592:	89 1f       	adc	r24, r25
    2594:	9a 1f       	adc	r25, r26
    2596:	a1 1d       	adc	r26, r1
    2598:	68 0f       	add	r22, r24
    259a:	79 1f       	adc	r23, r25
    259c:	8a 1f       	adc	r24, r26
    259e:	91 1d       	adc	r25, r1
    25a0:	a1 1d       	adc	r26, r1
    25a2:	6a 0f       	add	r22, r26
    25a4:	71 1d       	adc	r23, r1
    25a6:	81 1d       	adc	r24, r1
    25a8:	91 1d       	adc	r25, r1
    25aa:	a1 1d       	adc	r26, r1
    25ac:	20 d0       	rcall	.+64     	; 0x25ee <__ultoa_invert+0x84>
    25ae:	09 f4       	brne	.+2      	; 0x25b2 <__ultoa_invert+0x48>
    25b0:	68 94       	set
    25b2:	3f 91       	pop	r19
    25b4:	2a e0       	ldi	r18, 0x0A	; 10
    25b6:	26 9f       	mul	r18, r22
    25b8:	11 24       	eor	r1, r1
    25ba:	30 19       	sub	r19, r0
    25bc:	30 5d       	subi	r19, 0xD0	; 208
    25be:	31 93       	st	Z+, r19
    25c0:	de f6       	brtc	.-74     	; 0x2578 <__ultoa_invert+0xe>
    25c2:	cf 01       	movw	r24, r30
    25c4:	08 95       	ret
    25c6:	46 2f       	mov	r20, r22
    25c8:	47 70       	andi	r20, 0x07	; 7
    25ca:	40 5d       	subi	r20, 0xD0	; 208
    25cc:	41 93       	st	Z+, r20
    25ce:	b3 e0       	ldi	r27, 0x03	; 3
    25d0:	0f d0       	rcall	.+30     	; 0x25f0 <__ultoa_invert+0x86>
    25d2:	c9 f7       	brne	.-14     	; 0x25c6 <__ultoa_invert+0x5c>
    25d4:	f6 cf       	rjmp	.-20     	; 0x25c2 <__ultoa_invert+0x58>
    25d6:	46 2f       	mov	r20, r22
    25d8:	4f 70       	andi	r20, 0x0F	; 15
    25da:	40 5d       	subi	r20, 0xD0	; 208
    25dc:	4a 33       	cpi	r20, 0x3A	; 58
    25de:	18 f0       	brcs	.+6      	; 0x25e6 <__ultoa_invert+0x7c>
    25e0:	49 5d       	subi	r20, 0xD9	; 217
    25e2:	31 fd       	sbrc	r19, 1
    25e4:	40 52       	subi	r20, 0x20	; 32
    25e6:	41 93       	st	Z+, r20
    25e8:	02 d0       	rcall	.+4      	; 0x25ee <__ultoa_invert+0x84>
    25ea:	a9 f7       	brne	.-22     	; 0x25d6 <__ultoa_invert+0x6c>
    25ec:	ea cf       	rjmp	.-44     	; 0x25c2 <__ultoa_invert+0x58>
    25ee:	b4 e0       	ldi	r27, 0x04	; 4
    25f0:	a6 95       	lsr	r26
    25f2:	97 95       	ror	r25
    25f4:	87 95       	ror	r24
    25f6:	77 95       	ror	r23
    25f8:	67 95       	ror	r22
    25fa:	ba 95       	dec	r27
    25fc:	c9 f7       	brne	.-14     	; 0x25f0 <__ultoa_invert+0x86>
    25fe:	00 97       	sbiw	r24, 0x00	; 0
    2600:	61 05       	cpc	r22, r1
    2602:	71 05       	cpc	r23, r1
    2604:	08 95       	ret
    2606:	9b 01       	movw	r18, r22
    2608:	ac 01       	movw	r20, r24
    260a:	0a 2e       	mov	r0, r26
    260c:	06 94       	lsr	r0
    260e:	57 95       	ror	r21
    2610:	47 95       	ror	r20
    2612:	37 95       	ror	r19
    2614:	27 95       	ror	r18
    2616:	ba 95       	dec	r27
    2618:	c9 f7       	brne	.-14     	; 0x260c <__ultoa_invert+0xa2>
    261a:	62 0f       	add	r22, r18
    261c:	73 1f       	adc	r23, r19
    261e:	84 1f       	adc	r24, r20
    2620:	95 1f       	adc	r25, r21
    2622:	a0 1d       	adc	r26, r0
    2624:	08 95       	ret

00002626 <__ctype_isfalse>:
    2626:	99 27       	eor	r25, r25
    2628:	88 27       	eor	r24, r24

0000262a <__ctype_istrue>:
    262a:	08 95       	ret

0000262c <_exit>:
    262c:	f8 94       	cli

0000262e <__stop_program>:
    262e:	ff cf       	rjmp	.-2      	; 0x262e <__stop_program>
